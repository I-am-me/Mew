☆ 2017-06-13 11:39:04.674 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 11:39:04.683 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:39:04.685 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:39:04.687 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:39:04.758 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 11:39:04.759 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 11:39:04.760 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 11:39:04.794 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 11:39:04.795 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 11:39:04.796 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 11:39:04.800 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 11:39:05.083 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:39:05.083 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:39:05.083 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:39:05.092 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 11:39:05.093 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 11:39:05.102 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 11:39:05.107 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 11:39:05.121 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@163c0e64
☆ 2017-06-13 11:39:05.122 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@163c0e64
☆ 2017-06-13 11:39:05.122 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@163c0e64
☆ 2017-06-13 11:39:05.123 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@a8eb85f
☆ 2017-06-13 11:39:05.123 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7906dc19
☆ 2017-06-13 11:39:05.124 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@66641330
☆ 2017-06-13 11:39:05.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@22dce55a
☆ 2017-06-13 11:39:05.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@22dce55a
☆ 2017-06-13 11:39:05.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22dce55a
☆ 2017-06-13 11:39:05.126 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@5bbf47b
☆ 2017-06-13 11:39:05.127 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@5bbf47b
☆ 2017-06-13 11:39:05.127 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5bbf47b
☆ 2017-06-13 11:39:05.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@4f9b81a5
☆ 2017-06-13 11:39:05.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@4f9b81a5
☆ 2017-06-13 11:39:05.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4f9b81a5
☆ 2017-06-13 11:39:05.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@6ca6de1f
☆ 2017-06-13 11:39:05.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@6ca6de1f
☆ 2017-06-13 11:39:05.130 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6ca6de1f
☆ 2017-06-13 11:39:05.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@244a2976
☆ 2017-06-13 11:39:05.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@244a2976
☆ 2017-06-13 11:39:05.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@244a2976
☆ 2017-06-13 11:39:05.132 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@547e1923
☆ 2017-06-13 11:39:05.132 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@547e1923
☆ 2017-06-13 11:39:05.132 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@547e1923
☆ 2017-06-13 11:39:05.133 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@21fe5f39
☆ 2017-06-13 11:39:05.134 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@21fe5f39
☆ 2017-06-13 11:39:05.134 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21fe5f39
☆ 2017-06-13 11:39:05.135 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26788c15
☆ 2017-06-13 11:39:05.135 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26788c15
☆ 2017-06-13 11:39:05.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@11dcb91e
☆ 2017-06-13 11:39:05.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@11dcb91e
☆ 2017-06-13 11:39:05.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@537b7f88
☆ 2017-06-13 11:39:05.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@537b7f88
☆ 2017-06-13 11:39:05.138 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1af904f0
☆ 2017-06-13 11:39:05.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@8ae5b74
☆ 2017-06-13 11:39:05.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@5c46be8f
☆ 2017-06-13 11:39:05.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c46be8f
☆ 2017-06-13 11:39:05.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@672a37a1
☆ 2017-06-13 11:39:05.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@672a37a1
☆ 2017-06-13 11:39:05.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@2ec8b28c
☆ 2017-06-13 11:39:05.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2ec8b28c
☆ 2017-06-13 11:39:05.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@5ad29e8d
☆ 2017-06-13 11:39:05.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ad29e8d
☆ 2017-06-13 11:39:05.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ad29e8d
☆ 2017-06-13 11:39:05.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@72fd8323
☆ 2017-06-13 11:39:05.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@44e977d3
☆ 2017-06-13 11:39:05.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@44e977d3
☆ 2017-06-13 11:39:05.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@44e977d3
☆ 2017-06-13 11:39:05.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@40c7fea0
☆ 2017-06-13 11:39:05.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@7bbafc7a
☆ 2017-06-13 11:39:05.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7bbafc7a
☆ 2017-06-13 11:39:05.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@6f8be86d
☆ 2017-06-13 11:39:05.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f8be86d
☆ 2017-06-13 11:39:05.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@732e4798
☆ 2017-06-13 11:39:05.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@732e4798
☆ 2017-06-13 11:39:05.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@64ca5e5b
☆ 2017-06-13 11:39:05.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@64ca5e5b
☆ 2017-06-13 11:39:05.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6bc5d8bd
☆ 2017-06-13 11:39:05.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6bc5d8bd
☆ 2017-06-13 11:39:05.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a2d971a
☆ 2017-06-13 11:39:05.153 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@3829e34e
☆ 2017-06-13 11:39:05.153 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@3829e34e
☆ 2017-06-13 11:39:05.153 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@3829e34e
☆ 2017-06-13 11:39:05.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@430b3f63
☆ 2017-06-13 11:39:05.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@430b3f63
☆ 2017-06-13 11:39:05.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@430b3f63
☆ 2017-06-13 11:39:05.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@269f8e2e
☆ 2017-06-13 11:39:05.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@68c60f11
☆ 2017-06-13 11:39:05.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@68c60f11
☆ 2017-06-13 11:39:05.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@68c60f11
☆ 2017-06-13 11:39:05.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@54863bf7
☆ 2017-06-13 11:39:05.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@54863bf7
☆ 2017-06-13 11:39:05.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@54863bf7
☆ 2017-06-13 11:39:05.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@5ac84ea7
☆ 2017-06-13 11:39:05.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@83a79a9
☆ 2017-06-13 11:39:05.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3d77456e
☆ 2017-06-13 11:39:05.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3d77456e
☆ 2017-06-13 11:39:05.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@470f4194
☆ 2017-06-13 11:39:05.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@36deb76c
☆ 2017-06-13 11:39:05.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@36deb76c
☆ 2017-06-13 11:39:05.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@cc2f96
☆ 2017-06-13 11:39:05.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@cc2f96
☆ 2017-06-13 11:39:05.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@16cfb543
☆ 2017-06-13 11:39:05.169 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24a0ebe0
☆ 2017-06-13 11:39:05.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@554db86c
☆ 2017-06-13 11:39:05.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@4d407a18
☆ 2017-06-13 11:39:05.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4d407a18
☆ 2017-06-13 11:39:05.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c517307
☆ 2017-06-13 11:39:05.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@528f4a2f
☆ 2017-06-13 11:39:05.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a8a2c08
☆ 2017-06-13 11:39:05.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1df53d9a
☆ 2017-06-13 11:39:05.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@a2bac68
☆ 2017-06-13 11:39:05.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@225d5130
☆ 2017-06-13 11:39:05.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@392cd31f
☆ 2017-06-13 11:39:05.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d01304d
☆ 2017-06-13 11:39:05.185 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 11:39:05.188 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:39:05.189 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 11:39:05.189 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 11:39:05.192 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 11:39:05.192 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 11:39:05.373 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:39:05.373 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:39:05.373 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 11:39:05.381 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 11:39:05.402 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 11:39:05.458 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 11:39:05.459 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 11:39:05.459 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:39:05.460 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:39:05.460 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 11:39:05.461 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 11:39:05.461 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 11:39:05.462 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:39:05.462 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 11:39:05.463 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 11:39:05.463 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 11:39:05.463 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 11:39:05.463 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:39:05.464 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 11:39:05.486 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 11:39:05.514 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 11:39:05.515 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 11:39:05.515 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 11:39:05.515 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 11:39:05.515 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 11:39:05.515 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4f89b64a
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 11:39:05.548 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 11:39:05.550 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 11:39:05.550 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2bdfd4d2, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 11:39:05.557 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 11:39:05.560 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 11:39:05.562 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 11:39:05.569 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 11:39:05.569 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 11:39:05.571 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 11:39:05.572 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 11:39:05.572 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 11:39:05.573 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ace906a
☆ 2017-06-13 11:39:05.575 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: b785e800-8416-433f-a93f-bc205b6b9d18 (<unnamed>)
☆ 2017-06-13 11:39:05.575 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 11:39:05.610 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 11:39:14.569 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 11:39:14.570 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:39:14.571 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:39:14.575 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:44:48.077 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 11:44:48.085 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:44:48.086 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:44:48.088 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:44:48.138 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 11:44:48.139 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 11:44:48.140 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 11:44:48.154 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 11:44:48.155 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 11:44:48.156 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 11:44:48.159 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 11:44:48.342 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:44:48.342 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:44:48.343 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:44:48.354 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 11:44:48.354 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 11:44:48.363 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 11:44:48.369 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 11:44:48.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@540573cc
☆ 2017-06-13 11:44:48.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@540573cc
☆ 2017-06-13 11:44:48.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@540573cc
☆ 2017-06-13 11:44:48.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4bbd6881
☆ 2017-06-13 11:44:48.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a96730e
☆ 2017-06-13 11:44:48.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@562e2723
☆ 2017-06-13 11:44:48.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@126a071a
☆ 2017-06-13 11:44:48.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@126a071a
☆ 2017-06-13 11:44:48.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@126a071a
☆ 2017-06-13 11:44:48.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2765c220
☆ 2017-06-13 11:44:48.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2765c220
☆ 2017-06-13 11:44:48.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2765c220
☆ 2017-06-13 11:44:48.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@4e04040c
☆ 2017-06-13 11:44:48.390 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@4e04040c
☆ 2017-06-13 11:44:48.390 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4e04040c
☆ 2017-06-13 11:44:48.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@54fc133a
☆ 2017-06-13 11:44:48.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@54fc133a
☆ 2017-06-13 11:44:48.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@54fc133a
☆ 2017-06-13 11:44:48.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@3920c810
☆ 2017-06-13 11:44:48.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@3920c810
☆ 2017-06-13 11:44:48.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@3920c810
☆ 2017-06-13 11:44:48.393 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@16288e41
☆ 2017-06-13 11:44:48.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@16288e41
☆ 2017-06-13 11:44:48.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16288e41
☆ 2017-06-13 11:44:48.395 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@14f4882
☆ 2017-06-13 11:44:48.395 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@14f4882
☆ 2017-06-13 11:44:48.395 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@14f4882
☆ 2017-06-13 11:44:48.396 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4dd52b4c
☆ 2017-06-13 11:44:48.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4dd52b4c
☆ 2017-06-13 11:44:48.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@702b38d6
☆ 2017-06-13 11:44:48.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@702b38d6
☆ 2017-06-13 11:44:48.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@7891cb9f
☆ 2017-06-13 11:44:48.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@7891cb9f
☆ 2017-06-13 11:44:48.399 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15e6bbf0
☆ 2017-06-13 11:44:48.400 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28a2ea61
☆ 2017-06-13 11:44:48.400 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@5d1c2b19
☆ 2017-06-13 11:44:48.400 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d1c2b19
☆ 2017-06-13 11:44:48.402 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@4175c458
☆ 2017-06-13 11:44:48.402 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@4175c458
☆ 2017-06-13 11:44:48.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@5c8f176e
☆ 2017-06-13 11:44:48.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5c8f176e
☆ 2017-06-13 11:44:48.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@11d89c9f
☆ 2017-06-13 11:44:48.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11d89c9f
☆ 2017-06-13 11:44:48.405 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11d89c9f
☆ 2017-06-13 11:44:48.406 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@40e9d52e
☆ 2017-06-13 11:44:48.407 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4c06dcee
☆ 2017-06-13 11:44:48.407 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c06dcee
☆ 2017-06-13 11:44:48.407 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c06dcee
☆ 2017-06-13 11:44:48.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6997ee0f
☆ 2017-06-13 11:44:48.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@67fcc6d0
☆ 2017-06-13 11:44:48.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67fcc6d0
☆ 2017-06-13 11:44:48.409 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@2c59cd4f
☆ 2017-06-13 11:44:48.409 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2c59cd4f
☆ 2017-06-13 11:44:48.410 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@78118108
☆ 2017-06-13 11:44:48.410 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78118108
☆ 2017-06-13 11:44:48.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@1a9525e2
☆ 2017-06-13 11:44:48.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1a9525e2
☆ 2017-06-13 11:44:48.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@48794bdc
☆ 2017-06-13 11:44:48.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@48794bdc
☆ 2017-06-13 11:44:48.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@67912b9c
☆ 2017-06-13 11:44:48.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@638dee89
☆ 2017-06-13 11:44:48.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@638dee89
☆ 2017-06-13 11:44:48.414 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@638dee89
☆ 2017-06-13 11:44:48.414 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3249a669
☆ 2017-06-13 11:44:48.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3249a669
☆ 2017-06-13 11:44:48.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3249a669
☆ 2017-06-13 11:44:48.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@51ac332d
☆ 2017-06-13 11:44:48.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@485b4212
☆ 2017-06-13 11:44:48.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@485b4212
☆ 2017-06-13 11:44:48.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@485b4212
☆ 2017-06-13 11:44:48.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@26f77f6a
☆ 2017-06-13 11:44:48.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@26f77f6a
☆ 2017-06-13 11:44:48.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@26f77f6a
☆ 2017-06-13 11:44:48.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@4546bbc3
☆ 2017-06-13 11:44:48.418 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@77e0ba0a
☆ 2017-06-13 11:44:48.421 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3a8d395f
☆ 2017-06-13 11:44:48.421 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a8d395f
☆ 2017-06-13 11:44:48.421 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ca95d70
☆ 2017-06-13 11:44:48.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@611a08c1
☆ 2017-06-13 11:44:48.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@611a08c1
☆ 2017-06-13 11:44:48.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@2e69a044
☆ 2017-06-13 11:44:48.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2e69a044
☆ 2017-06-13 11:44:48.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29e54691
☆ 2017-06-13 11:44:48.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@394f0b8a
☆ 2017-06-13 11:44:48.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@3e85d5e2
☆ 2017-06-13 11:44:48.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@da6efc8
☆ 2017-06-13 11:44:48.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@da6efc8
☆ 2017-06-13 11:44:48.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a428b1
☆ 2017-06-13 11:44:48.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3fc64f62
☆ 2017-06-13 11:44:48.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c1105bb
☆ 2017-06-13 11:44:48.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@deea9cf
☆ 2017-06-13 11:44:48.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@29abf963
☆ 2017-06-13 11:44:48.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@241b1e6b
☆ 2017-06-13 11:44:48.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@70f3fb8e
☆ 2017-06-13 11:44:48.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@8ab948e
☆ 2017-06-13 11:44:48.442 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 11:44:48.444 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:44:48.445 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 11:44:48.445 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 11:44:48.447 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 11:44:48.447 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 11:44:48.636 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:44:48.636 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:44:48.636 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 11:44:48.645 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 11:44:48.664 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 11:44:48.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 11:44:48.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 11:44:48.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:44:48.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:44:48.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 11:44:48.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 11:44:48.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 11:44:48.724 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:44:48.725 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 11:44:48.725 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 11:44:48.726 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 11:44:48.726 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 11:44:48.726 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:44:48.727 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 11:44:48.748 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 11:44:48.774 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 11:44:48.775 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 11:44:48.775 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 11:44:48.775 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 11:44:48.775 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4b79a6ac
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 11:44:48.807 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 11:44:48.809 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 11:44:48.809 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4294ee89, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 11:44:48.816 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 11:44:48.819 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 11:44:48.820 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 11:44:48.827 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 11:44:48.828 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 11:44:48.829 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 11:44:48.830 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 11:44:48.830 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 11:44:48.831 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5427b553
☆ 2017-06-13 11:44:48.832 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 61d47822-d367-4fde-9136-470faa2d7919 (<unnamed>)
☆ 2017-06-13 11:44:48.833 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 11:44:48.866 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 11:45:18.633 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 11:45:23.179 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 11:45:23.179 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:45:23.180 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:45:23.184 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:45:50.072 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 11:45:50.079 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:45:50.081 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:45:50.082 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:45:50.132 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 11:45:50.133 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 11:45:50.134 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 11:45:50.148 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 11:45:50.149 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 11:45:50.149 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 11:45:50.153 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 11:45:50.314 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:45:50.314 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:45:50.314 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:45:50.323 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 11:45:50.324 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 11:45:50.333 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 11:45:50.338 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 11:45:50.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@702f5334
☆ 2017-06-13 11:45:50.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@702f5334
☆ 2017-06-13 11:45:50.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@702f5334
☆ 2017-06-13 11:45:50.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6b5cfcf3
☆ 2017-06-13 11:45:50.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c449fde
☆ 2017-06-13 11:45:50.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@1a1130a1
☆ 2017-06-13 11:45:50.355 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@35508f6c
☆ 2017-06-13 11:45:50.355 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@35508f6c
☆ 2017-06-13 11:45:50.356 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@35508f6c
☆ 2017-06-13 11:45:50.357 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@3e79c2b0
☆ 2017-06-13 11:45:50.357 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@3e79c2b0
☆ 2017-06-13 11:45:50.357 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e79c2b0
☆ 2017-06-13 11:45:50.358 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@71aef2cc
☆ 2017-06-13 11:45:50.358 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@71aef2cc
☆ 2017-06-13 11:45:50.358 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@71aef2cc
☆ 2017-06-13 11:45:50.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@653fe33a
☆ 2017-06-13 11:45:50.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@653fe33a
☆ 2017-06-13 11:45:50.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@653fe33a
☆ 2017-06-13 11:45:50.360 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@b364988
☆ 2017-06-13 11:45:50.360 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@b364988
☆ 2017-06-13 11:45:50.361 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@b364988
☆ 2017-06-13 11:45:50.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@51496b0f
☆ 2017-06-13 11:45:50.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@51496b0f
☆ 2017-06-13 11:45:50.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51496b0f
☆ 2017-06-13 11:45:50.363 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@2bee1213
☆ 2017-06-13 11:45:50.363 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@2bee1213
☆ 2017-06-13 11:45:50.363 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2bee1213
☆ 2017-06-13 11:45:50.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@210acc29
☆ 2017-06-13 11:45:50.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@210acc29
☆ 2017-06-13 11:45:50.365 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@188c4188
☆ 2017-06-13 11:45:50.365 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@188c4188
☆ 2017-06-13 11:45:50.366 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@595c3b99
☆ 2017-06-13 11:45:50.366 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@595c3b99
☆ 2017-06-13 11:45:50.367 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3a589833
☆ 2017-06-13 11:45:50.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@25a76d2
☆ 2017-06-13 11:45:50.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@3ab7e854
☆ 2017-06-13 11:45:50.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ab7e854
☆ 2017-06-13 11:45:50.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@5326942f
☆ 2017-06-13 11:45:50.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@5326942f
☆ 2017-06-13 11:45:50.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@1d15b301
☆ 2017-06-13 11:45:50.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1d15b301
☆ 2017-06-13 11:45:50.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@7505567c
☆ 2017-06-13 11:45:50.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7505567c
☆ 2017-06-13 11:45:50.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7505567c
☆ 2017-06-13 11:45:50.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@43917dd0
☆ 2017-06-13 11:45:50.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@1efffc7d
☆ 2017-06-13 11:45:50.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1efffc7d
☆ 2017-06-13 11:45:50.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1efffc7d
☆ 2017-06-13 11:45:50.376 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7700e2aa
☆ 2017-06-13 11:45:50.376 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@3a50f38f
☆ 2017-06-13 11:45:50.377 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3a50f38f
☆ 2017-06-13 11:45:50.377 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@3143c350
☆ 2017-06-13 11:45:50.377 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3143c350
☆ 2017-06-13 11:45:50.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@2d5cebce
☆ 2017-06-13 11:45:50.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2d5cebce
☆ 2017-06-13 11:45:50.379 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@9a420e7
☆ 2017-06-13 11:45:50.379 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@9a420e7
☆ 2017-06-13 11:45:50.380 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6565363e
☆ 2017-06-13 11:45:50.380 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6565363e
☆ 2017-06-13 11:45:50.381 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@53c52327
☆ 2017-06-13 11:45:50.381 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@60291d54
☆ 2017-06-13 11:45:50.382 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@60291d54
☆ 2017-06-13 11:45:50.382 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@60291d54
☆ 2017-06-13 11:45:50.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@446811d5
☆ 2017-06-13 11:45:50.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@446811d5
☆ 2017-06-13 11:45:50.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@446811d5
☆ 2017-06-13 11:45:50.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@37eb274e
☆ 2017-06-13 11:45:50.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@1e80010c
☆ 2017-06-13 11:45:50.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@1e80010c
☆ 2017-06-13 11:45:50.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@1e80010c
☆ 2017-06-13 11:45:50.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6321b6ff
☆ 2017-06-13 11:45:50.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6321b6ff
☆ 2017-06-13 11:45:50.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6321b6ff
☆ 2017-06-13 11:45:50.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1bff4f3b
☆ 2017-06-13 11:45:50.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@66ffbd77
☆ 2017-06-13 11:45:50.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@e0a9855
☆ 2017-06-13 11:45:50.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e0a9855
☆ 2017-06-13 11:45:50.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@337392be
☆ 2017-06-13 11:45:50.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@531deada
☆ 2017-06-13 11:45:50.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@531deada
☆ 2017-06-13 11:45:50.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@1bd8a9a6
☆ 2017-06-13 11:45:50.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1bd8a9a6
☆ 2017-06-13 11:45:50.395 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9df5076
☆ 2017-06-13 11:45:50.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2e8a97a1
☆ 2017-06-13 11:45:50.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@48afbc7e
☆ 2017-06-13 11:45:50.400 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@34d1f44
☆ 2017-06-13 11:45:50.401 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34d1f44
☆ 2017-06-13 11:45:50.401 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@148cdfe6
☆ 2017-06-13 11:45:50.401 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f50550c
☆ 2017-06-13 11:45:50.401 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@23ee2d99
☆ 2017-06-13 11:45:50.401 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6f2c3500
☆ 2017-06-13 11:45:50.401 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d2da4ec
☆ 2017-06-13 11:45:50.402 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60286a70
☆ 2017-06-13 11:45:50.402 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@32f81109
☆ 2017-06-13 11:45:50.402 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c72b663
☆ 2017-06-13 11:45:50.409 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 11:45:50.411 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:45:50.412 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 11:45:50.412 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 11:45:50.414 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 11:45:50.414 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 11:45:50.591 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:45:50.592 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:45:50.592 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 11:45:50.600 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 11:45:50.619 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 11:45:50.674 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 11:45:50.674 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 11:45:50.675 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:45:50.675 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:45:50.675 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 11:45:50.676 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 11:45:50.676 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 11:45:50.677 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:45:50.677 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 11:45:50.678 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 11:45:50.678 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 11:45:50.678 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 11:45:50.678 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:45:50.679 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 11:45:50.699 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 11:45:50.727 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 11:45:50.728 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 11:45:50.728 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 11:45:50.728 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 11:45:50.728 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3c878889
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 11:45:50.766 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 11:45:50.767 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 11:45:50.768 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ac7e81b, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 11:45:50.775 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 11:45:50.778 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 11:45:50.779 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 11:45:50.786 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 11:45:50.787 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 11:45:50.789 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 11:45:50.790 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 11:45:50.790 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 11:45:50.792 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2831fb73
☆ 2017-06-13 11:45:50.794 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: ef08e9da-fbe1-49f0-8b74-87fbd2bfc880 (<unnamed>)
☆ 2017-06-13 11:45:50.794 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 11:45:50.832 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 11:45:57.824 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 11:45:57.825 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:45:57.825 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:45:57.829 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:46:21.068 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 11:46:21.076 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:46:21.077 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:46:21.079 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:46:21.128 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 11:46:21.129 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 11:46:21.130 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 11:46:21.143 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 11:46:21.145 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 11:46:21.145 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 11:46:21.149 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 11:46:21.304 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:46:21.304 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:46:21.304 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:46:21.313 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 11:46:21.314 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 11:46:21.323 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 11:46:21.328 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 11:46:21.341 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@61765a1d
☆ 2017-06-13 11:46:21.342 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@61765a1d
☆ 2017-06-13 11:46:21.342 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@61765a1d
☆ 2017-06-13 11:46:21.343 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@789647f5
☆ 2017-06-13 11:46:21.343 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@4d1036b9
☆ 2017-06-13 11:46:21.344 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@267f8a9f
☆ 2017-06-13 11:46:21.345 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@6f0ec003
☆ 2017-06-13 11:46:21.345 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@6f0ec003
☆ 2017-06-13 11:46:21.345 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6f0ec003
☆ 2017-06-13 11:46:21.346 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@6419797
☆ 2017-06-13 11:46:21.346 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@6419797
☆ 2017-06-13 11:46:21.346 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6419797
☆ 2017-06-13 11:46:21.347 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@7de22255
☆ 2017-06-13 11:46:21.347 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@7de22255
☆ 2017-06-13 11:46:21.347 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7de22255
☆ 2017-06-13 11:46:21.348 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@7eded09e
☆ 2017-06-13 11:46:21.348 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@7eded09e
☆ 2017-06-13 11:46:21.348 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7eded09e
☆ 2017-06-13 11:46:21.349 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@529db04
☆ 2017-06-13 11:46:21.349 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@529db04
☆ 2017-06-13 11:46:21.350 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@529db04
☆ 2017-06-13 11:46:21.351 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4bb8a302
☆ 2017-06-13 11:46:21.351 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4bb8a302
☆ 2017-06-13 11:46:21.351 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4bb8a302
☆ 2017-06-13 11:46:21.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@66d34a3d
☆ 2017-06-13 11:46:21.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@66d34a3d
☆ 2017-06-13 11:46:21.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66d34a3d
☆ 2017-06-13 11:46:21.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3d870228
☆ 2017-06-13 11:46:21.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3d870228
☆ 2017-06-13 11:46:21.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b79e214
☆ 2017-06-13 11:46:21.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b79e214
☆ 2017-06-13 11:46:21.355 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@192ac3af
☆ 2017-06-13 11:46:21.355 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@192ac3af
☆ 2017-06-13 11:46:21.356 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2f164faf
☆ 2017-06-13 11:46:21.356 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@87d9bb1
☆ 2017-06-13 11:46:21.357 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@743e087
☆ 2017-06-13 11:46:21.357 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@743e087
☆ 2017-06-13 11:46:21.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@173779bd
☆ 2017-06-13 11:46:21.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@173779bd
☆ 2017-06-13 11:46:21.360 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@36b9bf6a
☆ 2017-06-13 11:46:21.360 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@36b9bf6a
☆ 2017-06-13 11:46:21.361 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3ee7fe81
☆ 2017-06-13 11:46:21.361 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3ee7fe81
☆ 2017-06-13 11:46:21.361 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3ee7fe81
☆ 2017-06-13 11:46:21.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32cf591e
☆ 2017-06-13 11:46:21.363 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@7f53f3e9
☆ 2017-06-13 11:46:21.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f53f3e9
☆ 2017-06-13 11:46:21.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f53f3e9
☆ 2017-06-13 11:46:21.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@43b59b08
☆ 2017-06-13 11:46:21.365 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@28c1c845
☆ 2017-06-13 11:46:21.365 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@28c1c845
☆ 2017-06-13 11:46:21.366 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@74b2ef83
☆ 2017-06-13 11:46:21.366 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@74b2ef83
☆ 2017-06-13 11:46:21.367 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@90d9a12
☆ 2017-06-13 11:46:21.367 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@90d9a12
☆ 2017-06-13 11:46:21.367 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@68ea7a68
☆ 2017-06-13 11:46:21.367 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68ea7a68
☆ 2017-06-13 11:46:21.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@f20cc82
☆ 2017-06-13 11:46:21.369 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@f20cc82
☆ 2017-06-13 11:46:21.369 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13e0a609
☆ 2017-06-13 11:46:21.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4744053
☆ 2017-06-13 11:46:21.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4744053
☆ 2017-06-13 11:46:21.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4744053
☆ 2017-06-13 11:46:21.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3f31b7f
☆ 2017-06-13 11:46:21.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3f31b7f
☆ 2017-06-13 11:46:21.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3f31b7f
☆ 2017-06-13 11:46:21.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@27e24636
☆ 2017-06-13 11:46:21.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@777d6c98
☆ 2017-06-13 11:46:21.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@777d6c98
☆ 2017-06-13 11:46:21.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@777d6c98
☆ 2017-06-13 11:46:21.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6cd16a3f
☆ 2017-06-13 11:46:21.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6cd16a3f
☆ 2017-06-13 11:46:21.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6cd16a3f
☆ 2017-06-13 11:46:21.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@5bc35dcd
☆ 2017-06-13 11:46:21.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@3487b570
☆ 2017-06-13 11:46:21.377 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3d13d151
☆ 2017-06-13 11:46:21.377 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3d13d151
☆ 2017-06-13 11:46:21.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@eb65b23
☆ 2017-06-13 11:46:21.380 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@5a9ba509
☆ 2017-06-13 11:46:21.380 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a9ba509
☆ 2017-06-13 11:46:21.382 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3ded2656
☆ 2017-06-13 11:46:21.382 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3ded2656
☆ 2017-06-13 11:46:21.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@61846e12
☆ 2017-06-13 11:46:21.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4dfbfff
☆ 2017-06-13 11:46:21.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@1df3575a
☆ 2017-06-13 11:46:21.390 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@34e33f25
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34e33f25
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e6beb86
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@235ce779
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c7d019a
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3bffd5c6
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6a992ee4
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e3a7be1
☆ 2017-06-13 11:46:21.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1affde6d
☆ 2017-06-13 11:46:21.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5feb7911
☆ 2017-06-13 11:46:21.399 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 11:46:21.401 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:46:21.402 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 11:46:21.402 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 11:46:21.404 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 11:46:21.404 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 11:46:21.581 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:46:21.582 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:46:21.582 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 11:46:21.590 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 11:46:21.609 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 11:46:21.665 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 11:46:21.666 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 11:46:21.666 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:46:21.666 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:46:21.667 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 11:46:21.667 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 11:46:21.668 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 11:46:21.668 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:46:21.669 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 11:46:21.669 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 11:46:21.670 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 11:46:21.670 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 11:46:21.670 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:46:21.671 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 11:46:21.693 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 11:46:21.720 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 11:46:21.721 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3dbbabd8
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 11:46:21.725 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 11:46:21.725 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 11:46:21.725 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 11:46:21.725 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 11:46:21.725 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 11:46:21.725 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 11:46:21.754 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 11:46:21.755 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 11:46:21.755 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4802857d, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 11:46:21.763 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 11:46:21.765 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 11:46:21.767 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 11:46:21.774 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 11:46:21.774 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 11:46:21.776 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 11:46:21.776 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 11:46:21.777 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 11:46:21.778 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7a0e7d41
☆ 2017-06-13 11:46:21.779 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: b4e9dcbf-4f0e-4ddb-865b-85bc2010cba7 (<unnamed>)
☆ 2017-06-13 11:46:21.779 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 11:46:21.813 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 11:46:38.935 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 11:46:38.936 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:46:38.936 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:46:38.940 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:42:07.671 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:42:07.679 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:42:07.680 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:42:07.682 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:42:07.752 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:42:07.753 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:42:07.754 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:42:07.767 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:42:07.769 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:42:07.769 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:42:07.773 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:42:07.921 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:42:07.922 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:42:07.922 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:42:07.931 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:42:07.932 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:42:07.942 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:42:07.947 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:42:07.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@27fd5e1b
☆ 2017-06-13 12:42:07.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@27fd5e1b
☆ 2017-06-13 12:42:07.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27fd5e1b
☆ 2017-06-13 12:42:07.963 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4adee69e
☆ 2017-06-13 12:42:07.964 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b5b44b6
☆ 2017-06-13 12:42:07.964 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@5f71bc76
☆ 2017-06-13 12:42:07.965 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@5ae71062
☆ 2017-06-13 12:42:07.965 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@5ae71062
☆ 2017-06-13 12:42:07.966 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5ae71062
☆ 2017-06-13 12:42:07.966 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@75fc551e
☆ 2017-06-13 12:42:07.967 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@75fc551e
☆ 2017-06-13 12:42:07.967 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@75fc551e
☆ 2017-06-13 12:42:07.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@2a0052b9
☆ 2017-06-13 12:42:07.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@2a0052b9
☆ 2017-06-13 12:42:07.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a0052b9
☆ 2017-06-13 12:42:07.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@2490690e
☆ 2017-06-13 12:42:07.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@2490690e
☆ 2017-06-13 12:42:07.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2490690e
☆ 2017-06-13 12:42:08.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@573c5faf
☆ 2017-06-13 12:42:08.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@573c5faf
☆ 2017-06-13 12:42:08.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@573c5faf
☆ 2017-06-13 12:42:08.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7a630d9a
☆ 2017-06-13 12:42:08.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7a630d9a
☆ 2017-06-13 12:42:08.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7a630d9a
☆ 2017-06-13 12:42:08.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@4723f822
☆ 2017-06-13 12:42:08.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@4723f822
☆ 2017-06-13 12:42:08.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4723f822
☆ 2017-06-13 12:42:08.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f464548
☆ 2017-06-13 12:42:08.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f464548
☆ 2017-06-13 12:42:08.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a916e0
☆ 2017-06-13 12:42:08.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a916e0
☆ 2017-06-13 12:42:08.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@501654da
☆ 2017-06-13 12:42:08.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@501654da
☆ 2017-06-13 12:42:08.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@25fd585a
☆ 2017-06-13 12:42:08.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@21649026
☆ 2017-06-13 12:42:08.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@2d7fd0a8
☆ 2017-06-13 12:42:08.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@2d7fd0a8
☆ 2017-06-13 12:42:08.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@2c069028
☆ 2017-06-13 12:42:08.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@2c069028
☆ 2017-06-13 12:42:08.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@16c771a5
☆ 2017-06-13 12:42:08.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@16c771a5
☆ 2017-06-13 12:42:08.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@35db726b
☆ 2017-06-13 12:42:08.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35db726b
☆ 2017-06-13 12:42:08.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35db726b
☆ 2017-06-13 12:42:08.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@621842de
☆ 2017-06-13 12:42:08.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@778b6bd7
☆ 2017-06-13 12:42:08.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@778b6bd7
☆ 2017-06-13 12:42:08.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@778b6bd7
☆ 2017-06-13 12:42:08.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63d1200a
☆ 2017-06-13 12:42:08.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2f913584
☆ 2017-06-13 12:42:08.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f913584
☆ 2017-06-13 12:42:08.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@7b5787e4
☆ 2017-06-13 12:42:08.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7b5787e4
☆ 2017-06-13 12:42:08.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7e0305cb
☆ 2017-06-13 12:42:08.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7e0305cb
☆ 2017-06-13 12:42:08.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@29cb6311
☆ 2017-06-13 12:42:08.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@29cb6311
☆ 2017-06-13 12:42:08.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e210f53
☆ 2017-06-13 12:42:08.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e210f53
☆ 2017-06-13 12:42:08.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@dfbe79d
☆ 2017-06-13 12:42:08.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@132b25d7
☆ 2017-06-13 12:42:08.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@132b25d7
☆ 2017-06-13 12:42:08.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@132b25d7
☆ 2017-06-13 12:42:08.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@a1bce87
☆ 2017-06-13 12:42:08.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@a1bce87
☆ 2017-06-13 12:42:08.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@a1bce87
☆ 2017-06-13 12:42:08.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@3631fa0c
☆ 2017-06-13 12:42:08.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3f002a50
☆ 2017-06-13 12:42:08.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f002a50
☆ 2017-06-13 12:42:08.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3f002a50
☆ 2017-06-13 12:42:08.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@49ecb1b7
☆ 2017-06-13 12:42:08.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@49ecb1b7
☆ 2017-06-13 12:42:08.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@49ecb1b7
☆ 2017-06-13 12:42:08.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@7c4215a5
☆ 2017-06-13 12:42:08.029 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@7cbf8b3b
☆ 2017-06-13 12:42:08.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@2ecc653e
☆ 2017-06-13 12:42:08.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2ecc653e
☆ 2017-06-13 12:42:08.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17b23e40
☆ 2017-06-13 12:42:08.034 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@29e55571
☆ 2017-06-13 12:42:08.035 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@29e55571
☆ 2017-06-13 12:42:08.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@52e8040f
☆ 2017-06-13 12:42:08.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@52e8040f
☆ 2017-06-13 12:42:08.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e720dd7
☆ 2017-06-13 12:42:08.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@702ef0b4
☆ 2017-06-13 12:42:08.041 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@2eb5ba51
☆ 2017-06-13 12:42:08.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@35a19ad5
☆ 2017-06-13 12:42:08.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35a19ad5
☆ 2017-06-13 12:42:08.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ac4d9b5
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@338a8d0a
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@661febed
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@651a52bf
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@49bf36d8
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2eba0038
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3763d681
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@dbf578
☆ 2017-06-13 12:42:08.052 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:42:08.054 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:42:08.055 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:42:08.055 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:42:08.057 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:42:08.057 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:42:08.198 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:42:08.198 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:42:08.198 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:42:08.207 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:42:08.228 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:42:08.284 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:42:08.284 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:42:08.285 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:42:08.285 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:42:08.285 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:42:08.286 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:42:08.286 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:42:08.287 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:42:08.288 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:42:08.288 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:42:08.288 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:42:08.289 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:42:08.289 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:42:08.289 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:42:08.310 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:42:08.337 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:42:08.338 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@20962af9
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:42:08.342 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:42:08.342 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:42:08.342 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:42:08.342 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:42:08.371 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:42:08.373 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:42:08.373 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@62e55497, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:42:08.380 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:42:08.383 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:42:08.385 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:42:08.392 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:42:08.392 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:42:08.394 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:42:08.395 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:42:08.395 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:42:08.396 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5133518b
☆ 2017-06-13 12:42:08.398 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: dc0c9153-30e8-404b-8260-16fd37ee5a35 (<unnamed>)
☆ 2017-06-13 12:42:08.398 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:42:08.438 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:42:08.488 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:42:14.490 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:42:14.491 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:42:14.491 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:42:14.495 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:43:08.061 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:43:08.069 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:43:08.070 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:43:08.072 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:43:08.140 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:43:08.141 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:43:08.142 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:43:08.155 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:43:08.156 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:43:08.157 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:43:08.160 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:43:08.323 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:43:08.323 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:43:08.323 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:43:08.332 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:43:08.333 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:43:08.343 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:43:08.351 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:43:08.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@500cc100
☆ 2017-06-13 12:43:08.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@500cc100
☆ 2017-06-13 12:43:08.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@500cc100
☆ 2017-06-13 12:43:08.369 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@ded2c04
☆ 2017-06-13 12:43:08.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3655ef20
☆ 2017-06-13 12:43:08.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@d4d2eb5
☆ 2017-06-13 12:43:08.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4bca5623
☆ 2017-06-13 12:43:08.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4bca5623
☆ 2017-06-13 12:43:08.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4bca5623
☆ 2017-06-13 12:43:08.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2979158e
☆ 2017-06-13 12:43:08.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2979158e
☆ 2017-06-13 12:43:08.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2979158e
☆ 2017-06-13 12:43:08.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@fad9f99
☆ 2017-06-13 12:43:08.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@fad9f99
☆ 2017-06-13 12:43:08.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@fad9f99
☆ 2017-06-13 12:43:08.410 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@3c09e4f9
☆ 2017-06-13 12:43:08.410 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@3c09e4f9
☆ 2017-06-13 12:43:08.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c09e4f9
☆ 2017-06-13 12:43:08.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2a8f00d8
☆ 2017-06-13 12:43:08.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2a8f00d8
☆ 2017-06-13 12:43:08.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@2a8f00d8
☆ 2017-06-13 12:43:08.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5d44219c
☆ 2017-06-13 12:43:08.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5d44219c
☆ 2017-06-13 12:43:08.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d44219c
☆ 2017-06-13 12:43:08.414 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@176c8b29
☆ 2017-06-13 12:43:08.414 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@176c8b29
☆ 2017-06-13 12:43:08.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@176c8b29
☆ 2017-06-13 12:43:08.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@14e56593
☆ 2017-06-13 12:43:08.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@14e56593
☆ 2017-06-13 12:43:08.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a6ab6f3
☆ 2017-06-13 12:43:08.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a6ab6f3
☆ 2017-06-13 12:43:08.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@6bc6023a
☆ 2017-06-13 12:43:08.418 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@6bc6023a
☆ 2017-06-13 12:43:08.418 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@346c55a0
☆ 2017-06-13 12:43:08.419 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5b869cea
☆ 2017-06-13 12:43:08.419 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@68eb9cfa
☆ 2017-06-13 12:43:08.420 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@68eb9cfa
☆ 2017-06-13 12:43:08.421 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@7cae4e4f
☆ 2017-06-13 12:43:08.421 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@7cae4e4f
☆ 2017-06-13 12:43:08.422 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@51629686
☆ 2017-06-13 12:43:08.423 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51629686
☆ 2017-06-13 12:43:08.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@459d2af3
☆ 2017-06-13 12:43:08.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@459d2af3
☆ 2017-06-13 12:43:08.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@459d2af3
☆ 2017-06-13 12:43:08.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@bff87e5
☆ 2017-06-13 12:43:08.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@1c626987
☆ 2017-06-13 12:43:08.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c626987
☆ 2017-06-13 12:43:08.427 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c626987
☆ 2017-06-13 12:43:08.427 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b365bc8
☆ 2017-06-13 12:43:08.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@6cd8d862
☆ 2017-06-13 12:43:08.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6cd8d862
☆ 2017-06-13 12:43:08.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@59a3d0f4
☆ 2017-06-13 12:43:08.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59a3d0f4
☆ 2017-06-13 12:43:08.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b9094f2
☆ 2017-06-13 12:43:08.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b9094f2
☆ 2017-06-13 12:43:08.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@38f7b5f8
☆ 2017-06-13 12:43:08.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38f7b5f8
☆ 2017-06-13 12:43:08.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c70878f
☆ 2017-06-13 12:43:08.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c70878f
☆ 2017-06-13 12:43:08.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2765022c
☆ 2017-06-13 12:43:08.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4fa5dd7a
☆ 2017-06-13 12:43:08.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4fa5dd7a
☆ 2017-06-13 12:43:08.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4fa5dd7a
☆ 2017-06-13 12:43:08.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@14af879c
☆ 2017-06-13 12:43:08.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@14af879c
☆ 2017-06-13 12:43:08.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@14af879c
☆ 2017-06-13 12:43:08.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@28327798
☆ 2017-06-13 12:43:08.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3f3e0609
☆ 2017-06-13 12:43:08.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f3e0609
☆ 2017-06-13 12:43:08.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3f3e0609
☆ 2017-06-13 12:43:08.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@edb844c
☆ 2017-06-13 12:43:08.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@edb844c
☆ 2017-06-13 12:43:08.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@edb844c
☆ 2017-06-13 12:43:08.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@76c05bcc
☆ 2017-06-13 12:43:08.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@4232b037
☆ 2017-06-13 12:43:08.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@46f6e99a
☆ 2017-06-13 12:43:08.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46f6e99a
☆ 2017-06-13 12:43:08.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@304f1ffb
☆ 2017-06-13 12:43:08.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@33cf77d6
☆ 2017-06-13 12:43:08.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@33cf77d6
☆ 2017-06-13 12:43:08.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@52474e74
☆ 2017-06-13 12:43:08.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@52474e74
☆ 2017-06-13 12:43:08.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23168b02
☆ 2017-06-13 12:43:08.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@152497cd
☆ 2017-06-13 12:43:08.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@3be730b2
☆ 2017-06-13 12:43:08.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@f5860b9
☆ 2017-06-13 12:43:08.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f5860b9
☆ 2017-06-13 12:43:08.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@547c699e
☆ 2017-06-13 12:43:08.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18ed9600
☆ 2017-06-13 12:43:08.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@19703909
☆ 2017-06-13 12:43:08.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@510bc811
☆ 2017-06-13 12:43:08.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@668c7b37
☆ 2017-06-13 12:43:08.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1225bc70
☆ 2017-06-13 12:43:08.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@a85674c
☆ 2017-06-13 12:43:08.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5417d4d
☆ 2017-06-13 12:43:08.470 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:43:08.472 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:43:08.473 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:43:08.473 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:43:08.475 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:43:08.476 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:43:08.617 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:43:08.617 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:43:08.618 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:43:08.626 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:43:08.646 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:43:08.703 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:43:08.703 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:43:08.703 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:43:08.704 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:43:08.704 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:43:08.705 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:43:08.705 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:43:08.706 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:43:08.706 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:43:08.707 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:43:08.707 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:43:08.707 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:43:08.707 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:43:08.708 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:43:08.730 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:43:08.757 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@69670de4
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:43:08.789 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:43:08.791 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:43:08.791 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5a5a267f, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:43:08.798 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:43:08.801 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:43:08.803 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:43:08.810 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:43:08.810 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:43:08.812 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:43:08.812 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:43:08.813 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:43:08.814 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1f62e97d
☆ 2017-06-13 12:43:08.815 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 4f481689-406d-4efe-9761-8015fb5c9e8a (<unnamed>)
☆ 2017-06-13 12:43:08.815 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:43:08.864 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:43:08.919 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:43:38.614 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 12:44:25.193 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:44:25.201 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:44:25.202 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:44:25.204 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:44:25.272 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:44:25.273 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:44:25.274 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:44:25.287 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:44:25.288 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:44:25.288 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:44:25.292 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:44:25.439 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:44:25.439 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:44:25.439 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:44:25.448 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:44:25.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:44:25.457 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:44:25.463 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:44:25.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@500cc100
☆ 2017-06-13 12:44:25.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@500cc100
☆ 2017-06-13 12:44:25.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@500cc100
☆ 2017-06-13 12:44:25.479 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@ded2c04
☆ 2017-06-13 12:44:25.479 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3655ef20
☆ 2017-06-13 12:44:25.480 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@d4d2eb5
☆ 2017-06-13 12:44:25.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4bca5623
☆ 2017-06-13 12:44:25.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4bca5623
☆ 2017-06-13 12:44:25.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4bca5623
☆ 2017-06-13 12:44:25.482 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2979158e
☆ 2017-06-13 12:44:25.482 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2979158e
☆ 2017-06-13 12:44:25.482 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2979158e
☆ 2017-06-13 12:44:25.483 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@fad9f99
☆ 2017-06-13 12:44:25.484 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@fad9f99
☆ 2017-06-13 12:44:25.484 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@fad9f99
☆ 2017-06-13 12:44:25.518 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@3c09e4f9
☆ 2017-06-13 12:44:25.518 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@3c09e4f9
☆ 2017-06-13 12:44:25.518 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c09e4f9
☆ 2017-06-13 12:44:25.519 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2a8f00d8
☆ 2017-06-13 12:44:25.519 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2a8f00d8
☆ 2017-06-13 12:44:25.520 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@2a8f00d8
☆ 2017-06-13 12:44:25.521 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5d44219c
☆ 2017-06-13 12:44:25.521 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5d44219c
☆ 2017-06-13 12:44:25.521 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d44219c
☆ 2017-06-13 12:44:25.522 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@176c8b29
☆ 2017-06-13 12:44:25.522 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@176c8b29
☆ 2017-06-13 12:44:25.523 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@176c8b29
☆ 2017-06-13 12:44:25.524 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@14e56593
☆ 2017-06-13 12:44:25.524 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@14e56593
☆ 2017-06-13 12:44:25.525 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a6ab6f3
☆ 2017-06-13 12:44:25.525 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a6ab6f3
☆ 2017-06-13 12:44:25.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@6bc6023a
☆ 2017-06-13 12:44:25.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@6bc6023a
☆ 2017-06-13 12:44:25.527 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@346c55a0
☆ 2017-06-13 12:44:25.527 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5b869cea
☆ 2017-06-13 12:44:25.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@68eb9cfa
☆ 2017-06-13 12:44:25.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@68eb9cfa
☆ 2017-06-13 12:44:25.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@7cae4e4f
☆ 2017-06-13 12:44:25.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@7cae4e4f
☆ 2017-06-13 12:44:25.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@51629686
☆ 2017-06-13 12:44:25.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51629686
☆ 2017-06-13 12:44:25.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@459d2af3
☆ 2017-06-13 12:44:25.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@459d2af3
☆ 2017-06-13 12:44:25.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@459d2af3
☆ 2017-06-13 12:44:25.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@bff87e5
☆ 2017-06-13 12:44:25.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@1c626987
☆ 2017-06-13 12:44:25.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c626987
☆ 2017-06-13 12:44:25.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c626987
☆ 2017-06-13 12:44:25.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b365bc8
☆ 2017-06-13 12:44:25.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@6cd8d862
☆ 2017-06-13 12:44:25.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6cd8d862
☆ 2017-06-13 12:44:25.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@59a3d0f4
☆ 2017-06-13 12:44:25.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59a3d0f4
☆ 2017-06-13 12:44:25.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b9094f2
☆ 2017-06-13 12:44:25.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b9094f2
☆ 2017-06-13 12:44:25.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@38f7b5f8
☆ 2017-06-13 12:44:25.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38f7b5f8
☆ 2017-06-13 12:44:25.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c70878f
☆ 2017-06-13 12:44:25.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c70878f
☆ 2017-06-13 12:44:25.541 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2765022c
☆ 2017-06-13 12:44:25.541 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4fa5dd7a
☆ 2017-06-13 12:44:25.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4fa5dd7a
☆ 2017-06-13 12:44:25.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4fa5dd7a
☆ 2017-06-13 12:44:25.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@14af879c
☆ 2017-06-13 12:44:25.543 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@14af879c
☆ 2017-06-13 12:44:25.543 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@14af879c
☆ 2017-06-13 12:44:25.543 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@28327798
☆ 2017-06-13 12:44:25.544 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3f3e0609
☆ 2017-06-13 12:44:25.544 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f3e0609
☆ 2017-06-13 12:44:25.544 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3f3e0609
☆ 2017-06-13 12:44:25.545 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@edb844c
☆ 2017-06-13 12:44:25.545 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@edb844c
☆ 2017-06-13 12:44:25.545 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@edb844c
☆ 2017-06-13 12:44:25.546 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@76c05bcc
☆ 2017-06-13 12:44:25.546 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@4232b037
☆ 2017-06-13 12:44:25.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@46f6e99a
☆ 2017-06-13 12:44:25.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46f6e99a
☆ 2017-06-13 12:44:25.550 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@304f1ffb
☆ 2017-06-13 12:44:25.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@33cf77d6
☆ 2017-06-13 12:44:25.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@33cf77d6
☆ 2017-06-13 12:44:25.554 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@52474e74
☆ 2017-06-13 12:44:25.554 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@52474e74
☆ 2017-06-13 12:44:25.555 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23168b02
☆ 2017-06-13 12:44:25.557 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@152497cd
☆ 2017-06-13 12:44:25.559 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@3be730b2
☆ 2017-06-13 12:44:25.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@f5860b9
☆ 2017-06-13 12:44:25.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f5860b9
☆ 2017-06-13 12:44:25.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@547c699e
☆ 2017-06-13 12:44:25.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18ed9600
☆ 2017-06-13 12:44:25.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@19703909
☆ 2017-06-13 12:44:25.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@510bc811
☆ 2017-06-13 12:44:25.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@668c7b37
☆ 2017-06-13 12:44:25.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1225bc70
☆ 2017-06-13 12:44:25.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@a85674c
☆ 2017-06-13 12:44:25.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5417d4d
☆ 2017-06-13 12:44:25.570 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:44:25.572 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:44:25.572 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:44:25.572 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:44:25.574 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:44:25.575 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:44:25.715 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:44:25.716 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:44:25.716 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:44:25.724 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:44:25.745 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:44:25.800 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:44:25.801 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:44:25.801 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:44:25.802 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:44:25.802 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:44:25.803 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:44:25.803 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:44:25.804 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:44:25.804 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:44:25.805 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:44:25.805 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:44:25.805 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:44:25.806 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:44:25.806 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:44:25.828 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:44:25.855 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:44:25.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:44:25.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@69670de4
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:44:25.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:44:25.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:44:25.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:44:25.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:44:25.891 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:44:25.892 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:44:25.893 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5a5a267f, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:44:25.900 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:44:25.903 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:44:25.905 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:44:25.912 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:44:25.912 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:44:25.914 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:44:25.915 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:44:25.915 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:44:25.916 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1f62e97d
☆ 2017-06-13 12:44:25.917 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: b7c810ad-5895-4364-9a47-8065f7880301 (<unnamed>)
☆ 2017-06-13 12:44:25.918 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:44:25.951 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:44:25.992 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:44:28.619 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:44:28.620 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:44:28.620 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:44:28.628 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:46:12.256 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:46:12.264 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:46:12.266 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:46:12.267 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:46:12.339 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:46:12.341 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:46:12.342 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:46:12.355 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:46:12.356 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:46:12.357 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:46:12.360 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:46:12.510 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:46:12.510 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:46:12.510 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:46:12.519 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:46:12.520 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:46:12.529 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:46:12.535 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:46:12.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@3d2273
☆ 2017-06-13 12:46:12.550 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@3d2273
☆ 2017-06-13 12:46:12.550 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3d2273
☆ 2017-06-13 12:46:12.551 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@285ff0ba
☆ 2017-06-13 12:46:12.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@8d39691
☆ 2017-06-13 12:46:12.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ff7bc2f
☆ 2017-06-13 12:46:12.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@55737889
☆ 2017-06-13 12:46:12.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@55737889
☆ 2017-06-13 12:46:12.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55737889
☆ 2017-06-13 12:46:12.554 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@72e3575
☆ 2017-06-13 12:46:12.554 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@72e3575
☆ 2017-06-13 12:46:12.555 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72e3575
☆ 2017-06-13 12:46:12.556 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@35ecc128
☆ 2017-06-13 12:46:12.556 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@35ecc128
☆ 2017-06-13 12:46:12.556 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35ecc128
☆ 2017-06-13 12:46:12.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@6b9f1eaa
☆ 2017-06-13 12:46:12.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@6b9f1eaa
☆ 2017-06-13 12:46:12.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b9f1eaa
☆ 2017-06-13 12:46:12.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@1d88bf21
☆ 2017-06-13 12:46:12.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@1d88bf21
☆ 2017-06-13 12:46:12.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d88bf21
☆ 2017-06-13 12:46:12.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5b8daff
☆ 2017-06-13 12:46:12.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5b8daff
☆ 2017-06-13 12:46:12.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b8daff
☆ 2017-06-13 12:46:12.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@10f93804
☆ 2017-06-13 12:46:12.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@10f93804
☆ 2017-06-13 12:46:12.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@10f93804
☆ 2017-06-13 12:46:12.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@188d11f6
☆ 2017-06-13 12:46:12.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@188d11f6
☆ 2017-06-13 12:46:12.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5d8ade32
☆ 2017-06-13 12:46:12.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5d8ade32
☆ 2017-06-13 12:46:12.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@70968ccd
☆ 2017-06-13 12:46:12.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@70968ccd
☆ 2017-06-13 12:46:12.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c9f8e9b
☆ 2017-06-13 12:46:12.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1264f29e
☆ 2017-06-13 12:46:12.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@4c45a017
☆ 2017-06-13 12:46:12.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@4c45a017
☆ 2017-06-13 12:46:12.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@4e381927
☆ 2017-06-13 12:46:12.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e381927
☆ 2017-06-13 12:46:12.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@77b08872
☆ 2017-06-13 12:46:12.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77b08872
☆ 2017-06-13 12:46:12.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@31099bc4
☆ 2017-06-13 12:46:12.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@31099bc4
☆ 2017-06-13 12:46:12.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@31099bc4
☆ 2017-06-13 12:46:12.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@89db8e8
☆ 2017-06-13 12:46:12.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4de4b3e1
☆ 2017-06-13 12:46:12.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4de4b3e1
☆ 2017-06-13 12:46:12.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4de4b3e1
☆ 2017-06-13 12:46:12.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e2f8d3d
☆ 2017-06-13 12:46:12.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@6a6cdb04
☆ 2017-06-13 12:46:12.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a6cdb04
☆ 2017-06-13 12:46:12.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@55303e22
☆ 2017-06-13 12:46:12.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@55303e22
☆ 2017-06-13 12:46:12.614 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@2cea8ab0
☆ 2017-06-13 12:46:12.614 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2cea8ab0
☆ 2017-06-13 12:46:12.614 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@4bac829c
☆ 2017-06-13 12:46:12.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4bac829c
☆ 2017-06-13 12:46:12.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b447b11
☆ 2017-06-13 12:46:12.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b447b11
☆ 2017-06-13 12:46:12.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22971c44
☆ 2017-06-13 12:46:12.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@5c44bcec
☆ 2017-06-13 12:46:12.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@5c44bcec
☆ 2017-06-13 12:46:12.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@5c44bcec
☆ 2017-06-13 12:46:12.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@52c22d85
☆ 2017-06-13 12:46:12.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@52c22d85
☆ 2017-06-13 12:46:12.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@52c22d85
☆ 2017-06-13 12:46:12.619 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4dba9569
☆ 2017-06-13 12:46:12.619 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3aeed340
☆ 2017-06-13 12:46:12.620 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3aeed340
☆ 2017-06-13 12:46:12.620 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3aeed340
☆ 2017-06-13 12:46:12.620 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17506045
☆ 2017-06-13 12:46:12.621 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17506045
☆ 2017-06-13 12:46:12.621 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17506045
☆ 2017-06-13 12:46:12.621 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@6f473f37
☆ 2017-06-13 12:46:12.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@28a874a9
☆ 2017-06-13 12:46:12.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@1201dd91
☆ 2017-06-13 12:46:12.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1201dd91
☆ 2017-06-13 12:46:12.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@794805b0
☆ 2017-06-13 12:46:12.628 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@1943a675
☆ 2017-06-13 12:46:12.628 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1943a675
☆ 2017-06-13 12:46:12.630 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4d97e9e5
☆ 2017-06-13 12:46:12.630 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d97e9e5
☆ 2017-06-13 12:46:12.630 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b8242e6
☆ 2017-06-13 12:46:12.633 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44b138a9
☆ 2017-06-13 12:46:12.634 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@5da990cc
☆ 2017-06-13 12:46:12.636 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@7f34e4fa
☆ 2017-06-13 12:46:12.636 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f34e4fa
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34ad26e
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b81f5c9
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58b307c2
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c33bcb4
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@19bfcefe
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4d445fbd
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@d89dcc0
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c8e07d9
☆ 2017-06-13 12:46:12.645 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:46:12.647 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:46:12.647 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:46:12.648 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:46:12.650 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:46:12.650 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:46:12.791 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:46:12.791 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:46:12.791 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:46:12.800 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:46:12.820 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:46:12.877 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:46:12.877 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:46:12.878 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:46:12.878 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:46:12.878 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:46:12.879 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:46:12.879 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:46:12.880 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:46:12.881 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:46:12.881 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:46:12.881 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:46:12.882 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:46:12.882 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:46:12.883 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:46:12.905 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:46:12.933 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:46:12.934 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:46:12.934 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:46:12.934 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:46:12.934 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:46:12.934 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3305fb67
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:46:12.967 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:46:12.969 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:46:12.969 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3b06b2db, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:46:12.976 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:46:12.979 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:46:12.981 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:46:12.988 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:46:12.988 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:46:12.990 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:46:12.991 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:46:12.991 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:46:12.992 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d730200
☆ 2017-06-13 12:46:12.993 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 60d08483-3f98-4a51-ad6c-bb00a23cfa59 (<unnamed>)
☆ 2017-06-13 12:46:12.993 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:46:13.028 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:46:13.068 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:46:29.264 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:46:29.265 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:46:29.265 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:46:29.270 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:47:34.812 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:47:34.821 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:47:34.822 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:47:34.824 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:47:34.895 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:47:34.896 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:47:34.897 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:47:34.910 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:47:34.912 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:47:34.912 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:47:34.916 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:47:35.065 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:47:35.065 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:47:35.065 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:47:35.074 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:47:35.075 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:47:35.084 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:47:35.090 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:47:35.104 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@66c0a69a
☆ 2017-06-13 12:47:35.105 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@66c0a69a
☆ 2017-06-13 12:47:35.105 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@66c0a69a
☆ 2017-06-13 12:47:35.106 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@112f70af
☆ 2017-06-13 12:47:35.107 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@512c702a
☆ 2017-06-13 12:47:35.107 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@72cff597
☆ 2017-06-13 12:47:35.109 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@22a77796
☆ 2017-06-13 12:47:35.109 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@22a77796
☆ 2017-06-13 12:47:35.109 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22a77796
☆ 2017-06-13 12:47:35.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@11594486
☆ 2017-06-13 12:47:35.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@11594486
☆ 2017-06-13 12:47:35.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11594486
☆ 2017-06-13 12:47:35.111 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@7b8cdeba
☆ 2017-06-13 12:47:35.111 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@7b8cdeba
☆ 2017-06-13 12:47:35.111 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7b8cdeba
☆ 2017-06-13 12:47:35.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@17700f17
☆ 2017-06-13 12:47:35.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@17700f17
☆ 2017-06-13 12:47:35.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@17700f17
☆ 2017-06-13 12:47:35.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@5687bc17
☆ 2017-06-13 12:47:35.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@5687bc17
☆ 2017-06-13 12:47:35.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5687bc17
☆ 2017-06-13 12:47:35.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@709cd8b6
☆ 2017-06-13 12:47:35.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@709cd8b6
☆ 2017-06-13 12:47:35.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@709cd8b6
☆ 2017-06-13 12:47:35.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@3d1f9f97
☆ 2017-06-13 12:47:35.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@3d1f9f97
☆ 2017-06-13 12:47:35.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3d1f9f97
☆ 2017-06-13 12:47:35.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@48edcfe
☆ 2017-06-13 12:47:35.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@48edcfe
☆ 2017-06-13 12:47:35.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19f2e46a
☆ 2017-06-13 12:47:35.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19f2e46a
☆ 2017-06-13 12:47:35.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@517e856c
☆ 2017-06-13 12:47:35.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@517e856c
☆ 2017-06-13 12:47:35.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7c25a8b3
☆ 2017-06-13 12:47:35.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@70089c20
☆ 2017-06-13 12:47:35.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@3ed19b63
☆ 2017-06-13 12:47:35.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ed19b63
☆ 2017-06-13 12:47:35.159 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6860f24a
☆ 2017-06-13 12:47:35.160 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6860f24a
☆ 2017-06-13 12:47:35.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@53b92c4d
☆ 2017-06-13 12:47:35.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53b92c4d
☆ 2017-06-13 12:47:35.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3575717
☆ 2017-06-13 12:47:35.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3575717
☆ 2017-06-13 12:47:35.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3575717
☆ 2017-06-13 12:47:35.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@26d1bf00
☆ 2017-06-13 12:47:35.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@96232ff
☆ 2017-06-13 12:47:35.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@96232ff
☆ 2017-06-13 12:47:35.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@96232ff
☆ 2017-06-13 12:47:35.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1397515b
☆ 2017-06-13 12:47:35.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@456d3f4b
☆ 2017-06-13 12:47:35.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@456d3f4b
☆ 2017-06-13 12:47:35.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@434d5b89
☆ 2017-06-13 12:47:35.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@434d5b89
☆ 2017-06-13 12:47:35.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@13ca4535
☆ 2017-06-13 12:47:35.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13ca4535
☆ 2017-06-13 12:47:35.169 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@143cb496
☆ 2017-06-13 12:47:35.169 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@143cb496
☆ 2017-06-13 12:47:35.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@11a512f
☆ 2017-06-13 12:47:35.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@11a512f
☆ 2017-06-13 12:47:35.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1c7b378e
☆ 2017-06-13 12:47:35.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@7788f7c7
☆ 2017-06-13 12:47:35.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@7788f7c7
☆ 2017-06-13 12:47:35.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@7788f7c7
☆ 2017-06-13 12:47:35.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ed4234d
☆ 2017-06-13 12:47:35.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ed4234d
☆ 2017-06-13 12:47:35.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ed4234d
☆ 2017-06-13 12:47:35.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@6e2fb58a
☆ 2017-06-13 12:47:35.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@1bd4f480
☆ 2017-06-13 12:47:35.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@1bd4f480
☆ 2017-06-13 12:47:35.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@1bd4f480
☆ 2017-06-13 12:47:35.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@58778232
☆ 2017-06-13 12:47:35.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@58778232
☆ 2017-06-13 12:47:35.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@58778232
☆ 2017-06-13 12:47:35.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@7e5abd81
☆ 2017-06-13 12:47:35.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@26aaae06
☆ 2017-06-13 12:47:35.179 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@4b7ab8f0
☆ 2017-06-13 12:47:35.179 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b7ab8f0
☆ 2017-06-13 12:47:35.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e809dc1
☆ 2017-06-13 12:47:35.182 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@559d465c
☆ 2017-06-13 12:47:35.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@559d465c
☆ 2017-06-13 12:47:35.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@1d832476
☆ 2017-06-13 12:47:35.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d832476
☆ 2017-06-13 12:47:35.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@287cf65c
☆ 2017-06-13 12:47:35.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6647640d
☆ 2017-06-13 12:47:35.189 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@43537346
☆ 2017-06-13 12:47:35.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@630f1b3c
☆ 2017-06-13 12:47:35.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@630f1b3c
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e769abe
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@253bb0b7
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16bbff26
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6e1c5d4c
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6435995b
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1cf33362
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5578ad15
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@59026ccb
☆ 2017-06-13 12:47:35.200 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:47:35.202 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:47:35.203 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:47:35.203 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:47:35.205 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:47:35.206 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:47:35.351 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:47:35.352 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:47:35.352 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:47:35.361 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:47:35.381 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:47:35.438 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:47:35.438 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:47:35.439 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:47:35.439 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:47:35.439 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:47:35.440 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:47:35.440 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:47:35.441 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:47:35.442 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:47:35.442 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:47:35.442 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:47:35.443 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:47:35.443 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:47:35.443 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:47:35.465 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:47:35.493 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:47:35.494 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:47:35.494 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:47:35.494 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:47:35.494 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@370c20c1
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:47:35.527 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:47:35.529 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:47:35.529 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@29802703, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:47:35.536 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:47:35.539 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:47:35.541 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:47:35.548 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:47:35.549 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:47:35.550 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:47:35.551 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:47:35.551 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:47:35.552 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6a6de743
☆ 2017-06-13 12:47:35.554 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: a8b2e8b8-80b9-4147-848d-0488c9df8ee9 (<unnamed>)
☆ 2017-06-13 12:47:35.554 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:47:35.588 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:47:35.630 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:48:02.678 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:48:02.678 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:48:02.679 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:48:02.683 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:50:18.240 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:50:18.251 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:50:18.376 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:50:18.378 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:50:18.448 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:50:18.449 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:50:18.450 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:50:18.464 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:50:18.465 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:50:18.466 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:50:18.469 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:50:18.642 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:50:18.643 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:50:18.643 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:50:18.652 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:50:18.653 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:50:18.664 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:50:18.672 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:50:18.689 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@68a9be7c
☆ 2017-06-13 12:50:18.689 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@68a9be7c
☆ 2017-06-13 12:50:18.689 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@68a9be7c
☆ 2017-06-13 12:50:18.690 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@bb397ba
☆ 2017-06-13 12:50:18.691 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@77817aa8
☆ 2017-06-13 12:50:18.691 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@7b84d85e
☆ 2017-06-13 12:50:18.692 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@43f6c992
☆ 2017-06-13 12:50:18.693 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@43f6c992
☆ 2017-06-13 12:50:18.693 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@43f6c992
☆ 2017-06-13 12:50:18.694 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@7aeddeb7
☆ 2017-06-13 12:50:18.694 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@7aeddeb7
☆ 2017-06-13 12:50:18.694 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7aeddeb7
☆ 2017-06-13 12:50:18.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@18d6b610
☆ 2017-06-13 12:50:18.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@18d6b610
☆ 2017-06-13 12:50:18.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18d6b610
☆ 2017-06-13 12:50:18.730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@54f35fd3
☆ 2017-06-13 12:50:18.730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@54f35fd3
☆ 2017-06-13 12:50:18.730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@54f35fd3
☆ 2017-06-13 12:50:18.731 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@5f0dde57
☆ 2017-06-13 12:50:18.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@5f0dde57
☆ 2017-06-13 12:50:18.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f0dde57
☆ 2017-06-13 12:50:18.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@377a2799
☆ 2017-06-13 12:50:18.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@377a2799
☆ 2017-06-13 12:50:18.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@377a2799
☆ 2017-06-13 12:50:18.734 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5539ed9e
☆ 2017-06-13 12:50:18.734 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5539ed9e
☆ 2017-06-13 12:50:18.735 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5539ed9e
☆ 2017-06-13 12:50:18.736 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6121477a
☆ 2017-06-13 12:50:18.736 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6121477a
☆ 2017-06-13 12:50:18.737 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1403d4f7
☆ 2017-06-13 12:50:18.737 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1403d4f7
☆ 2017-06-13 12:50:18.738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@52ee456d
☆ 2017-06-13 12:50:18.738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@52ee456d
☆ 2017-06-13 12:50:18.738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e76d7c9
☆ 2017-06-13 12:50:18.739 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@538c8cae
☆ 2017-06-13 12:50:18.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@678167e1
☆ 2017-06-13 12:50:18.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@678167e1
☆ 2017-06-13 12:50:18.741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@78f39dc5
☆ 2017-06-13 12:50:18.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@78f39dc5
☆ 2017-06-13 12:50:18.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@62ec0eae
☆ 2017-06-13 12:50:18.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@62ec0eae
☆ 2017-06-13 12:50:18.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@64ff8a04
☆ 2017-06-13 12:50:18.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@64ff8a04
☆ 2017-06-13 12:50:18.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@64ff8a04
☆ 2017-06-13 12:50:18.746 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7537c584
☆ 2017-06-13 12:50:18.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@267be06f
☆ 2017-06-13 12:50:18.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@267be06f
☆ 2017-06-13 12:50:18.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@267be06f
☆ 2017-06-13 12:50:18.748 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@56bc4aa2
☆ 2017-06-13 12:50:18.749 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@28174f6b
☆ 2017-06-13 12:50:18.749 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@28174f6b
☆ 2017-06-13 12:50:18.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@17e6c399
☆ 2017-06-13 12:50:18.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@17e6c399
☆ 2017-06-13 12:50:18.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@520917d0
☆ 2017-06-13 12:50:18.751 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@520917d0
☆ 2017-06-13 12:50:18.751 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@4d1d8600
☆ 2017-06-13 12:50:18.752 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4d1d8600
☆ 2017-06-13 12:50:18.753 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@492302b7
☆ 2017-06-13 12:50:18.753 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@492302b7
☆ 2017-06-13 12:50:18.753 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4ae377f4
☆ 2017-06-13 12:50:18.754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@60697c0b
☆ 2017-06-13 12:50:18.754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@60697c0b
☆ 2017-06-13 12:50:18.754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@60697c0b
☆ 2017-06-13 12:50:18.755 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36849990
☆ 2017-06-13 12:50:18.755 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36849990
☆ 2017-06-13 12:50:18.755 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36849990
☆ 2017-06-13 12:50:18.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4e91b4c7
☆ 2017-06-13 12:50:18.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@1ba094b5
☆ 2017-06-13 12:50:18.757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@1ba094b5
☆ 2017-06-13 12:50:18.757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@1ba094b5
☆ 2017-06-13 12:50:18.757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@266e4399
☆ 2017-06-13 12:50:18.758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@266e4399
☆ 2017-06-13 12:50:18.758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@266e4399
☆ 2017-06-13 12:50:18.758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@17ab5200
☆ 2017-06-13 12:50:18.759 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c606933
☆ 2017-06-13 12:50:18.761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@bd6f3d7
☆ 2017-06-13 12:50:18.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bd6f3d7
☆ 2017-06-13 12:50:18.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6539b25d
☆ 2017-06-13 12:50:18.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@38c8f094
☆ 2017-06-13 12:50:18.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@38c8f094
☆ 2017-06-13 12:50:18.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@219cdd91
☆ 2017-06-13 12:50:18.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@219cdd91
☆ 2017-06-13 12:50:18.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@49a84cb2
☆ 2017-06-13 12:50:18.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d8dc7ab
☆ 2017-06-13 12:50:18.771 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@65017076
☆ 2017-06-13 12:50:18.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@2534c0a3
☆ 2017-06-13 12:50:18.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2534c0a3
☆ 2017-06-13 12:50:18.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b81f5c9
☆ 2017-06-13 12:50:18.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58b307c2
☆ 2017-06-13 12:50:18.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c33bcb4
☆ 2017-06-13 12:50:18.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19bfcefe
☆ 2017-06-13 12:50:18.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4d445fbd
☆ 2017-06-13 12:50:18.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d89dcc0
☆ 2017-06-13 12:50:18.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5c8e07d9
☆ 2017-06-13 12:50:18.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3ba1fa88
☆ 2017-06-13 12:50:18.782 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:50:18.784 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:50:18.785 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:50:18.785 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:50:18.787 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:50:18.787 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:50:18.946 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:50:18.946 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:50:18.946 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:50:18.955 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:50:18.976 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:50:19.034 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:50:19.035 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:50:19.035 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:50:19.035 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:50:19.036 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:50:19.036 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:50:19.037 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:50:19.037 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:50:19.038 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:50:19.038 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:50:19.039 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:50:19.039 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:50:19.039 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:50:19.040 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:50:19.063 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:50:19.092 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:50:19.093 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:50:19.093 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4eed411
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:50:19.097 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:50:19.126 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:50:19.128 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:50:19.128 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@66a423bb, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:50:19.135 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:50:19.138 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:50:19.140 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:50:19.147 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:50:19.148 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:50:19.149 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:50:19.150 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:50:19.151 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:50:19.152 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@329004fd
☆ 2017-06-13 12:50:19.154 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: c9bd77e0-0352-4b64-9e89-7bd2dc9ddc91 (<unnamed>)
☆ 2017-06-13 12:50:19.154 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:50:19.193 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:50:19.247 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:50:29.441 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:50:29.442 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:50:29.442 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:50:29.448 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:52:26.444 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:52:26.452 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:52:26.454 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:52:26.455 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:52:26.524 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:52:26.525 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:52:26.526 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:52:26.539 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:52:26.540 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:52:26.541 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:52:26.544 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:52:26.694 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:52:26.695 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:52:26.695 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:52:26.705 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:52:26.707 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:52:26.718 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:52:26.726 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:52:26.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@68a9be7c
☆ 2017-06-13 12:52:26.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@68a9be7c
☆ 2017-06-13 12:52:26.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@68a9be7c
☆ 2017-06-13 12:52:26.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@bb397ba
☆ 2017-06-13 12:52:26.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@77817aa8
☆ 2017-06-13 12:52:26.746 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@7b84d85e
☆ 2017-06-13 12:52:26.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@43f6c992
☆ 2017-06-13 12:52:26.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@43f6c992
☆ 2017-06-13 12:52:26.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@43f6c992
☆ 2017-06-13 12:52:26.748 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@7aeddeb7
☆ 2017-06-13 12:52:26.748 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@7aeddeb7
☆ 2017-06-13 12:52:26.748 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7aeddeb7
☆ 2017-06-13 12:52:26.749 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@18d6b610
☆ 2017-06-13 12:52:26.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@18d6b610
☆ 2017-06-13 12:52:26.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18d6b610
☆ 2017-06-13 12:52:26.787 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@54f35fd3
☆ 2017-06-13 12:52:26.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@54f35fd3
☆ 2017-06-13 12:52:26.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@54f35fd3
☆ 2017-06-13 12:52:26.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@5f0dde57
☆ 2017-06-13 12:52:26.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@5f0dde57
☆ 2017-06-13 12:52:26.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f0dde57
☆ 2017-06-13 12:52:26.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@377a2799
☆ 2017-06-13 12:52:26.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@377a2799
☆ 2017-06-13 12:52:26.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@377a2799
☆ 2017-06-13 12:52:26.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5539ed9e
☆ 2017-06-13 12:52:26.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5539ed9e
☆ 2017-06-13 12:52:26.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5539ed9e
☆ 2017-06-13 12:52:26.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6121477a
☆ 2017-06-13 12:52:26.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6121477a
☆ 2017-06-13 12:52:26.795 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1403d4f7
☆ 2017-06-13 12:52:26.795 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1403d4f7
☆ 2017-06-13 12:52:26.796 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@52ee456d
☆ 2017-06-13 12:52:26.796 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@52ee456d
☆ 2017-06-13 12:52:26.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e76d7c9
☆ 2017-06-13 12:52:26.798 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@538c8cae
☆ 2017-06-13 12:52:26.798 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@678167e1
☆ 2017-06-13 12:52:26.798 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@678167e1
☆ 2017-06-13 12:52:26.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@78f39dc5
☆ 2017-06-13 12:52:26.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@78f39dc5
☆ 2017-06-13 12:52:26.801 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@62ec0eae
☆ 2017-06-13 12:52:26.801 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@62ec0eae
☆ 2017-06-13 12:52:26.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@64ff8a04
☆ 2017-06-13 12:52:26.803 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@64ff8a04
☆ 2017-06-13 12:52:26.803 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@64ff8a04
☆ 2017-06-13 12:52:26.804 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7537c584
☆ 2017-06-13 12:52:26.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@267be06f
☆ 2017-06-13 12:52:26.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@267be06f
☆ 2017-06-13 12:52:26.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@267be06f
☆ 2017-06-13 12:52:26.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@56bc4aa2
☆ 2017-06-13 12:52:26.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@28174f6b
☆ 2017-06-13 12:52:26.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@28174f6b
☆ 2017-06-13 12:52:26.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@17e6c399
☆ 2017-06-13 12:52:26.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@17e6c399
☆ 2017-06-13 12:52:26.808 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@520917d0
☆ 2017-06-13 12:52:26.808 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@520917d0
☆ 2017-06-13 12:52:26.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@4d1d8600
☆ 2017-06-13 12:52:26.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4d1d8600
☆ 2017-06-13 12:52:26.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@492302b7
☆ 2017-06-13 12:52:26.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@492302b7
☆ 2017-06-13 12:52:26.811 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4ae377f4
☆ 2017-06-13 12:52:26.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@60697c0b
☆ 2017-06-13 12:52:26.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@60697c0b
☆ 2017-06-13 12:52:26.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@60697c0b
☆ 2017-06-13 12:52:26.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36849990
☆ 2017-06-13 12:52:26.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36849990
☆ 2017-06-13 12:52:26.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36849990
☆ 2017-06-13 12:52:26.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4e91b4c7
☆ 2017-06-13 12:52:26.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@1ba094b5
☆ 2017-06-13 12:52:26.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@1ba094b5
☆ 2017-06-13 12:52:26.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@1ba094b5
☆ 2017-06-13 12:52:26.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@266e4399
☆ 2017-06-13 12:52:26.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@266e4399
☆ 2017-06-13 12:52:26.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@266e4399
☆ 2017-06-13 12:52:26.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@17ab5200
☆ 2017-06-13 12:52:26.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c606933
☆ 2017-06-13 12:52:26.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@bd6f3d7
☆ 2017-06-13 12:52:26.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bd6f3d7
☆ 2017-06-13 12:52:26.820 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6539b25d
☆ 2017-06-13 12:52:26.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@38c8f094
☆ 2017-06-13 12:52:26.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@38c8f094
☆ 2017-06-13 12:52:26.824 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@219cdd91
☆ 2017-06-13 12:52:26.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@219cdd91
☆ 2017-06-13 12:52:26.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@49a84cb2
☆ 2017-06-13 12:52:26.828 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d8dc7ab
☆ 2017-06-13 12:52:26.829 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@65017076
☆ 2017-06-13 12:52:26.831 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@2534c0a3
☆ 2017-06-13 12:52:26.831 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2534c0a3
☆ 2017-06-13 12:52:26.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b81f5c9
☆ 2017-06-13 12:52:26.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58b307c2
☆ 2017-06-13 12:52:26.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c33bcb4
☆ 2017-06-13 12:52:26.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19bfcefe
☆ 2017-06-13 12:52:26.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4d445fbd
☆ 2017-06-13 12:52:26.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d89dcc0
☆ 2017-06-13 12:52:26.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5c8e07d9
☆ 2017-06-13 12:52:26.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3ba1fa88
☆ 2017-06-13 12:52:26.844 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:52:26.847 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:52:26.848 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:52:26.848 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:52:26.851 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:52:26.852 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:52:27.002 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:52:27.003 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:52:27.003 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:52:27.012 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:52:27.032 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:52:27.088 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:52:27.088 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:52:27.089 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:52:27.089 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:52:27.089 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:52:27.090 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:52:27.090 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:52:27.091 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:52:27.091 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:52:27.092 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:52:27.092 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:52:27.092 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:52:27.093 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:52:27.093 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:52:27.115 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:52:27.142 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4eed411
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:52:27.146 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:52:27.146 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:52:27.146 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:52:27.146 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:52:27.146 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:52:27.146 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:52:27.175 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:52:27.177 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:52:27.177 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@66a423bb, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:52:27.184 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:52:27.187 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:52:27.189 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:52:27.196 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:52:27.196 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:52:27.198 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:52:27.199 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:52:27.199 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:52:27.200 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@329004fd
☆ 2017-06-13 12:52:27.201 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 2fb7079a-6ddd-4d9c-bb10-31a9a6f832a5 (<unnamed>)
☆ 2017-06-13 12:52:27.201 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:52:27.236 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:52:27.279 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:52:43.457 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:52:43.458 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:52:43.458 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:52:43.462 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:58:06.251 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:58:06.259 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:58:06.260 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:58:06.262 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:58:06.328 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:58:06.330 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:58:06.331 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:58:06.343 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:58:06.345 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:58:06.345 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:58:06.349 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:58:06.493 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:58:06.493 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:58:06.493 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:58:06.503 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:58:06.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:58:06.513 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:58:06.518 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:58:06.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@3aef38fb
☆ 2017-06-13 12:58:06.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@3aef38fb
☆ 2017-06-13 12:58:06.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3aef38fb
☆ 2017-06-13 12:58:06.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7e783015
☆ 2017-06-13 12:58:06.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a517986
☆ 2017-06-13 12:58:06.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@d15e915
☆ 2017-06-13 12:58:06.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@365a6d8c
☆ 2017-06-13 12:58:06.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@365a6d8c
☆ 2017-06-13 12:58:06.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@365a6d8c
☆ 2017-06-13 12:58:06.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4a0f345f
☆ 2017-06-13 12:58:06.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4a0f345f
☆ 2017-06-13 12:58:06.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4a0f345f
☆ 2017-06-13 12:58:06.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@653621c8
☆ 2017-06-13 12:58:06.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@653621c8
☆ 2017-06-13 12:58:06.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@653621c8
☆ 2017-06-13 12:58:06.572 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@2dfd5edd
☆ 2017-06-13 12:58:06.572 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@2dfd5edd
☆ 2017-06-13 12:58:06.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2dfd5edd
☆ 2017-06-13 12:58:06.574 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@7cb2ccf9
☆ 2017-06-13 12:58:06.574 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@7cb2ccf9
☆ 2017-06-13 12:58:06.574 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@7cb2ccf9
☆ 2017-06-13 12:58:06.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4d349918
☆ 2017-06-13 12:58:06.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4d349918
☆ 2017-06-13 12:58:06.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4d349918
☆ 2017-06-13 12:58:06.576 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@19877d5d
☆ 2017-06-13 12:58:06.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@19877d5d
☆ 2017-06-13 12:58:06.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@19877d5d
☆ 2017-06-13 12:58:06.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1c811074
☆ 2017-06-13 12:58:06.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1c811074
☆ 2017-06-13 12:58:06.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@56ddc22f
☆ 2017-06-13 12:58:06.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@56ddc22f
☆ 2017-06-13 12:58:06.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@7086c0da
☆ 2017-06-13 12:58:06.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@7086c0da
☆ 2017-06-13 12:58:06.581 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6dd1132e
☆ 2017-06-13 12:58:06.581 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4e28d166
☆ 2017-06-13 12:58:06.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@1e18097b
☆ 2017-06-13 12:58:06.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e18097b
☆ 2017-06-13 12:58:06.583 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6e7748ba
☆ 2017-06-13 12:58:06.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e7748ba
☆ 2017-06-13 12:58:06.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@1dfc9cb5
☆ 2017-06-13 12:58:06.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1dfc9cb5
☆ 2017-06-13 12:58:06.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@34ffbd54
☆ 2017-06-13 12:58:06.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@34ffbd54
☆ 2017-06-13 12:58:06.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@34ffbd54
☆ 2017-06-13 12:58:06.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e874131
☆ 2017-06-13 12:58:06.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@51038f9c
☆ 2017-06-13 12:58:06.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@51038f9c
☆ 2017-06-13 12:58:06.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@51038f9c
☆ 2017-06-13 12:58:06.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67824ffb
☆ 2017-06-13 12:58:06.590 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@7e21bd2b
☆ 2017-06-13 12:58:06.590 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7e21bd2b
☆ 2017-06-13 12:58:06.591 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@5eb6c1f
☆ 2017-06-13 12:58:06.591 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5eb6c1f
☆ 2017-06-13 12:58:06.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@400c2aef
☆ 2017-06-13 12:58:06.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@400c2aef
☆ 2017-06-13 12:58:06.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@6174ad4f
☆ 2017-06-13 12:58:06.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6174ad4f
☆ 2017-06-13 12:58:06.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@26a60d3d
☆ 2017-06-13 12:58:06.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@26a60d3d
☆ 2017-06-13 12:58:06.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39150ef6
☆ 2017-06-13 12:58:06.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@5bd5b019
☆ 2017-06-13 12:58:06.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@5bd5b019
☆ 2017-06-13 12:58:06.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@5bd5b019
☆ 2017-06-13 12:58:06.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@545e5a68
☆ 2017-06-13 12:58:06.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@545e5a68
☆ 2017-06-13 12:58:06.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@545e5a68
☆ 2017-06-13 12:58:06.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@6a3d8647
☆ 2017-06-13 12:58:06.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@7f5aa878
☆ 2017-06-13 12:58:06.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@7f5aa878
☆ 2017-06-13 12:58:06.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@7f5aa878
☆ 2017-06-13 12:58:06.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5013c39c
☆ 2017-06-13 12:58:06.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5013c39c
☆ 2017-06-13 12:58:06.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5013c39c
☆ 2017-06-13 12:58:06.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@4d30bb02
☆ 2017-06-13 12:58:06.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@76cf5626
☆ 2017-06-13 12:58:06.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@421984f8
☆ 2017-06-13 12:58:06.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@421984f8
☆ 2017-06-13 12:58:06.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@541a0e73
☆ 2017-06-13 12:58:06.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@1c940491
☆ 2017-06-13 12:58:06.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1c940491
☆ 2017-06-13 12:58:06.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@75793900
☆ 2017-06-13 12:58:06.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@75793900
☆ 2017-06-13 12:58:06.609 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2d5f6b70
☆ 2017-06-13 12:58:06.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@260b5304
☆ 2017-06-13 12:58:06.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@51ca992d
☆ 2017-06-13 12:58:06.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@5f6e1f85
☆ 2017-06-13 12:58:06.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f6e1f85
☆ 2017-06-13 12:58:06.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b30ee11
☆ 2017-06-13 12:58:06.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@348d48c5
☆ 2017-06-13 12:58:06.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2882d98d
☆ 2017-06-13 12:58:06.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2acbf222
☆ 2017-06-13 12:58:06.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3617d10c
☆ 2017-06-13 12:58:06.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68826c6b
☆ 2017-06-13 12:58:06.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@56728e47
☆ 2017-06-13 12:58:06.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@235d3c49
☆ 2017-06-13 12:58:06.624 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:58:06.626 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:58:06.626 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:58:06.626 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:58:06.628 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:58:06.629 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:58:06.770 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:58:06.771 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:58:06.771 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:58:06.779 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:58:06.799 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:58:06.855 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:58:06.856 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:58:06.856 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:58:06.857 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:58:06.857 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:58:06.858 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:58:06.858 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:58:06.859 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:58:06.860 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:58:06.860 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:58:06.860 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:58:06.861 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:58:06.861 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:58:06.862 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:58:06.883 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:58:06.910 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:58:06.911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:58:06.911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:58:06.911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2439246f
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:58:06.915 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:58:06.915 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:58:06.915 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:58:06.915 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:58:06.944 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:58:06.946 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:58:06.946 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@649a397f, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:58:06.953 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:58:06.956 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:58:06.958 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:58:06.964 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:58:06.965 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:58:06.966 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:58:06.967 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:58:06.967 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:58:06.969 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b4af87d
☆ 2017-06-13 12:58:06.970 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 50a5478d-363c-4f22-887b-1a35edade393 (<unnamed>)
☆ 2017-06-13 12:58:06.970 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:58:07.006 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:58:07.047 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:58:36.768 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 12:58:54.823 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:58:54.823 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:58:54.824 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:58:54.830 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 13:07:01.653 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 13:07:01.660 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 13:07:01.662 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 13:07:01.663 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 13:07:01.726 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 13:07:01.727 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 13:07:01.728 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 13:07:01.741 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 13:07:01.742 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 13:07:01.742 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 13:07:01.746 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 13:07:01.891 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 13:07:01.891 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 13:07:01.891 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 13:07:01.903 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 13:07:01.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 13:07:01.913 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 13:07:01.918 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 13:07:01.932 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@66ae7d10
☆ 2017-06-13 13:07:01.933 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@66ae7d10
☆ 2017-06-13 13:07:01.933 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@66ae7d10
☆ 2017-06-13 13:07:01.934 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@236ed3a3
☆ 2017-06-13 13:07:01.934 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@54a41d64
☆ 2017-06-13 13:07:01.935 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@22e0d88c
☆ 2017-06-13 13:07:01.936 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@1d8731a8
☆ 2017-06-13 13:07:01.936 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@1d8731a8
☆ 2017-06-13 13:07:01.936 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1d8731a8
☆ 2017-06-13 13:07:01.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2dd3f0d6
☆ 2017-06-13 13:07:01.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2dd3f0d6
☆ 2017-06-13 13:07:01.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2dd3f0d6
☆ 2017-06-13 13:07:01.938 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@701fd034
☆ 2017-06-13 13:07:01.938 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@701fd034
☆ 2017-06-13 13:07:01.939 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@701fd034
☆ 2017-06-13 13:07:01.979 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@e4c3002
☆ 2017-06-13 13:07:01.979 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@e4c3002
☆ 2017-06-13 13:07:01.979 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e4c3002
☆ 2017-06-13 13:07:01.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@61d35e8
☆ 2017-06-13 13:07:01.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@61d35e8
☆ 2017-06-13 13:07:01.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@61d35e8
☆ 2017-06-13 13:07:01.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7b52c264
☆ 2017-06-13 13:07:01.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7b52c264
☆ 2017-06-13 13:07:01.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b52c264
☆ 2017-06-13 13:07:01.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@51880fe3
☆ 2017-06-13 13:07:01.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@51880fe3
☆ 2017-06-13 13:07:01.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51880fe3
☆ 2017-06-13 13:07:01.984 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@41982fc
☆ 2017-06-13 13:07:01.985 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@41982fc
☆ 2017-06-13 13:07:01.985 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e544d8f
☆ 2017-06-13 13:07:01.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e544d8f
☆ 2017-06-13 13:07:01.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@7e3e9a8d
☆ 2017-06-13 13:07:01.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@7e3e9a8d
☆ 2017-06-13 13:07:01.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7198d5d8
☆ 2017-06-13 13:07:01.988 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2d231f9a
☆ 2017-06-13 13:07:01.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@b12c784
☆ 2017-06-13 13:07:01.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b12c784
☆ 2017-06-13 13:07:01.990 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@32fb6bae
☆ 2017-06-13 13:07:01.991 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@32fb6bae
☆ 2017-06-13 13:07:01.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@7bf73582
☆ 2017-06-13 13:07:01.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7bf73582
☆ 2017-06-13 13:07:01.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@5684d1b9
☆ 2017-06-13 13:07:01.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5684d1b9
☆ 2017-06-13 13:07:01.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5684d1b9
☆ 2017-06-13 13:07:01.995 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@ee5110a
☆ 2017-06-13 13:07:01.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4cca79f2
☆ 2017-06-13 13:07:01.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4cca79f2
☆ 2017-06-13 13:07:01.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4cca79f2
☆ 2017-06-13 13:07:01.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@37cf8c90
☆ 2017-06-13 13:07:01.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2687c755
☆ 2017-06-13 13:07:01.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2687c755
☆ 2017-06-13 13:07:01.998 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@3a0f92db
☆ 2017-06-13 13:07:01.998 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a0f92db
☆ 2017-06-13 13:07:01.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@dedd376
☆ 2017-06-13 13:07:01.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@dedd376
☆ 2017-06-13 13:07:02.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@4f21a712
☆ 2017-06-13 13:07:02.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f21a712
☆ 2017-06-13 13:07:02.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@626bfab3
☆ 2017-06-13 13:07:02.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@626bfab3
☆ 2017-06-13 13:07:02.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4d9e2488
☆ 2017-06-13 13:07:02.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@702bbc85
☆ 2017-06-13 13:07:02.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@702bbc85
☆ 2017-06-13 13:07:02.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@702bbc85
☆ 2017-06-13 13:07:02.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e497a67
☆ 2017-06-13 13:07:02.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e497a67
☆ 2017-06-13 13:07:02.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e497a67
☆ 2017-06-13 13:07:02.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@1d8a2416
☆ 2017-06-13 13:07:02.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@791b51ba
☆ 2017-06-13 13:07:02.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@791b51ba
☆ 2017-06-13 13:07:02.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@791b51ba
☆ 2017-06-13 13:07:02.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@293a4ce1
☆ 2017-06-13 13:07:02.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@293a4ce1
☆ 2017-06-13 13:07:02.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@293a4ce1
☆ 2017-06-13 13:07:02.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@64b43c83
☆ 2017-06-13 13:07:02.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@25642a62
☆ 2017-06-13 13:07:02.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@5e4c098
☆ 2017-06-13 13:07:02.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e4c098
☆ 2017-06-13 13:07:02.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@b15caf3
☆ 2017-06-13 13:07:02.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@148c3140
☆ 2017-06-13 13:07:02.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@148c3140
☆ 2017-06-13 13:07:02.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@e73ad83
☆ 2017-06-13 13:07:02.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@e73ad83
☆ 2017-06-13 13:07:02.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@68be3018
☆ 2017-06-13 13:07:02.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30e79da2
☆ 2017-06-13 13:07:02.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@45b74aff
☆ 2017-06-13 13:07:02.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@43705359
☆ 2017-06-13 13:07:02.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43705359
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4c6e28ce
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@dc54081
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b535b79
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@130b66c5
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e9e1432
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9f88828
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8f192fd
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4084f068
☆ 2017-06-13 13:07:02.030 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 13:07:02.032 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 13:07:02.032 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 13:07:02.032 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 13:07:02.035 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 13:07:02.035 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 13:07:02.171 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 13:07:02.172 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 13:07:02.172 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 13:07:02.180 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 13:07:02.200 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 13:07:02.256 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 13:07:02.256 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 13:07:02.257 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 13:07:02.257 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 13:07:02.257 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 13:07:02.258 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 13:07:02.258 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 13:07:02.259 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 13:07:02.259 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 13:07:02.260 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 13:07:02.260 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 13:07:02.260 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 13:07:02.261 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 13:07:02.261 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 13:07:02.283 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 13:07:02.309 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 13:07:02.310 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@e184744
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 13:07:02.314 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 13:07:02.314 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 13:07:02.314 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 13:07:02.314 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 13:07:02.343 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 13:07:02.345 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 13:07:02.345 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@57bc0200, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 13:07:02.352 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 13:07:02.355 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 13:07:02.357 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 13:07:02.363 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 13:07:02.364 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 13:07:02.365 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 13:07:02.366 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 13:07:02.367 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 13:07:02.368 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6bb1ea3e
☆ 2017-06-13 13:07:02.369 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 0f531194-8c61-43e7-8a05-1c6b945659b7 (<unnamed>)
☆ 2017-06-13 13:07:02.369 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 13:07:02.405 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 13:07:02.472 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 13:07:32.169 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 13:14:31.865 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 13:14:31.866 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 13:14:31.866 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 13:14:31.870 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 13:20:51.748 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 13:20:51.756 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 13:20:51.757 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 13:20:51.759 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 13:20:51.823 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 13:20:51.824 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 13:20:51.826 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 13:20:51.838 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 13:20:51.840 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 13:20:51.840 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 13:20:51.843 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 13:20:52.010 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 13:20:52.101 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 13:20:52.101 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 13:20:52.110 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 13:20:52.111 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 13:20:52.120 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 13:20:52.128 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 13:20:52.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@774550b3
☆ 2017-06-13 13:20:52.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@774550b3
☆ 2017-06-13 13:20:52.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@774550b3
☆ 2017-06-13 13:20:52.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d0b8bfa
☆ 2017-06-13 13:20:52.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@59811d00
☆ 2017-06-13 13:20:52.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@389357e3
☆ 2017-06-13 13:20:52.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@2192d248
☆ 2017-06-13 13:20:52.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@2192d248
☆ 2017-06-13 13:20:52.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2192d248
☆ 2017-06-13 13:20:52.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2e041a0d
☆ 2017-06-13 13:20:52.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2e041a0d
☆ 2017-06-13 13:20:52.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2e041a0d
☆ 2017-06-13 13:20:52.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@243f2e32
☆ 2017-06-13 13:20:52.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@243f2e32
☆ 2017-06-13 13:20:52.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@243f2e32
☆ 2017-06-13 13:20:52.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@61beb61b
☆ 2017-06-13 13:20:52.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@61beb61b
☆ 2017-06-13 13:20:52.187 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61beb61b
☆ 2017-06-13 13:20:52.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2d7baf8b
☆ 2017-06-13 13:20:52.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2d7baf8b
☆ 2017-06-13 13:20:52.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@2d7baf8b
☆ 2017-06-13 13:20:52.189 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@376cb39c
☆ 2017-06-13 13:20:52.189 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@376cb39c
☆ 2017-06-13 13:20:52.189 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@376cb39c
☆ 2017-06-13 13:20:52.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@3f33d331
☆ 2017-06-13 13:20:52.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@3f33d331
☆ 2017-06-13 13:20:52.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f33d331
☆ 2017-06-13 13:20:52.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@333ba671
☆ 2017-06-13 13:20:52.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@333ba671
☆ 2017-06-13 13:20:52.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6de75710
☆ 2017-06-13 13:20:52.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6de75710
☆ 2017-06-13 13:20:52.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@4e4007a9
☆ 2017-06-13 13:20:52.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@4e4007a9
☆ 2017-06-13 13:20:52.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8e0e666
☆ 2017-06-13 13:20:52.195 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@613eaec4
☆ 2017-06-13 13:20:52.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@75455138
☆ 2017-06-13 13:20:52.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@75455138
☆ 2017-06-13 13:20:52.197 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@478268b6
☆ 2017-06-13 13:20:52.197 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@478268b6
☆ 2017-06-13 13:20:52.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@2b49b6e6
☆ 2017-06-13 13:20:52.199 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b49b6e6
☆ 2017-06-13 13:20:52.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@58779c10
☆ 2017-06-13 13:20:52.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@58779c10
☆ 2017-06-13 13:20:52.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@58779c10
☆ 2017-06-13 13:20:52.201 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55796026
☆ 2017-06-13 13:20:52.202 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@319bf5a7
☆ 2017-06-13 13:20:52.202 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@319bf5a7
☆ 2017-06-13 13:20:52.203 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@319bf5a7
☆ 2017-06-13 13:20:52.203 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b300d2
☆ 2017-06-13 13:20:52.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@701ba50b
☆ 2017-06-13 13:20:52.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@701ba50b
☆ 2017-06-13 13:20:52.205 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@57bfc6c3
☆ 2017-06-13 13:20:52.205 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@57bfc6c3
☆ 2017-06-13 13:20:52.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7cd1e84d
☆ 2017-06-13 13:20:52.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7cd1e84d
☆ 2017-06-13 13:20:52.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@3c162d50
☆ 2017-06-13 13:20:52.207 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c162d50
☆ 2017-06-13 13:20:52.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7be5425e
☆ 2017-06-13 13:20:52.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7be5425e
☆ 2017-06-13 13:20:52.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b2d2598
☆ 2017-06-13 13:20:52.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@3c843abc
☆ 2017-06-13 13:20:52.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@3c843abc
☆ 2017-06-13 13:20:52.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@3c843abc
☆ 2017-06-13 13:20:52.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2759b21d
☆ 2017-06-13 13:20:52.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2759b21d
☆ 2017-06-13 13:20:52.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2759b21d
☆ 2017-06-13 13:20:52.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@275df5bf
☆ 2017-06-13 13:20:52.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@346f5884
☆ 2017-06-13 13:20:52.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@346f5884
☆ 2017-06-13 13:20:52.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@346f5884
☆ 2017-06-13 13:20:52.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@41c84c96
☆ 2017-06-13 13:20:52.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@41c84c96
☆ 2017-06-13 13:20:52.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@41c84c96
☆ 2017-06-13 13:20:52.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@4693ee54
☆ 2017-06-13 13:20:52.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@314d1ee8
☆ 2017-06-13 13:20:52.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@21f51b49
☆ 2017-06-13 13:20:52.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21f51b49
☆ 2017-06-13 13:20:52.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1364e4d7
☆ 2017-06-13 13:20:52.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@347e68db
☆ 2017-06-13 13:20:52.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@347e68db
☆ 2017-06-13 13:20:52.223 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4ec91ac
☆ 2017-06-13 13:20:52.224 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ec91ac
☆ 2017-06-13 13:20:52.224 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6dd39251
☆ 2017-06-13 13:20:52.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f95b82a
☆ 2017-06-13 13:20:52.228 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@ececdc4
☆ 2017-06-13 13:20:52.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@3b332e30
☆ 2017-06-13 13:20:52.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b332e30
☆ 2017-06-13 13:20:52.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60ca9d5
☆ 2017-06-13 13:20:52.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@24ec458a
☆ 2017-06-13 13:20:52.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54d37f88
☆ 2017-06-13 13:20:52.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65342fb4
☆ 2017-06-13 13:20:52.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61570c6
☆ 2017-06-13 13:20:52.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4013b59b
☆ 2017-06-13 13:20:52.232 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f73ad2e
☆ 2017-06-13 13:20:52.232 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b7e6afb
☆ 2017-06-13 13:20:52.239 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 13:20:52.241 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 13:20:52.242 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 13:20:52.242 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 13:20:52.244 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 13:20:52.245 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 13:20:52.391 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 13:20:52.391 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 13:20:52.391 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 13:20:52.399 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 13:20:52.420 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 13:20:52.482 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 13:20:52.483 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 13:20:52.484 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 13:20:52.484 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 13:20:52.485 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 13:20:52.486 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 13:20:52.486 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 13:20:52.487 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 13:20:52.488 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 13:20:52.489 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 13:20:52.490 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 13:20:52.490 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 13:20:52.491 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 13:20:52.492 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 13:20:52.518 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 13:20:52.543 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 13:20:52.558 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 13:20:52.563 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 13:20:52.567 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 13:20:52.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 13:20:52.596 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 13:20:52.598 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 13:20:52.599 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 13:20:52.600 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 13:20:52.604 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 13:20:52.604 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 13:20:52.604 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 13:20:52.604 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 13:20:52.604 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 13:20:52.605 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=serialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 13:20:52.606 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property serialPort with lazy=false
☆ 2017-06-13 13:20:52.606 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:serialPort]
☆ 2017-06-13 13:20:52.606 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for serialPort
☆ 2017-06-13 13:20:52.606 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property serialPort
☆ 2017-06-13 13:20:52.607 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 13:20:52.607 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 13:20:52.607 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for serialPort
☆ 2017-06-13 13:20:52.609 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 13:20:52.700 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 13:21:00.298 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 13:22:55.412 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 13:22:55.419 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 13:22:55.421 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 13:22:55.422 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 13:22:55.487 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 13:22:55.489 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 13:22:55.490 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 13:22:55.502 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 13:22:55.504 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 13:22:55.504 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 13:22:55.508 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 13:22:55.662 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 13:22:55.662 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 13:22:55.662 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 13:22:55.671 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 13:22:55.671 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 13:22:55.680 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 13:22:55.686 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 13:22:55.700 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@774550b3
☆ 2017-06-13 13:22:55.700 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@774550b3
☆ 2017-06-13 13:22:55.700 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@774550b3
☆ 2017-06-13 13:22:55.701 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d0b8bfa
☆ 2017-06-13 13:22:55.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@59811d00
☆ 2017-06-13 13:22:55.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@389357e3
☆ 2017-06-13 13:22:55.703 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@2192d248
☆ 2017-06-13 13:22:55.704 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@2192d248
☆ 2017-06-13 13:22:55.704 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2192d248
☆ 2017-06-13 13:22:55.705 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2e041a0d
☆ 2017-06-13 13:22:55.705 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2e041a0d
☆ 2017-06-13 13:22:55.705 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2e041a0d
☆ 2017-06-13 13:22:55.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@243f2e32
☆ 2017-06-13 13:22:55.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@243f2e32
☆ 2017-06-13 13:22:55.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@243f2e32
☆ 2017-06-13 13:22:55.708 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@61beb61b
☆ 2017-06-13 13:22:55.708 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@61beb61b
☆ 2017-06-13 13:22:55.708 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61beb61b
☆ 2017-06-13 13:22:55.709 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2d7baf8b
☆ 2017-06-13 13:22:55.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2d7baf8b
☆ 2017-06-13 13:22:55.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@2d7baf8b
☆ 2017-06-13 13:22:55.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@376cb39c
☆ 2017-06-13 13:22:55.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@376cb39c
☆ 2017-06-13 13:22:55.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@376cb39c
☆ 2017-06-13 13:22:55.713 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@3f33d331
☆ 2017-06-13 13:22:55.714 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@3f33d331
☆ 2017-06-13 13:22:55.714 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f33d331
☆ 2017-06-13 13:22:55.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@333ba671
☆ 2017-06-13 13:22:55.754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@333ba671
☆ 2017-06-13 13:22:55.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6de75710
☆ 2017-06-13 13:22:55.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6de75710
☆ 2017-06-13 13:22:55.757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@4e4007a9
☆ 2017-06-13 13:22:55.757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@4e4007a9
☆ 2017-06-13 13:22:55.758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8e0e666
☆ 2017-06-13 13:22:55.758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@613eaec4
☆ 2017-06-13 13:22:55.759 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@75455138
☆ 2017-06-13 13:22:55.759 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@75455138
☆ 2017-06-13 13:22:55.761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@478268b6
☆ 2017-06-13 13:22:55.761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@478268b6
☆ 2017-06-13 13:22:55.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@2b49b6e6
☆ 2017-06-13 13:22:55.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b49b6e6
☆ 2017-06-13 13:22:55.763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@58779c10
☆ 2017-06-13 13:22:55.764 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@58779c10
☆ 2017-06-13 13:22:55.764 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@58779c10
☆ 2017-06-13 13:22:55.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55796026
☆ 2017-06-13 13:22:55.766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@319bf5a7
☆ 2017-06-13 13:22:55.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@319bf5a7
☆ 2017-06-13 13:22:55.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@319bf5a7
☆ 2017-06-13 13:22:55.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b300d2
☆ 2017-06-13 13:22:55.768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@701ba50b
☆ 2017-06-13 13:22:55.768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@701ba50b
☆ 2017-06-13 13:22:55.769 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@57bfc6c3
☆ 2017-06-13 13:22:55.769 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@57bfc6c3
☆ 2017-06-13 13:22:55.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7cd1e84d
☆ 2017-06-13 13:22:55.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7cd1e84d
☆ 2017-06-13 13:22:55.771 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@3c162d50
☆ 2017-06-13 13:22:55.771 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c162d50
☆ 2017-06-13 13:22:55.772 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7be5425e
☆ 2017-06-13 13:22:55.772 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7be5425e
☆ 2017-06-13 13:22:55.772 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b2d2598
☆ 2017-06-13 13:22:55.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@3c843abc
☆ 2017-06-13 13:22:55.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@3c843abc
☆ 2017-06-13 13:22:55.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@3c843abc
☆ 2017-06-13 13:22:55.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2759b21d
☆ 2017-06-13 13:22:55.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2759b21d
☆ 2017-06-13 13:22:55.775 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2759b21d
☆ 2017-06-13 13:22:55.775 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@275df5bf
☆ 2017-06-13 13:22:55.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@346f5884
☆ 2017-06-13 13:22:55.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@346f5884
☆ 2017-06-13 13:22:55.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@346f5884
☆ 2017-06-13 13:22:55.777 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@41c84c96
☆ 2017-06-13 13:22:55.777 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@41c84c96
☆ 2017-06-13 13:22:55.777 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@41c84c96
☆ 2017-06-13 13:22:55.777 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@4693ee54
☆ 2017-06-13 13:22:55.778 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@314d1ee8
☆ 2017-06-13 13:22:55.781 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@21f51b49
☆ 2017-06-13 13:22:55.781 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21f51b49
☆ 2017-06-13 13:22:55.781 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1364e4d7
☆ 2017-06-13 13:22:55.784 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@347e68db
☆ 2017-06-13 13:22:55.784 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@347e68db
☆ 2017-06-13 13:22:55.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4ec91ac
☆ 2017-06-13 13:22:55.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ec91ac
☆ 2017-06-13 13:22:55.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6dd39251
☆ 2017-06-13 13:22:55.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f95b82a
☆ 2017-06-13 13:22:55.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@ececdc4
☆ 2017-06-13 13:22:55.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@3b332e30
☆ 2017-06-13 13:22:55.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b332e30
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60ca9d5
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@24ec458a
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54d37f88
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65342fb4
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61570c6
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4013b59b
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f73ad2e
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b7e6afb
☆ 2017-06-13 13:22:55.801 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 13:22:55.803 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 13:22:55.803 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 13:22:55.803 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 13:22:55.806 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 13:22:55.806 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 13:22:55.945 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 13:22:55.945 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 13:22:55.945 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 13:22:55.953 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 13:22:55.973 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 13:22:56.030 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 13:22:56.030 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 13:22:56.031 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 13:22:56.031 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 13:22:56.031 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 13:22:56.032 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 13:22:56.032 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 13:22:56.033 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 13:22:56.034 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 13:22:56.034 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 13:22:56.034 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 13:22:56.035 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 13:22:56.035 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 13:22:56.035 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 13:22:56.056 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 13:22:56.075 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 13:22:56.089 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 13:22:56.093 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 13:22:56.098 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 13:22:56.120 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 13:22:56.122 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 13:22:56.124 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 13:22:56.125 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 13:22:56.126 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 13:22:56.130 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 13:22:56.130 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 13:22:56.130 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 13:22:56.130 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 13:22:56.130 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 13:22:56.132 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=serialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 13:22:56.132 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property serialPort with lazy=false
☆ 2017-06-13 13:22:56.132 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:serialPort]
☆ 2017-06-13 13:22:56.132 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for serialPort
☆ 2017-06-13 13:22:56.132 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property serialPort
☆ 2017-06-13 13:22:56.133 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 13:22:56.133 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 13:22:56.133 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for serialPort
☆ 2017-06-13 13:22:56.135 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 13:22:56.246 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 13:23:07.649 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 13:23:25.942 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 19:11:25.607 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:11:25.614 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:11:25.616 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:11:25.617 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:11:25.681 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:11:25.682 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:11:25.684 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:11:25.696 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:11:25.698 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:11:25.698 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:11:25.702 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:11:25.849 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:11:25.849 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:11:25.849 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:11:25.857 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:11:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:11:25.867 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:11:25.873 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:11:25.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:11:25.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:11:25.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:11:25.888 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ea470d
☆ 2017-06-13 19:11:25.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@655373aa
☆ 2017-06-13 19:11:25.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@357c4a3
☆ 2017-06-13 19:11:25.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:11:25.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:11:25.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:11:25.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:11:25.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:11:25.892 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:11:25.933 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:11:25.933 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:11:25.934 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:11:25.935 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:11:25.935 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:11:25.935 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:11:25.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:11:25.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:11:25.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:11:25.938 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:11:25.938 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:11:25.939 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:11:25.940 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:11:25.940 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:11:25.940 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:11:25.941 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:11:25.941 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:11:25.942 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:11:25.942 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:11:25.943 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:11:25.943 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:11:25.944 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@316eee5d
☆ 2017-06-13 19:11:25.944 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5002da4
☆ 2017-06-13 19:11:25.945 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:11:25.945 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:11:25.947 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:11:25.947 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:11:25.948 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:11:25.948 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:11:25.949 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:11:25.950 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:11:25.950 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:11:25.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@33b1e166
☆ 2017-06-13 19:11:25.952 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:11:25.952 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:11:25.952 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:11:25.953 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a0ff196
☆ 2017-06-13 19:11:25.953 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:11:25.954 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:11:25.954 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:11:25.954 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:11:25.955 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:11:25.955 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:11:25.956 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:11:25.956 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:11:25.957 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:11:25.957 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:11:25.957 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@401d184f
☆ 2017-06-13 19:11:25.958 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:11:25.958 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:11:25.959 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:11:25.959 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:11:25.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:11:25.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:11:25.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4ff05b1
☆ 2017-06-13 19:11:25.961 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:11:25.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:11:25.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:11:25.963 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:11:25.963 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:11:25.963 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:11:25.964 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@261aaca9
☆ 2017-06-13 19:11:25.964 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@1f71486e
☆ 2017-06-13 19:11:25.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:11:25.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:11:25.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75b7337
☆ 2017-06-13 19:11:25.971 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:11:25.971 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:11:25.974 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:11:25.974 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:11:25.974 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ac0108
☆ 2017-06-13 19:11:25.976 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@45592720
☆ 2017-06-13 19:11:25.977 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@27880c09
☆ 2017-06-13 19:11:25.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:11:25.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:11:25.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d7bb06c
☆ 2017-06-13 19:11:25.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@162b8790
☆ 2017-06-13 19:11:25.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5992df2f
☆ 2017-06-13 19:11:25.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d97170
☆ 2017-06-13 19:11:25.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76c14b17
☆ 2017-06-13 19:11:25.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c9c5558
☆ 2017-06-13 19:11:25.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@73389e43
☆ 2017-06-13 19:11:25.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e3723a5
☆ 2017-06-13 19:11:25.988 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:11:25.991 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:11:25.991 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:11:25.991 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:11:25.993 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:11:25.993 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:11:26.136 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:11:26.136 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:11:26.136 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:11:26.145 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:11:26.165 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:11:26.222 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:11:26.223 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:11:26.223 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:11:26.224 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:11:26.224 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:11:26.225 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:11:26.225 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:11:26.226 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:11:26.227 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:11:26.227 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:11:26.227 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:11:26.228 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:11:26.228 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:11:26.229 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:11:26.250 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:11:26.278 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:11:26.294 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:11:26.298 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:11:26.303 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:11:26.331 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:11:26.335 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:11:26.338 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:11:26.339 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:11:26.340 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:11:26.344 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:11:26.345 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:11:26.345 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:11:26.345 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:11:26.345 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:11:26.346 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=serialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:11:26.346 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property serialPort with lazy=false
☆ 2017-06-13 19:11:26.347 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:serialPort]
☆ 2017-06-13 19:11:26.347 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for serialPort
☆ 2017-06-13 19:11:26.347 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property serialPort
☆ 2017-06-13 19:11:26.348 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:11:26.348 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:11:26.348 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for serialPort
☆ 2017-06-13 19:11:26.350 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:11:26.448 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:11:56.133 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 19:12:56.438 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:12:56.446 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:12:56.447 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:12:56.448 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:12:56.513 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:12:56.514 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:12:56.515 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:12:56.528 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:12:56.530 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:12:56.530 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:12:56.534 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:12:56.676 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:12:56.676 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:12:56.676 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:12:56.685 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:12:56.685 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:12:56.694 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:12:56.699 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:12:56.714 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:12:56.714 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:12:56.714 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:12:56.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ea470d
☆ 2017-06-13 19:12:56.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@655373aa
☆ 2017-06-13 19:12:56.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@357c4a3
☆ 2017-06-13 19:12:56.717 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:12:56.718 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:12:56.718 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:12:56.719 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:12:56.719 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:12:56.719 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:12:56.761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:12:56.761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:12:56.761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:12:56.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:12:56.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:12:56.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:12:56.763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:12:56.763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:12:56.764 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:12:56.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:12:56.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:12:56.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:12:56.766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:12:56.766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:12:56.766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:12:56.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:12:56.768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:12:56.768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:12:56.769 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:12:56.769 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:12:56.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:12:56.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@316eee5d
☆ 2017-06-13 19:12:56.771 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5002da4
☆ 2017-06-13 19:12:56.772 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:12:56.772 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:12:56.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:12:56.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:12:56.775 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:12:56.775 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:12:56.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:12:56.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:12:56.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:12:56.777 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@33b1e166
☆ 2017-06-13 19:12:56.778 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:12:56.779 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:12:56.779 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:12:56.780 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a0ff196
☆ 2017-06-13 19:12:56.780 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:12:56.781 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:12:56.781 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:12:56.781 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:12:56.782 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:12:56.782 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:12:56.783 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:12:56.783 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:12:56.784 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:12:56.785 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:12:56.785 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@401d184f
☆ 2017-06-13 19:12:56.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:12:56.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:12:56.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:12:56.787 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:12:56.787 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:12:56.787 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:12:56.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4ff05b1
☆ 2017-06-13 19:12:56.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:12:56.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:12:56.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:12:56.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:12:56.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:12:56.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:12:56.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@261aaca9
☆ 2017-06-13 19:12:56.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@1f71486e
☆ 2017-06-13 19:12:56.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:12:56.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:12:56.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75b7337
☆ 2017-06-13 19:12:56.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:12:56.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:12:56.799 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:12:56.799 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:12:56.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ac0108
☆ 2017-06-13 19:12:56.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@45592720
☆ 2017-06-13 19:12:56.803 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@27880c09
☆ 2017-06-13 19:12:56.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:12:56.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:12:56.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d7bb06c
☆ 2017-06-13 19:12:56.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@162b8790
☆ 2017-06-13 19:12:56.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5992df2f
☆ 2017-06-13 19:12:56.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d97170
☆ 2017-06-13 19:12:56.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76c14b17
☆ 2017-06-13 19:12:56.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c9c5558
☆ 2017-06-13 19:12:56.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@73389e43
☆ 2017-06-13 19:12:56.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e3723a5
☆ 2017-06-13 19:12:56.814 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:12:56.816 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:12:56.817 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:12:56.817 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:12:56.819 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:12:56.819 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:12:56.958 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:12:56.958 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:12:56.958 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:12:56.967 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:12:56.986 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:12:57.042 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:12:57.042 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:12:57.043 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:12:57.043 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:12:57.043 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:12:57.044 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:12:57.044 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:12:57.045 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:12:57.046 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:12:57.046 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:12:57.047 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:12:57.047 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:12:57.047 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:12:57.048 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:12:57.069 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:12:57.088 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:12:57.102 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:12:57.106 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:12:57.110 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:12:57.131 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:12:57.134 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:12:57.135 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:12:57.136 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:12:57.137 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:12:57.141 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:12:57.141 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:12:57.141 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:12:57.141 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:12:57.141 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:12:57.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=serialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:12:57.143 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property serialPort with lazy=false
☆ 2017-06-13 19:12:57.143 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:serialPort]
☆ 2017-06-13 19:12:57.143 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for serialPort
☆ 2017-06-13 19:12:57.143 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property serialPort
☆ 2017-06-13 19:12:57.144 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:12:57.144 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:12:57.145 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for serialPort
☆ 2017-06-13 19:12:57.146 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:12:57.226 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:13:10.960 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:13:19.399 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:14:46.216 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:14:46.224 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:14:46.225 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:14:46.227 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:14:46.290 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:14:46.291 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:14:46.292 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:14:46.305 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:14:46.306 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:14:46.307 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:14:46.310 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:14:46.456 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:14:46.456 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:14:46.457 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:14:46.465 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:14:46.466 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:14:46.475 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:14:46.481 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:14:46.495 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@49eaa411
☆ 2017-06-13 19:14:46.495 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@49eaa411
☆ 2017-06-13 19:14:46.496 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@49eaa411
☆ 2017-06-13 19:14:46.496 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@258e4dbe
☆ 2017-06-13 19:14:46.497 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@72abe7c5
☆ 2017-06-13 19:14:46.498 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@40326e09
☆ 2017-06-13 19:14:46.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@cc9be70
☆ 2017-06-13 19:14:46.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@cc9be70
☆ 2017-06-13 19:14:46.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@cc9be70
☆ 2017-06-13 19:14:46.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@d5099a9
☆ 2017-06-13 19:14:46.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@d5099a9
☆ 2017-06-13 19:14:46.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d5099a9
☆ 2017-06-13 19:14:46.541 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@78f32daa
☆ 2017-06-13 19:14:46.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@78f32daa
☆ 2017-06-13 19:14:46.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78f32daa
☆ 2017-06-13 19:14:46.543 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@77f72db
☆ 2017-06-13 19:14:46.544 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@77f72db
☆ 2017-06-13 19:14:46.544 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77f72db
☆ 2017-06-13 19:14:46.546 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@8cf1d3
☆ 2017-06-13 19:14:46.546 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@8cf1d3
☆ 2017-06-13 19:14:46.546 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@8cf1d3
☆ 2017-06-13 19:14:46.548 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@cfcb637
☆ 2017-06-13 19:14:46.548 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@cfcb637
☆ 2017-06-13 19:14:46.548 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@cfcb637
☆ 2017-06-13 19:14:46.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@51a1c9a2
☆ 2017-06-13 19:14:46.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@51a1c9a2
☆ 2017-06-13 19:14:46.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51a1c9a2
☆ 2017-06-13 19:14:46.551 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@208ecfe
☆ 2017-06-13 19:14:46.551 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@208ecfe
☆ 2017-06-13 19:14:46.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@12dccb64
☆ 2017-06-13 19:14:46.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@12dccb64
☆ 2017-06-13 19:14:46.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2f993aed
☆ 2017-06-13 19:14:46.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2f993aed
☆ 2017-06-13 19:14:46.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19895d69
☆ 2017-06-13 19:14:46.554 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@a4e3e17
☆ 2017-06-13 19:14:46.555 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@58e11c11
☆ 2017-06-13 19:14:46.555 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@58e11c11
☆ 2017-06-13 19:14:46.557 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@7bc88be7
☆ 2017-06-13 19:14:46.557 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@7bc88be7
☆ 2017-06-13 19:14:46.558 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@77659c05
☆ 2017-06-13 19:14:46.558 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77659c05
☆ 2017-06-13 19:14:46.559 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@660fd491
☆ 2017-06-13 19:14:46.560 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@660fd491
☆ 2017-06-13 19:14:46.560 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@660fd491
☆ 2017-06-13 19:14:46.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7e6715f1
☆ 2017-06-13 19:14:46.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@7f71bc17
☆ 2017-06-13 19:14:46.563 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f71bc17
☆ 2017-06-13 19:14:46.563 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f71bc17
☆ 2017-06-13 19:14:46.563 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52ae59b4
☆ 2017-06-13 19:14:46.564 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@7694c62b
☆ 2017-06-13 19:14:46.564 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7694c62b
☆ 2017-06-13 19:14:46.565 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@2b4c6c88
☆ 2017-06-13 19:14:46.565 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2b4c6c88
☆ 2017-06-13 19:14:46.566 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ef6d6ab
☆ 2017-06-13 19:14:46.566 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ef6d6ab
☆ 2017-06-13 19:14:46.567 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@5cf26cad
☆ 2017-06-13 19:14:46.567 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5cf26cad
☆ 2017-06-13 19:14:46.568 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1fa3317b
☆ 2017-06-13 19:14:46.568 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1fa3317b
☆ 2017-06-13 19:14:46.568 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@33ab96f5
☆ 2017-06-13 19:14:46.569 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@403df9f
☆ 2017-06-13 19:14:46.569 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@403df9f
☆ 2017-06-13 19:14:46.569 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@403df9f
☆ 2017-06-13 19:14:46.570 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c5512db
☆ 2017-06-13 19:14:46.570 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c5512db
☆ 2017-06-13 19:14:46.570 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c5512db
☆ 2017-06-13 19:14:46.571 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@184ed38e
☆ 2017-06-13 19:14:46.572 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@246df6e
☆ 2017-06-13 19:14:46.572 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@246df6e
☆ 2017-06-13 19:14:46.572 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@246df6e
☆ 2017-06-13 19:14:46.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@302a1e99
☆ 2017-06-13 19:14:46.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@302a1e99
☆ 2017-06-13 19:14:46.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@302a1e99
☆ 2017-06-13 19:14:46.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1307ac75
☆ 2017-06-13 19:14:46.574 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@60bd436e
☆ 2017-06-13 19:14:46.576 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3a251988
☆ 2017-06-13 19:14:46.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a251988
☆ 2017-06-13 19:14:46.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@31349e88
☆ 2017-06-13 19:14:46.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@1692cefd
☆ 2017-06-13 19:14:46.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1692cefd
☆ 2017-06-13 19:14:46.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@7b5ce49b
☆ 2017-06-13 19:14:46.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7b5ce49b
☆ 2017-06-13 19:14:46.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2989580a
☆ 2017-06-13 19:14:46.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3134da40
☆ 2017-06-13 19:14:46.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@6964f76f
☆ 2017-06-13 19:14:46.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@2216554c
☆ 2017-06-13 19:14:46.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2216554c
☆ 2017-06-13 19:14:46.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@142976e9
☆ 2017-06-13 19:14:46.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@405ed15
☆ 2017-06-13 19:14:46.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7e4b2da3
☆ 2017-06-13 19:14:46.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@916c01
☆ 2017-06-13 19:14:46.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5fd0dcc4
☆ 2017-06-13 19:14:46.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7496ff6e
☆ 2017-06-13 19:14:46.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5397e26a
☆ 2017-06-13 19:14:46.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@586d7d7d
☆ 2017-06-13 19:14:46.600 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:14:46.602 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:14:46.603 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:14:46.603 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:14:46.606 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:14:46.607 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:14:46.758 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:14:46.758 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:14:46.758 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:14:46.766 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:14:46.786 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:14:46.842 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:14:46.842 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:14:46.842 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:14:46.843 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:14:46.843 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:14:46.844 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:14:46.844 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:14:46.845 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:14:46.845 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:14:46.846 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:14:46.846 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:14:46.889 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:14:46.890 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:14:46.890 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:14:46.911 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:14:46.929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:14:46.944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:14:46.948 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:14:46.952 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:14:46.976 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:14:46.979 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:14:46.981 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:14:46.982 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:14:46.984 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:14:46.988 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:14:46.988 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:14:46.988 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:14:46.988 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:14:46.988 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:14:46.989 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:14:46.990 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:14:46.991 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:14:47.013 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:14:47.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:14:47.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@37ef4b56
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:14:47.018 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:14:47.018 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:14:47.018 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:14:47.050 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:14:47.052 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:14:47.052 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5ec9b141, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:14:47.059 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:14:47.082 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:14:47.082 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:14:47.112 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:14:47.112 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:14:47.152 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:14:47.152 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:14:47.152 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:14:47.152 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:14:47.153 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:14:47.153 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:14:47.168 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dd93099]
☆ 2017-06-13 19:14:47.169 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.169 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.180 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.185 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.186 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:14:47.187 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ec7f68]
☆ 2017-06-13 19:14:47.187 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.187 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.187 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.187 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.187 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22813740]
☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dfe49be]
☆ 2017-06-13 19:14:47.189 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.189 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.189 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.189 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.190 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.190 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3814cf3b]
☆ 2017-06-13 19:14:47.190 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.190 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.190 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.191 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.191 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.191 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52c68573]
☆ 2017-06-13 19:14:47.191 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.191 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.191 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.192 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.192 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.192 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@790d55f5]
☆ 2017-06-13 19:14:47.192 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.192 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.193 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.193 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.193 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.193 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64334b4]
☆ 2017-06-13 19:14:47.193 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.194 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.194 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.194 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.194 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.194 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3038dc7]
☆ 2017-06-13 19:14:47.195 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.195 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.195 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.196 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.196 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.196 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ad22531]
☆ 2017-06-13 19:14:47.196 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.196 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.196 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.197 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.197 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:14:47.197 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2312c154]
☆ 2017-06-13 19:14:47.197 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.197 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.198 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.198 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.198 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:14:47.214 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:14:47.214 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:14:47.214 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:14:47.218 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:14:47.232 [JavaFX Application Thread] INFO  o.h.t.s.e.i.InformationExtractorJdbcDatabaseMetaDataImpl
		MESSAGE: HHH000262: Table not found: MeWConfig
☆ 2017-06-13 19:14:47.233 [JavaFX Application Thread] INFO  o.h.t.s.e.i.InformationExtractorJdbcDatabaseMetaDataImpl
		MESSAGE: HHH000262: Table not found: MeWConfig
☆ 2017-06-13 19:14:47.248 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:14:47.249 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:14:47.250 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:14:47.252 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:14:47.252 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:14:47.253 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@178449d5
☆ 2017-06-13 19:14:47.254 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 9c775f22-c96d-437b-88a7-8cb6d007c482 (<unnamed>)
☆ 2017-06-13 19:14:47.254 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:14:47.287 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:14:47.358 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:15:00.654 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:15:05.746 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:15:05.747 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:15:05.747 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:15:05.755 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:15:19.107 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:15:19.115 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:15:19.116 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:15:19.118 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:15:19.183 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:15:19.185 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:15:19.186 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:15:19.198 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:15:19.200 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:15:19.200 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:15:19.204 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:15:19.348 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:15:19.348 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:15:19.348 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:15:19.357 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:15:19.357 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:15:19.366 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:15:19.372 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:15:19.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:15:19.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:15:19.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:15:19.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ea470d
☆ 2017-06-13 19:15:19.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@655373aa
☆ 2017-06-13 19:15:19.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@357c4a3
☆ 2017-06-13 19:15:19.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:15:19.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:15:19.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:15:19.390 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:15:19.390 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:15:19.390 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:15:19.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:15:19.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:15:19.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:15:19.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:15:19.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:15:19.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:15:19.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:15:19.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:15:19.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:15:19.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:15:19.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:15:19.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:15:19.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:15:19.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:15:19.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:15:19.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:15:19.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:15:19.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:15:19.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:15:19.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:15:19.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:15:19.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@316eee5d
☆ 2017-06-13 19:15:19.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5002da4
☆ 2017-06-13 19:15:19.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:15:19.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:15:19.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:15:19.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:15:19.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:15:19.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:15:19.445 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:15:19.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:15:19.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:15:19.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@33b1e166
☆ 2017-06-13 19:15:19.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:15:19.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:15:19.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:15:19.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a0ff196
☆ 2017-06-13 19:15:19.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:15:19.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:15:19.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:15:19.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:15:19.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:15:19.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:15:19.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:15:19.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:15:19.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:15:19.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:15:19.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@401d184f
☆ 2017-06-13 19:15:19.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:15:19.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:15:19.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:15:19.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:15:19.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:15:19.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:15:19.457 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4ff05b1
☆ 2017-06-13 19:15:19.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:15:19.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:15:19.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:15:19.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:15:19.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:15:19.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:15:19.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@261aaca9
☆ 2017-06-13 19:15:19.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@1f71486e
☆ 2017-06-13 19:15:19.463 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:15:19.463 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:15:19.463 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75b7337
☆ 2017-06-13 19:15:19.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:15:19.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:15:19.468 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:15:19.468 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:15:19.469 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ac0108
☆ 2017-06-13 19:15:19.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@45592720
☆ 2017-06-13 19:15:19.472 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@27880c09
☆ 2017-06-13 19:15:19.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:15:19.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:15:19.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d7bb06c
☆ 2017-06-13 19:15:19.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@162b8790
☆ 2017-06-13 19:15:19.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5992df2f
☆ 2017-06-13 19:15:19.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d97170
☆ 2017-06-13 19:15:19.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76c14b17
☆ 2017-06-13 19:15:19.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c9c5558
☆ 2017-06-13 19:15:19.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@73389e43
☆ 2017-06-13 19:15:19.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e3723a5
☆ 2017-06-13 19:15:19.484 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:15:19.486 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:15:19.486 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:15:19.486 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:15:19.488 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:15:19.489 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:15:19.634 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:15:19.634 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:15:19.634 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:15:19.643 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:15:19.662 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:15:19.720 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:15:19.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:15:19.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:15:19.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:15:19.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:15:19.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:15:19.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:15:19.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:15:19.724 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:15:19.725 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:15:19.725 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:15:19.725 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:15:19.726 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:15:19.726 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:15:19.748 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:15:19.768 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:15:19.782 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:15:19.786 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:15:19.790 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:15:19.812 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:15:19.815 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:15:19.816 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:15:19.817 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:15:19.819 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:15:19.822 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:15:19.822 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:15:19.822 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:15:19.822 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:15:19.823 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:15:19.823 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:15:19.824 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:15:19.825 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:15:19.847 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:15:19.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:15:19.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:15:19.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1a120373
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:15:19.852 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:15:19.852 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:15:19.852 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:15:19.852 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:15:19.852 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:15:19.882 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:15:19.884 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:15:19.884 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@180bf39, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:15:19.891 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:15:19.913 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:15:19.913 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:15:19.921 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:15:19.922 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:15:19.961 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:15:19.961 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:15:19.961 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:15:19.961 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:15:19.961 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:15:19.961 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:15:19.977 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@322b1cb4]
☆ 2017-06-13 19:15:19.977 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.978 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.988 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.991 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:19.993 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:15:19.993 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5443e044]
☆ 2017-06-13 19:15:19.993 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.993 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.993 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.994 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:19.994 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:15:19.994 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e57233c]
☆ 2017-06-13 19:15:19.994 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.994 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.994 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.995 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:19.995 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:19.995 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5169c57a]
☆ 2017-06-13 19:15:19.995 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.995 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.996 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.996 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:19.996 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:19.996 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22348aa]
☆ 2017-06-13 19:15:19.996 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.997 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.997 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.997 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:19.997 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:19.997 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1da0163b]
☆ 2017-06-13 19:15:19.997 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.998 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.998 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.998 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:19.998 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:19.998 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46d8a284]
☆ 2017-06-13 19:15:19.999 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.999 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.999 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.999 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:20.000 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:20.000 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33490c70]
☆ 2017-06-13 19:15:20.000 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:20.000 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:20.000 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:20.001 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:20.001 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:20.001 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f7114d]
☆ 2017-06-13 19:15:20.001 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:20.001 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:20.002 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:20.002 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:20.002 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:20.002 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23d17ecc]
☆ 2017-06-13 19:15:20.002 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:20.002 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:20.003 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:20.003 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:20.003 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:15:20.003 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5acc44d0]
☆ 2017-06-13 19:15:20.004 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:20.004 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:20.004 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:20.004 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:20.004 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:15:20.017 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:15:20.017 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:15:20.018 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:15:20.020 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:15:20.036 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:15:20.039 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:15:20.040 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:15:20.041 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:15:20.042 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:15:20.042 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:15:20.043 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@71f4f10a
☆ 2017-06-13 19:15:20.044 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 0e669f0b-e81c-4890-a450-0db308c3eba7 (<unnamed>)
☆ 2017-06-13 19:15:20.045 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:15:20.080 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:15:20.142 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:15:32.582 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:15:40.598 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:15:42.265 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:15:42.266 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:15:42.266 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:15:42.270 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:16:42.073 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:16:42.080 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:16:42.082 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:16:42.083 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:16:42.148 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:16:42.149 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:16:42.150 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:16:42.163 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:16:42.165 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:16:42.165 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:16:42.168 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:16:42.351 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:16:42.351 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:16:42.351 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:16:42.363 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:16:42.364 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:16:42.374 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:16:42.379 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:16:42.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:16:42.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:16:42.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:16:42.395 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ea470d
☆ 2017-06-13 19:16:42.396 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@655373aa
☆ 2017-06-13 19:16:42.396 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@357c4a3
☆ 2017-06-13 19:16:42.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:16:42.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:16:42.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:16:42.399 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:16:42.399 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:16:42.399 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:16:42.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:16:42.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:16:42.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:16:42.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:16:42.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:16:42.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:16:42.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:16:42.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:16:42.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:16:42.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:16:42.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:16:42.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:16:42.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:16:42.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:16:42.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:16:42.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:16:42.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:16:42.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:16:42.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:16:42.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:16:42.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:16:42.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@316eee5d
☆ 2017-06-13 19:16:42.445 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5002da4
☆ 2017-06-13 19:16:42.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:16:42.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:16:42.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:16:42.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:16:42.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:16:42.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:16:42.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:16:42.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:16:42.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:16:42.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@33b1e166
☆ 2017-06-13 19:16:42.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:16:42.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:16:42.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:16:42.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a0ff196
☆ 2017-06-13 19:16:42.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:16:42.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:16:42.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:16:42.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:16:42.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:16:42.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:16:42.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:16:42.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:16:42.457 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:16:42.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:16:42.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@401d184f
☆ 2017-06-13 19:16:42.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:16:42.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:16:42.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:16:42.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:16:42.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:16:42.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:16:42.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4ff05b1
☆ 2017-06-13 19:16:42.461 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:16:42.461 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:16:42.461 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:16:42.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:16:42.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:16:42.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:16:42.463 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@261aaca9
☆ 2017-06-13 19:16:42.463 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@1f71486e
☆ 2017-06-13 19:16:42.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:16:42.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:16:42.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75b7337
☆ 2017-06-13 19:16:42.469 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:16:42.469 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:16:42.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:16:42.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:16:42.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ac0108
☆ 2017-06-13 19:16:42.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@45592720
☆ 2017-06-13 19:16:42.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@27880c09
☆ 2017-06-13 19:16:42.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:16:42.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d7bb06c
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@162b8790
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5992df2f
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d97170
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76c14b17
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c9c5558
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@73389e43
☆ 2017-06-13 19:16:42.479 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e3723a5
☆ 2017-06-13 19:16:42.486 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:16:42.488 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:16:42.489 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:16:42.489 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:16:42.491 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:16:42.491 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:16:42.635 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:16:42.635 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:16:42.635 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:16:42.644 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:16:42.663 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:16:42.718 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:16:42.719 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:16:42.719 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:16:42.719 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:16:42.720 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:16:42.720 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:16:42.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:16:42.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:16:42.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:16:42.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:16:42.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:16:42.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:16:42.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:16:42.724 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:16:42.745 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:16:42.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:16:42.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:16:42.782 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:16:42.786 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:16:42.808 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:16:42.810 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:16:42.812 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:16:42.813 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:16:42.814 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:16:42.817 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:16:42.818 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:16:42.818 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:16:42.818 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:16:42.818 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:16:42.819 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:16:42.819 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:16:42.820 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:16:42.842 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:16:42.843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:16:42.843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:16:42.843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:16:42.843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1a120373
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:16:42.881 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:16:42.883 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:16:42.892 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@180bf39, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:16:42.901 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:16:42.924 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:16:42.924 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:16:42.933 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:16:42.933 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:16:42.972 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:16:42.972 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:16:42.972 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:16:42.972 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:16:42.973 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:16:42.973 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:16:42.987 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@322b1cb4]
☆ 2017-06-13 19:16:42.988 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:42.988 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:42.998 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.001 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.003 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:16:43.003 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5443e044]
☆ 2017-06-13 19:16:43.003 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.003 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.004 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.004 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.004 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:16:43.004 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e57233c]
☆ 2017-06-13 19:16:43.004 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.004 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.005 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.005 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.005 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.005 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5169c57a]
☆ 2017-06-13 19:16:43.005 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.006 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.006 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.006 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.006 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.006 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22348aa]
☆ 2017-06-13 19:16:43.007 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.007 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.007 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.007 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.007 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.008 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1da0163b]
☆ 2017-06-13 19:16:43.008 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.008 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.008 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.008 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.009 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.009 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46d8a284]
☆ 2017-06-13 19:16:43.009 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.009 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.009 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.010 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.010 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.010 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33490c70]
☆ 2017-06-13 19:16:43.010 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.010 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.010 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.011 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.011 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.011 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f7114d]
☆ 2017-06-13 19:16:43.011 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.012 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.012 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.012 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.012 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.012 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23d17ecc]
☆ 2017-06-13 19:16:43.013 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.013 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.013 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.013 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5acc44d0]
☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:16:43.027 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:16:43.027 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:16:43.027 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:16:43.029 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:16:43.046 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:16:43.048 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:16:43.049 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:16:43.050 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:16:43.051 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:16:43.051 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:16:43.052 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@71f4f10a
☆ 2017-06-13 19:16:43.054 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 37b3674f-d28a-4704-9a1c-b6086dcdea9d (<unnamed>)
☆ 2017-06-13 19:16:43.054 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:16:43.086 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:16:43.145 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:17:00.097 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:17:00.098 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:17:00.098 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:17:00.104 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:21:09.461 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:21:09.469 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:21:09.471 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:21:09.472 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:21:09.537 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:21:09.538 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:21:09.539 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:21:09.552 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:21:09.553 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:21:09.554 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:21:09.557 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:21:09.701 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:21:09.701 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:21:09.702 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:21:09.710 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:21:09.711 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:21:09.720 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:21:09.726 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:21:09.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@263bb3c8
☆ 2017-06-13 19:21:09.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@263bb3c8
☆ 2017-06-13 19:21:09.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@263bb3c8
☆ 2017-06-13 19:21:09.741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3bb4a3cc
☆ 2017-06-13 19:21:09.741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@4759f06e
☆ 2017-06-13 19:21:09.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@525b595a
☆ 2017-06-13 19:21:09.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@109156eb
☆ 2017-06-13 19:21:09.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@109156eb
☆ 2017-06-13 19:21:09.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@109156eb
☆ 2017-06-13 19:21:09.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@6710544f
☆ 2017-06-13 19:21:09.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@6710544f
☆ 2017-06-13 19:21:09.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6710544f
☆ 2017-06-13 19:21:09.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@232f23fa
☆ 2017-06-13 19:21:09.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@232f23fa
☆ 2017-06-13 19:21:09.746 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@232f23fa
☆ 2017-06-13 19:21:09.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@228cc27
☆ 2017-06-13 19:21:09.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@228cc27
☆ 2017-06-13 19:21:09.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@228cc27
☆ 2017-06-13 19:21:09.787 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2d8cba37
☆ 2017-06-13 19:21:09.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2d8cba37
☆ 2017-06-13 19:21:09.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@2d8cba37
☆ 2017-06-13 19:21:09.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7f9b70c1
☆ 2017-06-13 19:21:09.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7f9b70c1
☆ 2017-06-13 19:21:09.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f9b70c1
☆ 2017-06-13 19:21:09.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@47634fcf
☆ 2017-06-13 19:21:09.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@47634fcf
☆ 2017-06-13 19:21:09.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@47634fcf
☆ 2017-06-13 19:21:09.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b0662ed
☆ 2017-06-13 19:21:09.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b0662ed
☆ 2017-06-13 19:21:09.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@11e918a2
☆ 2017-06-13 19:21:09.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@11e918a2
☆ 2017-06-13 19:21:09.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@7fa22c62
☆ 2017-06-13 19:21:09.795 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@7fa22c62
☆ 2017-06-13 19:21:09.795 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6fb57501
☆ 2017-06-13 19:21:09.796 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@13be6c02
☆ 2017-06-13 19:21:09.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@21ddb85
☆ 2017-06-13 19:21:09.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@21ddb85
☆ 2017-06-13 19:21:09.799 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@767d1c65
☆ 2017-06-13 19:21:09.799 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@767d1c65
☆ 2017-06-13 19:21:09.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6740f4b0
☆ 2017-06-13 19:21:09.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6740f4b0
☆ 2017-06-13 19:21:09.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@37318b33
☆ 2017-06-13 19:21:09.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37318b33
☆ 2017-06-13 19:21:09.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37318b33
☆ 2017-06-13 19:21:09.804 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@39b2e
☆ 2017-06-13 19:21:09.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@589f544a
☆ 2017-06-13 19:21:09.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@589f544a
☆ 2017-06-13 19:21:09.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@589f544a
☆ 2017-06-13 19:21:09.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bc2e294
☆ 2017-06-13 19:21:09.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@40a39e9c
☆ 2017-06-13 19:21:09.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40a39e9c
☆ 2017-06-13 19:21:09.808 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@4c968480
☆ 2017-06-13 19:21:09.808 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4c968480
☆ 2017-06-13 19:21:09.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@48abcd7b
☆ 2017-06-13 19:21:09.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48abcd7b
☆ 2017-06-13 19:21:09.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@78f2265e
☆ 2017-06-13 19:21:09.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78f2265e
☆ 2017-06-13 19:21:09.811 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a3267
☆ 2017-06-13 19:21:09.811 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a3267
☆ 2017-06-13 19:21:09.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@76a6add5
☆ 2017-06-13 19:21:09.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1564d98e
☆ 2017-06-13 19:21:09.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1564d98e
☆ 2017-06-13 19:21:09.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1564d98e
☆ 2017-06-13 19:21:09.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@da1ba58
☆ 2017-06-13 19:21:09.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@da1ba58
☆ 2017-06-13 19:21:09.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@da1ba58
☆ 2017-06-13 19:21:09.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@274d98de
☆ 2017-06-13 19:21:09.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@12026a78
☆ 2017-06-13 19:21:09.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@12026a78
☆ 2017-06-13 19:21:09.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@12026a78
☆ 2017-06-13 19:21:09.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@59f6531e
☆ 2017-06-13 19:21:09.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@59f6531e
☆ 2017-06-13 19:21:09.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@59f6531e
☆ 2017-06-13 19:21:09.817 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@33e8caa3
☆ 2017-06-13 19:21:09.817 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6eb40a7e
☆ 2017-06-13 19:21:09.820 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@44ca6d97
☆ 2017-06-13 19:21:09.820 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@44ca6d97
☆ 2017-06-13 19:21:09.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67f23ce2
☆ 2017-06-13 19:21:09.823 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@28803610
☆ 2017-06-13 19:21:09.823 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28803610
☆ 2017-06-13 19:21:09.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@68423c69
☆ 2017-06-13 19:21:09.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@68423c69
☆ 2017-06-13 19:21:09.826 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4259f7aa
☆ 2017-06-13 19:21:09.828 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fc44005
☆ 2017-06-13 19:21:09.829 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@1f33f09
☆ 2017-06-13 19:21:09.831 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@21feb725
☆ 2017-06-13 19:21:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@21feb725
☆ 2017-06-13 19:21:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@14f981ec
☆ 2017-06-13 19:21:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@406a5bc9
☆ 2017-06-13 19:21:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1dcf7fd7
☆ 2017-06-13 19:21:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a8cf04a
☆ 2017-06-13 19:21:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@62a2f016
☆ 2017-06-13 19:21:09.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@70845b98
☆ 2017-06-13 19:21:09.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@16d3b398
☆ 2017-06-13 19:21:09.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b000fa8
☆ 2017-06-13 19:21:09.840 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:21:09.842 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:21:09.843 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:21:09.843 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:21:09.845 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:21:09.845 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:21:09.989 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:21:09.990 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:21:09.990 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:21:09.998 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:21:10.018 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:21:10.073 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:21:10.073 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:21:10.074 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:21:10.074 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:21:10.074 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:21:10.075 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:21:10.075 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:21:10.076 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:21:10.077 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:21:10.077 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:21:10.078 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:21:10.078 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:21:10.078 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:21:10.079 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:21:10.100 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:21:10.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:21:10.133 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:21:10.136 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:21:10.141 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:21:10.163 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:21:10.166 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:21:10.167 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:21:10.168 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:21:10.169 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:21:10.173 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:21:10.173 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:21:10.173 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:21:10.173 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:21:10.173 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:21:10.174 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:21:10.174 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:21:10.175 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:21:10.198 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@207d61f0
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:21:10.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:21:10.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:21:10.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:21:10.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:21:10.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:21:10.234 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:21:10.235 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:21:10.235 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7a2447e1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:21:10.243 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:21:10.265 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:21:10.265 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:21:10.274 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:21:10.274 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:21:10.314 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:21:10.315 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:21:10.315 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:21:10.315 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:21:10.315 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:21:10.315 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:21:10.329 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382ae0a9]
☆ 2017-06-13 19:21:10.330 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.330 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.340 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.343 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.344 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@668ad24b]
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c018fd9]
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22ef9883]
☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3766831d]
☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.348 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.348 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.348 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43be7209]
☆ 2017-06-13 19:21:10.348 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.348 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.348 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a2bd79f]
☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@296817a6]
☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.351 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420c7b7a]
☆ 2017-06-13 19:21:10.351 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.351 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.351 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.351 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a3723]
☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:21:10.353 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1be39867]
☆ 2017-06-13 19:21:10.353 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.353 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.353 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.353 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.353 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:21:10.365 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:21:10.365 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:21:10.365 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:21:10.367 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:21:10.384 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:21:10.386 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:21:10.386 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:21:10.388 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:21:10.389 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:21:10.389 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:21:10.390 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@55f3368f
☆ 2017-06-13 19:21:10.391 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 286721be-715a-460a-96d3-e5615e4f65ab (<unnamed>)
☆ 2017-06-13 19:21:10.391 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:21:10.424 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:21:10.436 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_ from MeWConfig this_
☆ 2017-06-13 19:23:54.666 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:23:54.674 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:23:54.675 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:23:54.677 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:23:54.743 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:23:54.744 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:23:54.745 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:23:54.758 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:23:54.759 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:23:54.760 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:23:54.763 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:23:54.907 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:23:54.907 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:23:54.908 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:23:54.916 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:23:54.917 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:23:54.927 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:23:54.932 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:23:54.946 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ce4864c
☆ 2017-06-13 19:23:54.947 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ce4864c
☆ 2017-06-13 19:23:54.947 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ce4864c
☆ 2017-06-13 19:23:54.948 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e7b27d2
☆ 2017-06-13 19:23:54.949 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@6efaaf56
☆ 2017-06-13 19:23:54.950 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@5544577b
☆ 2017-06-13 19:23:54.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@32531bab
☆ 2017-06-13 19:23:54.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@32531bab
☆ 2017-06-13 19:23:54.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32531bab
☆ 2017-06-13 19:23:54.952 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@df83ead
☆ 2017-06-13 19:23:54.953 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@df83ead
☆ 2017-06-13 19:23:54.953 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@df83ead
☆ 2017-06-13 19:23:54.954 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@63771287
☆ 2017-06-13 19:23:54.954 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@63771287
☆ 2017-06-13 19:23:54.955 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@63771287
☆ 2017-06-13 19:23:54.956 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@52f467c8
☆ 2017-06-13 19:23:54.956 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@52f467c8
☆ 2017-06-13 19:23:54.956 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f467c8
☆ 2017-06-13 19:23:54.958 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@49f3c87d
☆ 2017-06-13 19:23:54.958 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@49f3c87d
☆ 2017-06-13 19:23:54.958 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@49f3c87d
☆ 2017-06-13 19:23:54.959 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4c72f1f9
☆ 2017-06-13 19:23:54.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4c72f1f9
☆ 2017-06-13 19:23:54.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c72f1f9
☆ 2017-06-13 19:23:55.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1986b853
☆ 2017-06-13 19:23:55.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1986b853
☆ 2017-06-13 19:23:55.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1986b853
☆ 2017-06-13 19:23:55.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5eea5769
☆ 2017-06-13 19:23:55.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5eea5769
☆ 2017-06-13 19:23:55.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@198ad5f1
☆ 2017-06-13 19:23:55.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@198ad5f1
☆ 2017-06-13 19:23:55.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@48b7dd83
☆ 2017-06-13 19:23:55.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@48b7dd83
☆ 2017-06-13 19:23:55.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@279b3f63
☆ 2017-06-13 19:23:55.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f836598
☆ 2017-06-13 19:23:55.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@6d9c18e1
☆ 2017-06-13 19:23:55.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d9c18e1
☆ 2017-06-13 19:23:55.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@61b0ee9a
☆ 2017-06-13 19:23:55.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61b0ee9a
☆ 2017-06-13 19:23:55.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@7942d5ac
☆ 2017-06-13 19:23:55.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7942d5ac
☆ 2017-06-13 19:23:55.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@2e0439d7
☆ 2017-06-13 19:23:55.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2e0439d7
☆ 2017-06-13 19:23:55.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2e0439d7
☆ 2017-06-13 19:23:55.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@766d870c
☆ 2017-06-13 19:23:55.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@6b954091
☆ 2017-06-13 19:23:55.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6b954091
☆ 2017-06-13 19:23:55.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6b954091
☆ 2017-06-13 19:23:55.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62635a8e
☆ 2017-06-13 19:23:55.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@626f9afe
☆ 2017-06-13 19:23:55.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@626f9afe
☆ 2017-06-13 19:23:55.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@475d0a53
☆ 2017-06-13 19:23:55.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@475d0a53
☆ 2017-06-13 19:23:55.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1de4f6cd
☆ 2017-06-13 19:23:55.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1de4f6cd
☆ 2017-06-13 19:23:55.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@4fa370e9
☆ 2017-06-13 19:23:55.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4fa370e9
☆ 2017-06-13 19:23:55.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e93ba6c
☆ 2017-06-13 19:23:55.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e93ba6c
☆ 2017-06-13 19:23:55.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29841709
☆ 2017-06-13 19:23:55.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@15e2cfa1
☆ 2017-06-13 19:23:55.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@15e2cfa1
☆ 2017-06-13 19:23:55.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@15e2cfa1
☆ 2017-06-13 19:23:55.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3768ffcf
☆ 2017-06-13 19:23:55.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3768ffcf
☆ 2017-06-13 19:23:55.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3768ffcf
☆ 2017-06-13 19:23:55.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@40631ce6
☆ 2017-06-13 19:23:55.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@5b4ac058
☆ 2017-06-13 19:23:55.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@5b4ac058
☆ 2017-06-13 19:23:55.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@5b4ac058
☆ 2017-06-13 19:23:55.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4743df3c
☆ 2017-06-13 19:23:55.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4743df3c
☆ 2017-06-13 19:23:55.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4743df3c
☆ 2017-06-13 19:23:55.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@7e2e726d
☆ 2017-06-13 19:23:55.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@23ec7c8c
☆ 2017-06-13 19:23:55.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@79cd7e70
☆ 2017-06-13 19:23:55.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@79cd7e70
☆ 2017-06-13 19:23:55.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d342645
☆ 2017-06-13 19:23:55.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@4974b8df
☆ 2017-06-13 19:23:55.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4974b8df
☆ 2017-06-13 19:23:55.033 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4c2490f1
☆ 2017-06-13 19:23:55.033 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4c2490f1
☆ 2017-06-13 19:23:55.034 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5050ae78
☆ 2017-06-13 19:23:55.036 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7ba16221
☆ 2017-06-13 19:23:55.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@47fad42c
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@641c3e12
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@641c3e12
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@69b0867d
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6cd9d9f7
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54c73ea4
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65e95464
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@807b5ca
☆ 2017-06-13 19:23:55.041 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ab3c35c
☆ 2017-06-13 19:23:55.041 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47ecfab0
☆ 2017-06-13 19:23:55.041 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6889dc5d
☆ 2017-06-13 19:23:55.048 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:23:55.050 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:23:55.051 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:23:55.051 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:23:55.053 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:23:55.053 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:23:55.199 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:23:55.269 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:23:55.269 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:23:55.284 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:23:55.305 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:23:55.360 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:23:55.361 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:23:55.361 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:23:55.361 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:23:55.362 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:23:55.362 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:23:55.363 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:23:55.363 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:23:55.364 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:23:55.364 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:23:55.365 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:23:55.365 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:23:55.365 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:23:55.366 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:23:55.387 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:23:55.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:23:55.421 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:23:55.425 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:23:55.430 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:23:55.452 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:23:55.454 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:23:55.456 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:23:55.456 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:23:55.458 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:23:55.461 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:23:55.461 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:23:55.461 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:23:55.462 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:23:55.462 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:23:55.462 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:23:55.463 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:23:55.464 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:23:55.486 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:23:55.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:23:55.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:23:55.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:23:55.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7b10ecf9
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:23:55.521 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:23:55.523 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:23:55.523 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@376f7db1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:23:55.530 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:23:55.552 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:23:55.552 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:23:55.561 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:23:55.561 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:23:55.602 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:23:55.602 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:23:55.602 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:23:55.602 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:23:55.602 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:23:55.602 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:23:55.617 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35366174]
☆ 2017-06-13 19:23:55.618 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.618 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.627 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.631 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.632 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:23:55.633 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@326e98c2]
☆ 2017-06-13 19:23:55.633 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.633 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.633 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.633 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.633 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6acb45bf]
☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@290f3f9f]
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c21834e]
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b151197]
☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69755f7c]
☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2086b7c4]
☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.639 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e9f86cf]
☆ 2017-06-13 19:23:55.639 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.639 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.639 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.640 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.640 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.640 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c353a7e]
☆ 2017-06-13 19:23:55.640 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.640 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.640 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.641 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.641 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:23:55.641 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16317fec]
☆ 2017-06-13 19:23:55.641 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.641 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.642 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.642 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.642 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:23:55.654 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:23:55.654 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:23:55.654 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:23:55.657 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:23:55.674 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:23:55.676 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:23:55.676 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:23:55.678 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:23:55.679 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:23:55.679 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:23:55.680 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@ebdccb4
☆ 2017-06-13 19:23:55.681 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 420daf5b-ecc1-4ab6-b779-484c876b9095 (<unnamed>)
☆ 2017-06-13 19:23:55.681 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:23:55.721 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:23:55.733 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_ from MeWConfig this_
☆ 2017-06-13 19:23:55.808 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:24:00.664 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:24:06.652 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:24:06.652 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:24:06.653 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:24:06.654 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:24:21.227 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:24:21.235 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:24:21.236 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:24:21.238 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:24:21.306 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:24:21.307 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:24:21.308 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:24:21.321 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:24:21.322 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:24:21.322 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:24:21.326 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:24:21.476 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:24:21.476 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:24:21.476 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:24:21.485 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:24:21.486 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:24:21.495 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:24:21.512 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:24:21.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:24:21.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:24:21.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:24:21.527 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@213318f
☆ 2017-06-13 19:24:21.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@40b5c9d
☆ 2017-06-13 19:24:21.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@3453a8be
☆ 2017-06-13 19:24:21.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:24:21.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:24:21.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:24:21.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:24:21.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:24:21.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:24:21.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:24:21.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:24:21.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:24:21.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:24:21.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:24:21.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:24:21.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:24:21.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:24:21.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:24:21.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:24:21.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:24:21.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:24:21.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:24:21.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:24:21.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:24:21.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:24:21.581 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:24:21.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:24:21.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:24:21.583 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:24:21.583 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:24:21.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39286aae
☆ 2017-06-13 19:24:21.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1f9dee
☆ 2017-06-13 19:24:21.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:24:21.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:24:21.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:24:21.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:24:21.590 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:24:21.590 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:24:21.591 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:24:21.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:24:21.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:24:21.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45ca12b9
☆ 2017-06-13 19:24:21.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:24:21.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:24:21.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:24:21.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@766af64
☆ 2017-06-13 19:24:21.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:24:21.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:24:21.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:24:21.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:24:21.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:24:21.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:24:21.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:24:21.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:24:21.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:24:21.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:24:21.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7de91b7d
☆ 2017-06-13 19:24:21.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:24:21.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:24:21.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:24:21.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:24:21.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:24:21.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:24:21.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@1fef8245
☆ 2017-06-13 19:24:21.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:24:21.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:24:21.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:24:21.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:24:21.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:24:21.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:24:21.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@3228f2ff
☆ 2017-06-13 19:24:21.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@825f8e6
☆ 2017-06-13 19:24:21.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:24:21.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:24:21.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4513543e
☆ 2017-06-13 19:24:21.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:24:21.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:24:21.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:24:21.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:24:21.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a8409f8
☆ 2017-06-13 19:24:21.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1434eb92
☆ 2017-06-13 19:24:21.619 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@137eae7
☆ 2017-06-13 19:24:21.621 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e4b69c4
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c786958
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61abadb5
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@713fbbac
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24efe906
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b42766a
☆ 2017-06-13 19:24:21.623 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@738a2b2
☆ 2017-06-13 19:24:21.623 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bd69b22
☆ 2017-06-13 19:24:21.630 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:24:21.632 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:24:21.632 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:24:21.633 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:24:21.635 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:24:21.635 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:24:21.780 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:24:21.780 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:24:21.781 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:24:21.789 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:24:21.809 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:24:21.864 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:24:21.864 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:24:21.865 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:24:21.865 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:24:21.865 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:24:21.866 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:24:21.866 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:24:21.867 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:24:21.867 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:24:21.868 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:24:21.868 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:24:21.868 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:24:21.869 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:24:21.869 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:24:21.890 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:24:21.909 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:24:21.923 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:24:21.927 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:24:21.932 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:24:21.954 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:24:21.957 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:24:21.958 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:24:21.959 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:24:21.960 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:24:21.964 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:24:21.964 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:24:21.964 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:24:21.964 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:24:21.964 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:24:21.965 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:24:21.965 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:24:21.966 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:24:21.989 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7cc64a9e
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:24:21.993 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:24:22.024 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:24:22.026 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:24:22.026 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1b1ca606, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:24:22.033 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:24:22.055 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:24:22.055 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:24:22.064 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:24:22.064 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:24:22.104 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:24:22.104 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:24:22.104 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:24:22.104 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:24:22.104 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:24:22.105 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:24:22.119 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a6c6696]
☆ 2017-06-13 19:24:22.120 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.121 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.131 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.134 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198f6cb1]
☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b5ae4f]
☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32183baf]
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df29b2c]
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7a1760]
☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50c38a8e]
☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1779d54e]
☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382b81e7]
☆ 2017-06-13 19:24:22.142 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.142 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.142 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.142 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.143 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.143 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e76d93]
☆ 2017-06-13 19:24:22.143 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.143 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.143 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.143 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b484a8]
☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:24:22.159 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:24:22.159 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:24:22.159 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:24:22.162 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:24:22.180 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:24:22.183 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:24:22.183 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:24:22.185 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:24:22.186 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:24:22.186 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:24:22.187 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6feb2c3e
☆ 2017-06-13 19:24:22.188 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 68bc17df-0ac6-426c-9af6-f5ac41f8de71 (<unnamed>)
☆ 2017-06-13 19:24:22.189 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:24:22.225 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:24:22.241 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_ from MeWConfig this_
☆ 2017-06-13 19:24:22.321 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:24:26.287 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:24:26.287 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:24:26.288 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:24:26.289 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:27:01.865 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:27:01.872 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:27:01.874 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:27:01.875 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:27:01.940 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:27:01.942 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:27:01.943 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:27:01.956 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:27:01.957 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:27:01.957 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:27:01.961 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:27:02.105 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:27:02.105 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:27:02.105 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:27:02.114 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:27:02.114 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:27:02.123 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:27:02.129 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:27:02.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:27:02.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:27:02.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:27:02.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@213318f
☆ 2017-06-13 19:27:02.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@40b5c9d
☆ 2017-06-13 19:27:02.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@3453a8be
☆ 2017-06-13 19:27:02.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:27:02.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:27:02.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:27:02.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:27:02.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:27:02.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:27:02.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:27:02.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:27:02.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:27:02.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:27:02.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:27:02.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:27:02.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:27:02.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:27:02.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:27:02.195 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:27:02.195 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:27:02.195 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:27:02.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:27:02.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:27:02.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:27:02.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:27:02.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:27:02.199 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:27:02.199 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:27:02.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:27:02.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:27:02.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39286aae
☆ 2017-06-13 19:27:02.201 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1f9dee
☆ 2017-06-13 19:27:02.202 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:27:02.202 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:27:02.203 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:27:02.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:27:02.205 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:27:02.205 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:27:02.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:27:02.207 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:27:02.207 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:27:02.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45ca12b9
☆ 2017-06-13 19:27:02.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:27:02.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:27:02.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:27:02.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@766af64
☆ 2017-06-13 19:27:02.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:27:02.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:27:02.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:27:02.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:27:02.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:27:02.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:27:02.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:27:02.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:27:02.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:27:02.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:27:02.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7de91b7d
☆ 2017-06-13 19:27:02.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:27:02.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:27:02.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:27:02.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:27:02.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:27:02.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:27:02.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@1fef8245
☆ 2017-06-13 19:27:02.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:27:02.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:27:02.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:27:02.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:27:02.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:27:02.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:27:02.222 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@3228f2ff
☆ 2017-06-13 19:27:02.222 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@825f8e6
☆ 2017-06-13 19:27:02.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:27:02.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:27:02.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4513543e
☆ 2017-06-13 19:27:02.228 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:27:02.228 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:27:02.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:27:02.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:27:02.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a8409f8
☆ 2017-06-13 19:27:02.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1434eb92
☆ 2017-06-13 19:27:02.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@137eae7
☆ 2017-06-13 19:27:02.236 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:27:02.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:27:02.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e4b69c4
☆ 2017-06-13 19:27:02.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c786958
☆ 2017-06-13 19:27:02.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61abadb5
☆ 2017-06-13 19:27:02.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@713fbbac
☆ 2017-06-13 19:27:02.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24efe906
☆ 2017-06-13 19:27:02.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b42766a
☆ 2017-06-13 19:27:02.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@738a2b2
☆ 2017-06-13 19:27:02.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bd69b22
☆ 2017-06-13 19:27:02.246 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:27:02.248 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:27:02.248 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:27:02.248 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:27:02.251 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:27:02.251 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:27:02.399 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:27:02.399 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:27:02.399 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:27:02.407 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:27:02.427 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:27:02.483 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:27:02.484 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:27:02.484 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:27:02.484 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:27:02.485 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:27:02.485 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:27:02.486 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:27:02.487 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:27:02.487 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:27:02.488 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:27:02.488 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:27:02.488 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:27:02.488 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:27:02.489 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:27:02.511 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:27:02.530 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:27:02.544 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:27:02.548 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:27:02.553 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:27:02.575 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:27:02.578 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:27:02.579 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:27:02.580 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:27:02.581 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:27:02.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:27:02.585 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:27:02.585 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:27:02.585 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:27:02.585 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:27:02.586 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:27:02.586 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:27:02.587 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:27:02.610 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:27:02.611 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7cc64a9e
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:27:02.647 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:27:02.648 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:27:02.648 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1b1ca606, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:27:02.655 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:27:02.678 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:27:02.678 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:27:02.686 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:27:02.686 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:27:02.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:27:02.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:27:02.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:27:02.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:27:02.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:27:02.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:27:02.742 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a6c6696]
☆ 2017-06-13 19:27:02.743 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.749 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.759 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.763 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.764 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198f6cb1]
☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b5ae4f]
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32183baf]
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df29b2c]
☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.768 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.768 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.768 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7a1760]
☆ 2017-06-13 19:27:02.768 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.768 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.768 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50c38a8e]
☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1779d54e]
☆ 2017-06-13 19:27:02.770 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.770 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.770 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382b81e7]
☆ 2017-06-13 19:27:02.771 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.771 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e76d93]
☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:27:02.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b484a8]
☆ 2017-06-13 19:27:02.773 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.773 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.773 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:27:02.786 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:27:02.786 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:27:02.786 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:27:02.788 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:27:02.805 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:27:02.807 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:27:02.808 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:27:02.809 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:27:02.810 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:27:02.810 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:27:02.811 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6feb2c3e
☆ 2017-06-13 19:27:02.814 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 570e1f8a-16de-4a69-9dfc-5044a816d4c9 (<unnamed>)
☆ 2017-06-13 19:27:02.814 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:27:02.848 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:27:02.861 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_ from MeWConfig this_
☆ 2017-06-13 19:27:02.927 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:27:13.878 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:27:14.710 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:27:27.469 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:27:27.470 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:27:27.470 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:27:27.471 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:29:13.168 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:29:13.176 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:29:13.177 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:29:13.179 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:29:13.242 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:29:13.243 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:29:13.244 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:29:13.258 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:29:13.259 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:29:13.259 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:29:13.263 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:29:13.409 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:29:13.409 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:29:13.409 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:29:13.418 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:29:13.419 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:29:13.428 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:29:13.433 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:29:13.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:29:13.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:29:13.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:29:13.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@213318f
☆ 2017-06-13 19:29:13.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@40b5c9d
☆ 2017-06-13 19:29:13.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@3453a8be
☆ 2017-06-13 19:29:13.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:29:13.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:29:13.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:29:13.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:29:13.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:29:13.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:29:13.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:29:13.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:29:13.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:29:13.490 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:29:13.490 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:29:13.491 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:29:13.492 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:29:13.492 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:29:13.492 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:29:13.493 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:29:13.493 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:29:13.494 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:29:13.495 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:29:13.495 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:29:13.495 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:29:13.496 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:29:13.496 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:29:13.497 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:29:13.497 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:29:13.498 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:29:13.498 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:29:13.498 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39286aae
☆ 2017-06-13 19:29:13.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1f9dee
☆ 2017-06-13 19:29:13.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:29:13.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:29:13.501 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:29:13.501 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:29:13.502 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:29:13.503 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:29:13.504 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:29:13.504 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:29:13.504 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:29:13.505 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45ca12b9
☆ 2017-06-13 19:29:13.506 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:29:13.506 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:29:13.506 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:29:13.507 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@766af64
☆ 2017-06-13 19:29:13.507 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:29:13.508 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:29:13.508 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:29:13.508 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:29:13.509 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:29:13.509 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:29:13.510 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:29:13.510 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:29:13.511 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:29:13.511 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:29:13.512 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7de91b7d
☆ 2017-06-13 19:29:13.512 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:29:13.513 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:29:13.513 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:29:13.513 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:29:13.514 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:29:13.514 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:29:13.514 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@1fef8245
☆ 2017-06-13 19:29:13.515 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:29:13.515 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:29:13.515 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:29:13.516 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:29:13.516 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:29:13.516 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:29:13.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@3228f2ff
☆ 2017-06-13 19:29:13.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@825f8e6
☆ 2017-06-13 19:29:13.520 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:29:13.520 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:29:13.521 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4513543e
☆ 2017-06-13 19:29:13.523 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:29:13.523 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:29:13.525 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:29:13.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:29:13.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a8409f8
☆ 2017-06-13 19:29:13.529 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1434eb92
☆ 2017-06-13 19:29:13.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@137eae7
☆ 2017-06-13 19:29:13.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:29:13.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:29:13.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e4b69c4
☆ 2017-06-13 19:29:13.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c786958
☆ 2017-06-13 19:29:13.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61abadb5
☆ 2017-06-13 19:29:13.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@713fbbac
☆ 2017-06-13 19:29:13.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24efe906
☆ 2017-06-13 19:29:13.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b42766a
☆ 2017-06-13 19:29:13.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@738a2b2
☆ 2017-06-13 19:29:13.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bd69b22
☆ 2017-06-13 19:29:13.541 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:29:13.543 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:29:13.544 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:29:13.544 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:29:13.546 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:29:13.547 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:29:13.691 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:29:13.691 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:29:13.692 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:29:13.700 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:29:13.720 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:29:13.775 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:29:13.776 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:29:13.776 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:29:13.776 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:29:13.777 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:29:13.777 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:29:13.778 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:29:13.778 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:29:13.779 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:29:13.779 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:29:13.780 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:29:13.780 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:29:13.780 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:29:13.781 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:29:13.803 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:29:13.821 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:13.836 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:29:13.840 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:29:13.844 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:29:13.866 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:29:13.869 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:29:13.870 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:29:13.871 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:29:13.873 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:29:13.876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:29:13.876 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:29:13.876 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:29:13.877 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:29:13.877 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:29:13.878 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:29:13.878 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:29:13.879 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:29:13.901 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:29:13.902 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:29:13.902 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7cc64a9e
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:29:13.938 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:29:13.939 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:29:13.939 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1b1ca606, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:29:13.947 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:29:13.969 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:29:13.969 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:13.978 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:29:13.978 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:14.018 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:14.018 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:29:14.018 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:29:14.018 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:29:14.019 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:29:14.019 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:29:14.033 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a6c6696]
☆ 2017-06-13 19:29:14.034 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.035 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.044 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.048 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.050 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:14.050 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198f6cb1]
☆ 2017-06-13 19:29:14.050 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.050 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.050 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.051 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.051 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:14.051 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b5ae4f]
☆ 2017-06-13 19:29:14.051 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.051 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.051 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.052 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.052 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.052 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32183baf]
☆ 2017-06-13 19:29:14.052 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.052 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.052 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.053 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.053 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.053 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df29b2c]
☆ 2017-06-13 19:29:14.053 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.053 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.053 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.054 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.054 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.054 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7a1760]
☆ 2017-06-13 19:29:14.054 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.054 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.055 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.055 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.055 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.055 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50c38a8e]
☆ 2017-06-13 19:29:14.055 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.055 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.056 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.056 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.056 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.056 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1779d54e]
☆ 2017-06-13 19:29:14.056 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.056 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.057 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.057 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.057 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.057 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382b81e7]
☆ 2017-06-13 19:29:14.058 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.058 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.058 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.058 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.059 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.059 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e76d93]
☆ 2017-06-13 19:29:14.059 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.059 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.059 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.059 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.060 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:14.060 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b484a8]
☆ 2017-06-13 19:29:14.060 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.060 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.060 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.060 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.061 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:14.073 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:14.073 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:14.073 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:29:14.075 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:29:14.092 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:29:14.095 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:29:14.096 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:29:14.097 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:29:14.098 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:29:14.098 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:29:14.099 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6feb2c3e
☆ 2017-06-13 19:29:14.100 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: f6a12100-6706-4951-8629-440b108d19ee (<unnamed>)
☆ 2017-06-13 19:29:14.101 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:29:14.134 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:29:14.147 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_ from MeWConfig this_
☆ 2017-06-13 19:29:14.213 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:29:19.020 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:29:19.022 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: begin
☆ 2017-06-13 19:29:19.025 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: call next value for hibernate_sequence
☆ 2017-06-13 19:29:19.028 [JavaFX Application Thread] DEBUG o.h.id.enhanced.SequenceStructure
		MESSAGE: Sequence value obtained: 1
☆ 2017-06-13 19:29:19.028 [JavaFX Application Thread] DEBUG o.h.r.j.i.ResourceRegistryStandardImpl
		MESSAGE: HHH000387: ResultSet's statement was not registered
☆ 2017-06-13 19:29:19.029 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractSaveEventListener
		MESSAGE: Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
☆ 2017-06-13 19:29:19.038 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: committing
☆ 2017-06-13 19:29:19.039 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Processing flush-time cascades
☆ 2017-06-13 19:29:19.039 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Dirty checking collections
☆ 2017-06-13 19:29:19.040 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
☆ 2017-06-13 19:29:19.040 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
☆ 2017-06-13 19:29:19.041 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: Listing entities:
☆ 2017-06-13 19:29:19.041 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: ru.mewhpm.dao.MeWConfig{ID=1, deviceName=dgjerdjmxfgmfgmfgmdfm}
☆ 2017-06-13 19:29:19.046 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:29:24.593 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:29:24.594 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:29:24.594 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:29:24.595 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:29:36.813 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:29:36.821 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:29:36.822 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:29:36.824 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:29:36.889 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:29:36.890 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:29:36.891 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:29:36.904 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:29:36.906 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:29:36.906 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:29:36.910 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:29:37.056 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:29:37.056 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:29:37.056 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:29:37.065 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:29:37.065 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:29:37.075 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:29:37.080 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:29:37.094 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:29:37.095 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:29:37.095 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:29:37.096 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@213318f
☆ 2017-06-13 19:29:37.096 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@40b5c9d
☆ 2017-06-13 19:29:37.097 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@3453a8be
☆ 2017-06-13 19:29:37.098 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:29:37.098 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:29:37.098 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:29:37.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:29:37.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:29:37.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:29:37.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:29:37.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:29:37.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:29:37.138 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:29:37.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:29:37.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:29:37.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:29:37.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:29:37.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:29:37.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:29:37.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:29:37.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:29:37.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:29:37.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:29:37.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:29:37.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:29:37.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:29:37.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:29:37.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:29:37.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:29:37.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:29:37.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39286aae
☆ 2017-06-13 19:29:37.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1f9dee
☆ 2017-06-13 19:29:37.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:29:37.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:29:37.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:29:37.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:29:37.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:29:37.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:29:37.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:29:37.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:29:37.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:29:37.153 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45ca12b9
☆ 2017-06-13 19:29:37.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:29:37.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:29:37.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:29:37.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@766af64
☆ 2017-06-13 19:29:37.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:29:37.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:29:37.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:29:37.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:29:37.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:29:37.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:29:37.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:29:37.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:29:37.159 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:29:37.159 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:29:37.160 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7de91b7d
☆ 2017-06-13 19:29:37.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:29:37.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:29:37.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:29:37.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:29:37.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:29:37.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:29:37.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@1fef8245
☆ 2017-06-13 19:29:37.163 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:29:37.163 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:29:37.163 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:29:37.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:29:37.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:29:37.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:29:37.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@3228f2ff
☆ 2017-06-13 19:29:37.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@825f8e6
☆ 2017-06-13 19:29:37.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:29:37.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:29:37.169 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4513543e
☆ 2017-06-13 19:29:37.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:29:37.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:29:37.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:29:37.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:29:37.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a8409f8
☆ 2017-06-13 19:29:37.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1434eb92
☆ 2017-06-13 19:29:37.178 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@137eae7
☆ 2017-06-13 19:29:37.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:29:37.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:29:37.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e4b69c4
☆ 2017-06-13 19:29:37.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c786958
☆ 2017-06-13 19:29:37.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61abadb5
☆ 2017-06-13 19:29:37.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@713fbbac
☆ 2017-06-13 19:29:37.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24efe906
☆ 2017-06-13 19:29:37.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b42766a
☆ 2017-06-13 19:29:37.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@738a2b2
☆ 2017-06-13 19:29:37.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bd69b22
☆ 2017-06-13 19:29:37.188 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:29:37.190 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:29:37.191 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:29:37.191 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:29:37.193 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:29:37.193 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:29:37.350 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:29:37.350 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:29:37.350 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:29:37.362 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:29:37.387 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:29:37.443 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:29:37.444 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:29:37.444 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:29:37.444 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:29:37.445 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:29:37.445 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:29:37.446 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:29:37.446 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:29:37.447 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:29:37.447 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:29:37.448 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:29:37.448 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:29:37.448 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:29:37.449 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:29:37.472 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:29:37.492 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:37.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:29:37.510 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:29:37.514 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:29:37.539 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:29:37.543 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:29:37.545 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:29:37.546 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:29:37.548 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:29:37.554 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:29:37.554 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:29:37.554 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:29:37.554 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:29:37.554 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:29:37.555 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:29:37.556 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:29:37.557 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:29:37.589 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:29:37.590 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7cc64a9e
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:29:37.628 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:29:37.630 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:29:37.630 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1b1ca606, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:29:37.655 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:29:37.678 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:29:37.678 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:37.687 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:29:37.687 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:37.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:37.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:29:37.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:29:37.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:29:37.728 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:29:37.728 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:29:37.742 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a6c6696]
☆ 2017-06-13 19:29:37.743 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.743 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.753 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.757 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.758 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:37.759 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198f6cb1]
☆ 2017-06-13 19:29:37.759 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.759 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.759 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.759 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.759 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b5ae4f]
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32183baf]
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df29b2c]
☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7a1760]
☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50c38a8e]
☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1779d54e]
☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382b81e7]
☆ 2017-06-13 19:29:37.765 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.765 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.765 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e76d93]
☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b484a8]
☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.767 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.767 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:37.780 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:37.780 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:37.781 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:29:37.784 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:29:37.801 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:29:37.803 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:29:37.804 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:29:37.805 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:29:37.806 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:29:37.806 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:29:37.807 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6feb2c3e
☆ 2017-06-13 19:29:37.809 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 34d3f2d8-455d-4012-8353-85aa2fcfa17a (<unnamed>)
☆ 2017-06-13 19:29:37.809 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:29:37.843 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:29:37.855 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_ from MeWConfig this_
☆ 2017-06-13 19:29:37.858 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-13 19:29:37.860 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-13 19:29:37.866 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-13 19:29:37.867 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-13 19:29:37.939 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:29:43.044 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:29:43.046 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: begin
☆ 2017-06-13 19:29:43.048 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: committing
☆ 2017-06-13 19:29:43.049 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Processing flush-time cascades
☆ 2017-06-13 19:29:43.051 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Dirty checking collections
☆ 2017-06-13 19:29:43.054 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
☆ 2017-06-13 19:29:43.054 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
☆ 2017-06-13 19:29:43.055 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: Listing entities:
☆ 2017-06-13 19:29:43.055 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: ru.mewhpm.dao.MeWConfig{ID=1, deviceName=4yhwrthsrthntgh}
☆ 2017-06-13 19:29:43.059 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:30:00.260 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:30:00.260 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: begin
☆ 2017-06-13 19:30:00.260 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: committing
☆ 2017-06-13 19:30:00.261 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Processing flush-time cascades
☆ 2017-06-13 19:30:00.261 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Dirty checking collections
☆ 2017-06-13 19:30:00.261 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
☆ 2017-06-13 19:30:00.261 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
☆ 2017-06-13 19:30:00.261 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: Listing entities:
☆ 2017-06-13 19:30:00.261 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: ru.mewhpm.dao.MeWConfig{ID=1, deviceName=My MeW for test}
☆ 2017-06-13 19:30:00.262 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:30:07.347 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 19:30:31.891 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:30:31.891 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:30:31.893 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:30:31.895 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:34:38.855 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:34:38.863 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:34:38.864 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:34:38.865 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:34:38.931 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:34:38.932 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:34:38.933 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:34:38.946 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:34:38.948 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:34:38.948 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:34:38.952 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:34:39.098 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:34:39.098 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:34:39.098 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:34:39.107 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:34:39.107 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:34:39.116 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:34:39.122 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:34:39.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ce4864c
☆ 2017-06-13 19:34:39.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ce4864c
☆ 2017-06-13 19:34:39.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ce4864c
☆ 2017-06-13 19:34:39.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e7b27d2
☆ 2017-06-13 19:34:39.138 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@6efaaf56
☆ 2017-06-13 19:34:39.138 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@5544577b
☆ 2017-06-13 19:34:39.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@32531bab
☆ 2017-06-13 19:34:39.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@32531bab
☆ 2017-06-13 19:34:39.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32531bab
☆ 2017-06-13 19:34:39.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@df83ead
☆ 2017-06-13 19:34:39.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@df83ead
☆ 2017-06-13 19:34:39.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@df83ead
☆ 2017-06-13 19:34:39.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@63771287
☆ 2017-06-13 19:34:39.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@63771287
☆ 2017-06-13 19:34:39.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@63771287
☆ 2017-06-13 19:34:39.187 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@52f467c8
☆ 2017-06-13 19:34:39.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@52f467c8
☆ 2017-06-13 19:34:39.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f467c8
☆ 2017-06-13 19:34:39.189 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@49f3c87d
☆ 2017-06-13 19:34:39.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@49f3c87d
☆ 2017-06-13 19:34:39.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@49f3c87d
☆ 2017-06-13 19:34:39.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4c72f1f9
☆ 2017-06-13 19:34:39.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4c72f1f9
☆ 2017-06-13 19:34:39.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c72f1f9
☆ 2017-06-13 19:34:39.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1986b853
☆ 2017-06-13 19:34:39.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1986b853
☆ 2017-06-13 19:34:39.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1986b853
☆ 2017-06-13 19:34:39.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5eea5769
☆ 2017-06-13 19:34:39.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5eea5769
☆ 2017-06-13 19:34:39.197 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@198ad5f1
☆ 2017-06-13 19:34:39.197 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@198ad5f1
☆ 2017-06-13 19:34:39.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@48b7dd83
☆ 2017-06-13 19:34:39.199 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@48b7dd83
☆ 2017-06-13 19:34:39.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@279b3f63
☆ 2017-06-13 19:34:39.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f836598
☆ 2017-06-13 19:34:39.201 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@6d9c18e1
☆ 2017-06-13 19:34:39.202 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d9c18e1
☆ 2017-06-13 19:34:39.203 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@61b0ee9a
☆ 2017-06-13 19:34:39.203 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61b0ee9a
☆ 2017-06-13 19:34:39.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@7942d5ac
☆ 2017-06-13 19:34:39.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7942d5ac
☆ 2017-06-13 19:34:39.205 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@2e0439d7
☆ 2017-06-13 19:34:39.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2e0439d7
☆ 2017-06-13 19:34:39.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2e0439d7
☆ 2017-06-13 19:34:39.207 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@766d870c
☆ 2017-06-13 19:34:39.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@6b954091
☆ 2017-06-13 19:34:39.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6b954091
☆ 2017-06-13 19:34:39.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6b954091
☆ 2017-06-13 19:34:39.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62635a8e
☆ 2017-06-13 19:34:39.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@626f9afe
☆ 2017-06-13 19:34:39.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@626f9afe
☆ 2017-06-13 19:34:39.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@475d0a53
☆ 2017-06-13 19:34:39.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@475d0a53
☆ 2017-06-13 19:34:39.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1de4f6cd
☆ 2017-06-13 19:34:39.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1de4f6cd
☆ 2017-06-13 19:34:39.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@4fa370e9
☆ 2017-06-13 19:34:39.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4fa370e9
☆ 2017-06-13 19:34:39.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e93ba6c
☆ 2017-06-13 19:34:39.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e93ba6c
☆ 2017-06-13 19:34:39.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29841709
☆ 2017-06-13 19:34:39.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@15e2cfa1
☆ 2017-06-13 19:34:39.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@15e2cfa1
☆ 2017-06-13 19:34:39.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@15e2cfa1
☆ 2017-06-13 19:34:39.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3768ffcf
☆ 2017-06-13 19:34:39.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3768ffcf
☆ 2017-06-13 19:34:39.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3768ffcf
☆ 2017-06-13 19:34:39.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@40631ce6
☆ 2017-06-13 19:34:39.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@5b4ac058
☆ 2017-06-13 19:34:39.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@5b4ac058
☆ 2017-06-13 19:34:39.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@5b4ac058
☆ 2017-06-13 19:34:39.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4743df3c
☆ 2017-06-13 19:34:39.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4743df3c
☆ 2017-06-13 19:34:39.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4743df3c
☆ 2017-06-13 19:34:39.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@7e2e726d
☆ 2017-06-13 19:34:39.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@23ec7c8c
☆ 2017-06-13 19:34:39.222 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@79cd7e70
☆ 2017-06-13 19:34:39.222 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@79cd7e70
☆ 2017-06-13 19:34:39.222 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d342645
☆ 2017-06-13 19:34:39.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@4974b8df
☆ 2017-06-13 19:34:39.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4974b8df
☆ 2017-06-13 19:34:39.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4c2490f1
☆ 2017-06-13 19:34:39.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4c2490f1
☆ 2017-06-13 19:34:39.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5050ae78
☆ 2017-06-13 19:34:39.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7ba16221
☆ 2017-06-13 19:34:39.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@47fad42c
☆ 2017-06-13 19:34:39.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@641c3e12
☆ 2017-06-13 19:34:39.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@641c3e12
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@69b0867d
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6cd9d9f7
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54c73ea4
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65e95464
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@807b5ca
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ab3c35c
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47ecfab0
☆ 2017-06-13 19:34:39.235 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6889dc5d
☆ 2017-06-13 19:34:39.242 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:34:39.244 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:34:39.245 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:34:39.245 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:34:39.247 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:34:39.247 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:34:39.392 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:34:39.392 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:34:39.392 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:34:39.402 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:34:39.422 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:34:39.493 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:34:39.494 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:34:39.494 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:34:39.494 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:34:39.495 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:34:39.495 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:34:39.496 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:34:39.496 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:34:39.497 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:34:39.498 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:34:39.498 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:34:39.499 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:34:39.499 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:34:39.499 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:34:39.521 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:34:39.540 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:34:39.554 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:34:39.558 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:34:39.562 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:34:39.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:34:39.588 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:34:39.589 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:34:39.590 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:34:39.592 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:34:39.595 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-13 19:34:39.597 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-13 19:34:39.597 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:34:39.598 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:34:39.598 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-13 19:34:39.599 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:34:39.621 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:34:39.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:34:39.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:34:39.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:34:39.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:34:39.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7b10ecf9
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:34:39.657 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:34:39.658 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:34:39.658 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@376f7db1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:34:39.665 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:34:39.688 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:34:39.688 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:34:39.697 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:34:39.697 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:34:39.738 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:34:39.738 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:34:39.738 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:34:39.738 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-13 19:34:39.738 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-13 19:34:39.738 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:34:39.753 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20786943]
☆ 2017-06-13 19:34:39.754 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.754 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.754 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.764 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.769 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:34:39.769 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28a2ae]
☆ 2017-06-13 19:34:39.769 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe10229]
☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c77c5c2]
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3632a9]
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@391e90e2]
☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.774 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.774 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.774 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.774 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63dc8b81]
☆ 2017-06-13 19:34:39.774 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.774 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dd2bab6]
☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2998901e]
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44ca2044]
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc40554]
☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.779 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.779 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:34:39.791 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:34:39.791 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:34:39.792 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:34:39.794 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:34:39.842 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:34:39.842 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:34:39.844 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:34:39.845 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:34:39.845 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:34:39.846 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c4fb2ee
☆ 2017-06-13 19:34:39.848 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: ddefee72-8cba-490e-af76-087f3e062525 (<unnamed>)
☆ 2017-06-13 19:34:39.848 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:34:39.883 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:34:39.896 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-13 19:34:39.898 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-13 19:34:39.900 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-13 19:34:39.905 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-13 19:34:39.907 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-13 19:34:39.971 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-13 19:34:46.900 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-13 19:34:55.897 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 filelds ready to save.
☆ 2017-06-13 19:34:55.899 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: begin
☆ 2017-06-13 19:34:55.900 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: committing
☆ 2017-06-13 19:34:55.901 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Processing flush-time cascades
☆ 2017-06-13 19:34:55.903 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Dirty checking collections
☆ 2017-06-13 19:34:55.907 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
☆ 2017-06-13 19:34:55.907 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
☆ 2017-06-13 19:34:55.908 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: Listing entities:
☆ 2017-06-13 19:34:55.908 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: ru.mewhpm.dao.MeWConfig{ID=1, deviceName=My MeW for test, lastSerialPort=/dev/ttyUSB0}
☆ 2017-06-13 19:34:55.912 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-13 19:34:57.558 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:34:57.559 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:34:57.559 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:34:57.560 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:21:48.583 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:21:48.593 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:21:48.773 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:21:48.774 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:21:48.846 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:21:48.847 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:21:48.849 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:21:48.862 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:21:48.863 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:21:48.863 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:21:48.867 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:21:49.031 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:21:49.031 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:21:49.031 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:21:49.040 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:21:49.041 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:21:49.051 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:21:49.059 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:21:49.114 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@6e81dc69
☆ 2017-06-14 17:21:49.114 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@6e81dc69
☆ 2017-06-14 17:21:49.114 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6e81dc69
☆ 2017-06-14 17:21:49.115 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@543459fa
☆ 2017-06-14 17:21:49.116 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c714655
☆ 2017-06-14 17:21:49.117 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@331e1742
☆ 2017-06-14 17:21:49.118 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7016069f
☆ 2017-06-14 17:21:49.119 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7016069f
☆ 2017-06-14 17:21:49.119 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7016069f
☆ 2017-06-14 17:21:49.120 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2c0d3423
☆ 2017-06-14 17:21:49.120 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2c0d3423
☆ 2017-06-14 17:21:49.120 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c0d3423
☆ 2017-06-14 17:21:49.121 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@2d7e5ed2
☆ 2017-06-14 17:21:49.122 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@2d7e5ed2
☆ 2017-06-14 17:21:49.122 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d7e5ed2
☆ 2017-06-14 17:21:49.123 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@47d2faa8
☆ 2017-06-14 17:21:49.123 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@47d2faa8
☆ 2017-06-14 17:21:49.123 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@47d2faa8
☆ 2017-06-14 17:21:49.124 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@7844e8a0
☆ 2017-06-14 17:21:49.124 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@7844e8a0
☆ 2017-06-14 17:21:49.124 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@7844e8a0
☆ 2017-06-14 17:21:49.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@aa2ee6a
☆ 2017-06-14 17:21:49.126 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@aa2ee6a
☆ 2017-06-14 17:21:49.126 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aa2ee6a
☆ 2017-06-14 17:21:49.127 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@4b3e54d4
☆ 2017-06-14 17:21:49.127 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@4b3e54d4
☆ 2017-06-14 17:21:49.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4b3e54d4
☆ 2017-06-14 17:21:49.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@32584149
☆ 2017-06-14 17:21:49.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@32584149
☆ 2017-06-14 17:21:49.130 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b7376fe
☆ 2017-06-14 17:21:49.130 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b7376fe
☆ 2017-06-14 17:21:49.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@352a277f
☆ 2017-06-14 17:21:49.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@352a277f
☆ 2017-06-14 17:21:49.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2d0868df
☆ 2017-06-14 17:21:49.132 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3a1dfb49
☆ 2017-06-14 17:21:49.133 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@4e29ed79
☆ 2017-06-14 17:21:49.133 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@4e29ed79
☆ 2017-06-14 17:21:49.134 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@39e29462
☆ 2017-06-14 17:21:49.135 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@39e29462
☆ 2017-06-14 17:21:49.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@df0e3c6
☆ 2017-06-14 17:21:49.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@df0e3c6
☆ 2017-06-14 17:21:49.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@a178cf3
☆ 2017-06-14 17:21:49.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a178cf3
☆ 2017-06-14 17:21:49.138 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a178cf3
☆ 2017-06-14 17:21:49.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@70f8075a
☆ 2017-06-14 17:21:49.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@5bc34cd
☆ 2017-06-14 17:21:49.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5bc34cd
☆ 2017-06-14 17:21:49.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5bc34cd
☆ 2017-06-14 17:21:49.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@36bca2c1
☆ 2017-06-14 17:21:49.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@7f1c948
☆ 2017-06-14 17:21:49.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7f1c948
☆ 2017-06-14 17:21:49.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@564da43c
☆ 2017-06-14 17:21:49.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@564da43c
☆ 2017-06-14 17:21:49.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@112e503b
☆ 2017-06-14 17:21:49.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@112e503b
☆ 2017-06-14 17:21:49.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@4ac5a6c9
☆ 2017-06-14 17:21:49.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ac5a6c9
☆ 2017-06-14 17:21:49.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2aa9e07b
☆ 2017-06-14 17:21:49.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2aa9e07b
☆ 2017-06-14 17:21:49.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d22d3fa
☆ 2017-06-14 17:21:49.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@5604d80f
☆ 2017-06-14 17:21:49.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@5604d80f
☆ 2017-06-14 17:21:49.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@5604d80f
☆ 2017-06-14 17:21:49.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d357850
☆ 2017-06-14 17:21:49.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d357850
☆ 2017-06-14 17:21:49.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d357850
☆ 2017-06-14 17:21:49.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@38739695
☆ 2017-06-14 17:21:49.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@17da321
☆ 2017-06-14 17:21:49.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@17da321
☆ 2017-06-14 17:21:49.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@17da321
☆ 2017-06-14 17:21:49.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@102e4f90
☆ 2017-06-14 17:21:49.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@102e4f90
☆ 2017-06-14 17:21:49.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@102e4f90
☆ 2017-06-14 17:21:49.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@2cef8bf7
☆ 2017-06-14 17:21:49.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@5c32d845
☆ 2017-06-14 17:21:49.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@56b56fd9
☆ 2017-06-14 17:21:49.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56b56fd9
☆ 2017-06-14 17:21:49.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2187d35f
☆ 2017-06-14 17:21:49.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6994000c
☆ 2017-06-14 17:21:49.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6994000c
☆ 2017-06-14 17:21:49.160 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@87fcff8
☆ 2017-06-14 17:21:49.160 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@87fcff8
☆ 2017-06-14 17:21:49.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@161ba4a8
☆ 2017-06-14 17:21:49.163 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@c361207
☆ 2017-06-14 17:21:49.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@178ea6f6
☆ 2017-06-14 17:21:49.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@73261161
☆ 2017-06-14 17:21:49.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@73261161
☆ 2017-06-14 17:21:49.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2909b8e5
☆ 2017-06-14 17:21:49.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ae709bc
☆ 2017-06-14 17:21:49.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46281640
☆ 2017-06-14 17:21:49.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@584c3acd
☆ 2017-06-14 17:21:49.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3ce66fb1
☆ 2017-06-14 17:21:49.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6e1e2b78
☆ 2017-06-14 17:21:49.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6882aaed
☆ 2017-06-14 17:21:49.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51216f62
☆ 2017-06-14 17:21:49.176 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:21:49.178 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:21:49.178 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:21:49.178 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:21:49.181 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:21:49.181 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:21:49.338 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:21:49.338 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:21:49.338 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:21:49.347 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:21:49.367 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:21:49.422 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:21:49.423 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:21:49.423 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:21:49.423 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:21:49.424 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:21:49.424 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:21:49.425 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:21:49.426 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:21:49.426 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:21:49.427 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:21:49.427 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:21:49.427 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:21:49.428 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:21:49.428 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:21:49.450 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:21:49.469 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:21:49.483 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:21:49.487 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:21:49.492 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:21:49.514 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:21:49.517 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:21:49.518 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:21:49.519 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:21:49.521 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:21:49.524 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:21:49.525 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:21:49.525 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:21:49.525 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:21:49.525 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:21:49.525 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:21:49.526 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:21:49.526 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:21:49.526 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:21:49.526 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:21:49.527 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:21:49.527 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:21:49.527 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:21:49.528 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:21:49.551 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:21:49.552 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:21:49.552 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:21:49.552 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:21:49.552 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:21:49.552 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:21:49.553 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:21:49.553 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:21:49.553 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:21:49.553 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:21:49.553 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:21:49.553 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:21:49.553 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:21:49.553 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:21:49.554 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:21:49.554 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:21:49.554 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:21:49.554 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:21:49.554 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:21:49.554 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:21:49.554 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:21:49.554 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:21:49.554 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@749fe89f
☆ 2017-06-14 17:21:49.555 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:21:49.555 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:21:49.555 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:21:49.555 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:21:49.555 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:21:49.555 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:21:49.555 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:21:49.555 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:21:49.556 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:21:49.556 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:21:49.556 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:21:49.556 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:21:49.556 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:21:49.588 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:21:49.589 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:21:49.590 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@72e7e877, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:21:49.597 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:21:49.619 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:21:49.620 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:21:49.628 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:21:49.628 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:21:49.669 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:21:49.669 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:21:49.669 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:21:49.670 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:21:49.670 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:21:49.670 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:21:49.685 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b29782]
☆ 2017-06-14 17:21:49.686 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:21:49.686 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:21:49.687 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:21:49.697 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:21:49.700 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:21:49.702 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:21:49.702 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cbe427e]
☆ 2017-06-14 17:21:49.702 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:21:49.702 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:21:49.702 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:21:49.702 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:21:49.702 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:21:49.703 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:21:49.703 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b78c16e]
☆ 2017-06-14 17:21:49.703 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:21:49.703 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:21:49.703 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:21:49.703 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:21:49.703 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:21:49.704 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:21:49.704 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f1dba97]
☆ 2017-06-14 17:21:49.704 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:21:49.704 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:21:49.704 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:21:49.704 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:21:49.704 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:21:49.704 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:21:49.705 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45267886]
☆ 2017-06-14 17:21:49.705 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:21:49.705 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:21:49.705 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:21:49.705 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:21:49.705 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:21:49.705 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:21:49.705 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39c9df8]
☆ 2017-06-14 17:21:49.706 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:21:49.706 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:21:49.706 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:21:49.706 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:21:49.706 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:21:49.706 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:21:49.706 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28170734]
☆ 2017-06-14 17:21:49.706 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:21:49.707 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:21:49.707 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:21:49.707 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:21:49.707 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:21:49.707 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:21:49.708 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@349df59b]
☆ 2017-06-14 17:21:49.708 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:21:49.708 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:21:49.708 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:21:49.708 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:21:49.708 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:21:49.708 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:21:49.709 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6752b0ba]
☆ 2017-06-14 17:21:49.709 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:21:49.709 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:21:49.709 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:21:49.709 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:21:49.709 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:21:49.709 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:21:49.709 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21a605c9]
☆ 2017-06-14 17:21:49.710 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:21:49.710 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:21:49.710 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:21:49.710 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:21:49.710 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:21:49.710 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:21:49.710 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45477518]
☆ 2017-06-14 17:21:49.710 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:21:49.711 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:21:49.711 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:21:49.711 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:21:49.711 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:21:49.711 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:21:49.726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:21:49.727 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:21:49.727 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:21:49.729 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:21:49.748 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:21:49.750 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:21:49.751 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:21:49.752 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:21:49.753 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:21:49.754 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:21:49.755 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7ce9e73f
☆ 2017-06-14 17:21:49.758 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: f936142d-4c13-4b15-82e9-dca7d58c4116 (<unnamed>)
☆ 2017-06-14 17:21:49.758 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:21:49.801 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:21:49.815 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:21:49.818 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:21:49.820 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:21:49.825 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:21:49.827 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:21:49.895 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:22:02.426 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:22:19.335 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-14 17:22:57.233 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:22:57.241 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:22:57.243 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:22:57.245 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:22:57.315 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:22:57.316 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:22:57.317 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:22:57.330 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:22:57.332 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:22:57.332 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:22:57.336 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:22:57.500 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:22:57.501 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:22:57.501 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:22:57.510 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:22:57.511 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:22:57.520 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:22:57.526 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:22:57.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@3402484f
☆ 2017-06-14 17:22:57.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@3402484f
☆ 2017-06-14 17:22:57.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3402484f
☆ 2017-06-14 17:22:57.576 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@eaef229
☆ 2017-06-14 17:22:57.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@57f17e5d
☆ 2017-06-14 17:22:57.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@c1b83cf
☆ 2017-06-14 17:22:57.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@17649f21
☆ 2017-06-14 17:22:57.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@17649f21
☆ 2017-06-14 17:22:57.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17649f21
☆ 2017-06-14 17:22:57.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@1408a13b
☆ 2017-06-14 17:22:57.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@1408a13b
☆ 2017-06-14 17:22:57.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1408a13b
☆ 2017-06-14 17:22:57.581 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@1d45d862
☆ 2017-06-14 17:22:57.581 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@1d45d862
☆ 2017-06-14 17:22:57.581 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d45d862
☆ 2017-06-14 17:22:57.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@56b5678d
☆ 2017-06-14 17:22:57.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@56b5678d
☆ 2017-06-14 17:22:57.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56b5678d
☆ 2017-06-14 17:22:57.583 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@68f6f10c
☆ 2017-06-14 17:22:57.583 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@68f6f10c
☆ 2017-06-14 17:22:57.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@68f6f10c
☆ 2017-06-14 17:22:57.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@24484c53
☆ 2017-06-14 17:22:57.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@24484c53
☆ 2017-06-14 17:22:57.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@24484c53
☆ 2017-06-14 17:22:57.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5c2d9adc
☆ 2017-06-14 17:22:57.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5c2d9adc
☆ 2017-06-14 17:22:57.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c2d9adc
☆ 2017-06-14 17:22:57.587 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@78b81e88
☆ 2017-06-14 17:22:57.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@78b81e88
☆ 2017-06-14 17:22:57.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6c98fc77
☆ 2017-06-14 17:22:57.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6c98fc77
☆ 2017-06-14 17:22:57.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5c67aba0
☆ 2017-06-14 17:22:57.590 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5c67aba0
☆ 2017-06-14 17:22:57.590 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4333a0d1
☆ 2017-06-14 17:22:57.591 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2583f97d
☆ 2017-06-14 17:22:57.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@18640a25
☆ 2017-06-14 17:22:57.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@18640a25
☆ 2017-06-14 17:22:57.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@5d32d837
☆ 2017-06-14 17:22:57.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d32d837
☆ 2017-06-14 17:22:57.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@7e9801ee
☆ 2017-06-14 17:22:57.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7e9801ee
☆ 2017-06-14 17:22:57.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@4569b17a
☆ 2017-06-14 17:22:57.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4569b17a
☆ 2017-06-14 17:22:57.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4569b17a
☆ 2017-06-14 17:22:57.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1bc00b61
☆ 2017-06-14 17:22:57.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@993a588
☆ 2017-06-14 17:22:57.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@993a588
☆ 2017-06-14 17:22:57.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@993a588
☆ 2017-06-14 17:22:57.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@774ea5b2
☆ 2017-06-14 17:22:57.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@416672d
☆ 2017-06-14 17:22:57.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@416672d
☆ 2017-06-14 17:22:57.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@86e6e0
☆ 2017-06-14 17:22:57.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@86e6e0
☆ 2017-06-14 17:22:57.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c73894e
☆ 2017-06-14 17:22:57.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c73894e
☆ 2017-06-14 17:22:57.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@38d483c1
☆ 2017-06-14 17:22:57.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38d483c1
☆ 2017-06-14 17:22:57.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@217badba
☆ 2017-06-14 17:22:57.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@217badba
☆ 2017-06-14 17:22:57.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ada2537
☆ 2017-06-14 17:22:57.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@d145d71
☆ 2017-06-14 17:22:57.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@d145d71
☆ 2017-06-14 17:22:57.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@d145d71
☆ 2017-06-14 17:22:57.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ad1af43
☆ 2017-06-14 17:22:57.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ad1af43
☆ 2017-06-14 17:22:57.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ad1af43
☆ 2017-06-14 17:22:57.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@723d104
☆ 2017-06-14 17:22:57.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3134f86e
☆ 2017-06-14 17:22:57.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3134f86e
☆ 2017-06-14 17:22:57.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3134f86e
☆ 2017-06-14 17:22:57.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a694bdb
☆ 2017-06-14 17:22:57.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a694bdb
☆ 2017-06-14 17:22:57.609 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a694bdb
☆ 2017-06-14 17:22:57.609 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@2f37f5fd
☆ 2017-06-14 17:22:57.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@7602e06f
☆ 2017-06-14 17:22:57.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@1ca98a18
☆ 2017-06-14 17:22:57.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1ca98a18
☆ 2017-06-14 17:22:57.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@715894b4
☆ 2017-06-14 17:22:57.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@74ca41fe
☆ 2017-06-14 17:22:57.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@74ca41fe
☆ 2017-06-14 17:22:57.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@5e24b02d
☆ 2017-06-14 17:22:57.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5e24b02d
☆ 2017-06-14 17:22:57.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56e58e9e
☆ 2017-06-14 17:22:57.621 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5bda1b1d
☆ 2017-06-14 17:22:57.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@5ffc351e
☆ 2017-06-14 17:22:57.624 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@6d80d910
☆ 2017-06-14 17:22:57.624 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d80d910
☆ 2017-06-14 17:22:57.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2b5ac815
☆ 2017-06-14 17:22:57.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40f9dc37
☆ 2017-06-14 17:22:57.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@169ffea8
☆ 2017-06-14 17:22:57.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a2420c3
☆ 2017-06-14 17:22:57.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@37c343f2
☆ 2017-06-14 17:22:57.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39d53959
☆ 2017-06-14 17:22:57.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@50d6ea75
☆ 2017-06-14 17:22:57.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b1ffa94
☆ 2017-06-14 17:22:57.633 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:22:57.635 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:22:57.635 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:22:57.636 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:22:57.638 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:22:57.638 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:22:57.789 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:22:57.790 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:22:57.790 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:22:57.799 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:22:57.819 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:22:57.875 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:22:57.875 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:22:57.876 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:22:57.876 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:22:57.876 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:22:57.877 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:22:57.877 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:22:57.878 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:22:57.879 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:22:57.879 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:22:57.879 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:22:57.880 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:22:57.880 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:22:57.880 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:22:57.902 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:22:57.921 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:22:57.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:22:57.939 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:22:57.944 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:22:57.967 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:22:57.970 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:22:57.971 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:22:57.972 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:22:57.973 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:22:57.977 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:22:57.977 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:22:57.977 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:22:57.977 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:22:57.977 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:22:57.977 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:22:57.978 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:22:57.978 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:22:57.978 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:22:57.978 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:22:57.979 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:22:57.979 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:22:57.979 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:22:57.980 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:22:58.003 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:22:58.004 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:22:58.004 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:22:58.004 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:22:58.004 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:22:58.004 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:22:58.004 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:22:58.004 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:22:58.005 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:22:58.005 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:22:58.005 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:22:58.005 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:22:58.005 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:22:58.005 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:22:58.005 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:22:58.005 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:22:58.005 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:22:58.005 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:22:58.005 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:22:58.006 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:22:58.006 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:22:58.006 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:22:58.006 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2f285927
☆ 2017-06-14 17:22:58.006 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:22:58.006 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:22:58.006 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:22:58.006 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:22:58.006 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:22:58.006 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:22:58.006 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:22:58.007 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:22:58.007 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:22:58.007 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:22:58.007 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:22:58.007 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:22:58.007 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:22:58.039 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:22:58.041 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:22:58.041 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7706f2be, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:22:58.048 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:22:58.070 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:22:58.070 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:22:58.079 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:22:58.079 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:22:58.120 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:22:58.120 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:22:58.120 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:22:58.120 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:22:58.120 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:22:58.120 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:22:58.135 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e6ff2b5]
☆ 2017-06-14 17:22:58.136 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:22:58.136 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:22:58.136 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:22:58.147 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:22:58.150 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:22:58.152 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:22:58.152 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47493c]
☆ 2017-06-14 17:22:58.152 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:22:58.152 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:22:58.152 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:22:58.152 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:22:58.153 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:22:58.153 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:22:58.153 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d319967]
☆ 2017-06-14 17:22:58.153 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:22:58.153 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:22:58.153 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:22:58.153 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:22:58.154 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:22:58.154 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:22:58.154 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53d92438]
☆ 2017-06-14 17:22:58.154 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:22:58.154 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:22:58.154 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:22:58.154 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:22:58.155 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:22:58.155 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:22:58.155 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b3a277]
☆ 2017-06-14 17:22:58.155 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:22:58.155 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:22:58.155 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:22:58.155 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:22:58.155 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:22:58.156 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:22:58.156 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56cda996]
☆ 2017-06-14 17:22:58.156 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:22:58.156 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:22:58.156 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:22:58.156 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:22:58.156 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:22:58.156 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:22:58.157 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d7bef8b]
☆ 2017-06-14 17:22:58.157 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:22:58.157 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:22:58.157 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:22:58.157 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:22:58.158 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:22:58.158 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:22:58.158 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b9fc20]
☆ 2017-06-14 17:22:58.158 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:22:58.158 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:22:58.158 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:22:58.158 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:22:58.158 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:22:58.159 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:22:58.159 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76b657d6]
☆ 2017-06-14 17:22:58.159 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:22:58.159 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:22:58.159 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:22:58.159 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:22:58.159 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:22:58.160 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:22:58.160 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@199b7649]
☆ 2017-06-14 17:22:58.160 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:22:58.160 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:22:58.160 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:22:58.160 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:22:58.160 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:22:58.160 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:22:58.161 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6614b5b5]
☆ 2017-06-14 17:22:58.161 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:22:58.161 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:22:58.161 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:22:58.161 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:22:58.161 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:22:58.161 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:22:58.174 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:22:58.174 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:22:58.174 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:22:58.177 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:22:58.195 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:22:58.197 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:22:58.198 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:22:58.199 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:22:58.200 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:22:58.200 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:22:58.202 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6a6f51bf
☆ 2017-06-14 17:22:58.203 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: d7f0b0b9-fcd1-475f-91a6-9ab8b0c5458f (<unnamed>)
☆ 2017-06-14 17:22:58.203 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:22:58.239 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:22:58.253 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:22:58.256 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:22:58.258 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:22:58.263 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:22:58.265 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:22:58.332 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:23:03.339 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:23:09.278 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 filelds ready to save.
☆ 2017-06-14 17:23:09.279 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: begin
☆ 2017-06-14 17:23:09.281 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: committing
☆ 2017-06-14 17:23:09.281 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Processing flush-time cascades
☆ 2017-06-14 17:23:09.284 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Dirty checking collections
☆ 2017-06-14 17:23:09.288 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
☆ 2017-06-14 17:23:09.288 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
☆ 2017-06-14 17:23:09.288 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: Listing entities:
☆ 2017-06-14 17:23:09.289 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: ru.mewhpm.dao.MeWConfig{ID=1, deviceName=My MeW for test, lastSerialPort=/dev/ttyACM0}
☆ 2017-06-14 17:23:09.293 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:23:22.355 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 17:23:22.355 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:23:22.356 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:23:22.357 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:23:35.287 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:23:35.295 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:23:35.297 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:23:35.298 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:23:35.368 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:23:35.370 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:23:35.371 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:23:35.384 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:23:35.385 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:23:35.385 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:23:35.389 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:23:35.535 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:23:35.536 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:23:35.536 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:23:35.545 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:23:35.545 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:23:35.555 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:23:35.560 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:23:35.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@3402484f
☆ 2017-06-14 17:23:35.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@3402484f
☆ 2017-06-14 17:23:35.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3402484f
☆ 2017-06-14 17:23:35.576 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@eaef229
☆ 2017-06-14 17:23:35.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@57f17e5d
☆ 2017-06-14 17:23:35.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@c1b83cf
☆ 2017-06-14 17:23:35.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@17649f21
☆ 2017-06-14 17:23:35.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@17649f21
☆ 2017-06-14 17:23:35.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17649f21
☆ 2017-06-14 17:23:35.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@1408a13b
☆ 2017-06-14 17:23:35.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@1408a13b
☆ 2017-06-14 17:23:35.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1408a13b
☆ 2017-06-14 17:23:35.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@1d45d862
☆ 2017-06-14 17:23:35.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@1d45d862
☆ 2017-06-14 17:23:35.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d45d862
☆ 2017-06-14 17:23:35.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@56b5678d
☆ 2017-06-14 17:23:35.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@56b5678d
☆ 2017-06-14 17:23:35.619 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56b5678d
☆ 2017-06-14 17:23:35.620 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@68f6f10c
☆ 2017-06-14 17:23:35.620 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@68f6f10c
☆ 2017-06-14 17:23:35.620 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@68f6f10c
☆ 2017-06-14 17:23:35.621 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@24484c53
☆ 2017-06-14 17:23:35.621 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@24484c53
☆ 2017-06-14 17:23:35.621 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@24484c53
☆ 2017-06-14 17:23:35.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5c2d9adc
☆ 2017-06-14 17:23:35.623 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5c2d9adc
☆ 2017-06-14 17:23:35.623 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c2d9adc
☆ 2017-06-14 17:23:35.624 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@78b81e88
☆ 2017-06-14 17:23:35.624 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@78b81e88
☆ 2017-06-14 17:23:35.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6c98fc77
☆ 2017-06-14 17:23:35.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6c98fc77
☆ 2017-06-14 17:23:35.626 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5c67aba0
☆ 2017-06-14 17:23:35.626 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5c67aba0
☆ 2017-06-14 17:23:35.627 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4333a0d1
☆ 2017-06-14 17:23:35.628 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2583f97d
☆ 2017-06-14 17:23:35.628 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@18640a25
☆ 2017-06-14 17:23:35.629 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@18640a25
☆ 2017-06-14 17:23:35.630 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@5d32d837
☆ 2017-06-14 17:23:35.630 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@5d32d837
☆ 2017-06-14 17:23:35.632 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@7e9801ee
☆ 2017-06-14 17:23:35.632 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7e9801ee
☆ 2017-06-14 17:23:35.633 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@4569b17a
☆ 2017-06-14 17:23:35.633 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4569b17a
☆ 2017-06-14 17:23:35.633 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4569b17a
☆ 2017-06-14 17:23:35.634 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1bc00b61
☆ 2017-06-14 17:23:35.635 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@993a588
☆ 2017-06-14 17:23:35.636 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@993a588
☆ 2017-06-14 17:23:35.636 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@993a588
☆ 2017-06-14 17:23:35.636 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@774ea5b2
☆ 2017-06-14 17:23:35.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@416672d
☆ 2017-06-14 17:23:35.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@416672d
☆ 2017-06-14 17:23:35.638 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@86e6e0
☆ 2017-06-14 17:23:35.638 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@86e6e0
☆ 2017-06-14 17:23:35.639 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c73894e
☆ 2017-06-14 17:23:35.639 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c73894e
☆ 2017-06-14 17:23:35.639 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@38d483c1
☆ 2017-06-14 17:23:35.640 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38d483c1
☆ 2017-06-14 17:23:35.641 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@217badba
☆ 2017-06-14 17:23:35.641 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@217badba
☆ 2017-06-14 17:23:35.641 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ada2537
☆ 2017-06-14 17:23:35.642 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@d145d71
☆ 2017-06-14 17:23:35.642 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@d145d71
☆ 2017-06-14 17:23:35.642 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@d145d71
☆ 2017-06-14 17:23:35.643 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ad1af43
☆ 2017-06-14 17:23:35.643 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ad1af43
☆ 2017-06-14 17:23:35.643 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ad1af43
☆ 2017-06-14 17:23:35.644 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@723d104
☆ 2017-06-14 17:23:35.645 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3134f86e
☆ 2017-06-14 17:23:35.645 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3134f86e
☆ 2017-06-14 17:23:35.645 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3134f86e
☆ 2017-06-14 17:23:35.646 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a694bdb
☆ 2017-06-14 17:23:35.646 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a694bdb
☆ 2017-06-14 17:23:35.646 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a694bdb
☆ 2017-06-14 17:23:35.647 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@2f37f5fd
☆ 2017-06-14 17:23:35.647 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@7602e06f
☆ 2017-06-14 17:23:35.650 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@1ca98a18
☆ 2017-06-14 17:23:35.650 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1ca98a18
☆ 2017-06-14 17:23:35.650 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@715894b4
☆ 2017-06-14 17:23:35.653 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@74ca41fe
☆ 2017-06-14 17:23:35.653 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@74ca41fe
☆ 2017-06-14 17:23:35.655 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@5e24b02d
☆ 2017-06-14 17:23:35.655 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5e24b02d
☆ 2017-06-14 17:23:35.656 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56e58e9e
☆ 2017-06-14 17:23:35.658 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5bda1b1d
☆ 2017-06-14 17:23:35.659 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@5ffc351e
☆ 2017-06-14 17:23:35.661 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@6d80d910
☆ 2017-06-14 17:23:35.662 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d80d910
☆ 2017-06-14 17:23:35.662 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2b5ac815
☆ 2017-06-14 17:23:35.662 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@40f9dc37
☆ 2017-06-14 17:23:35.662 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@169ffea8
☆ 2017-06-14 17:23:35.662 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a2420c3
☆ 2017-06-14 17:23:35.663 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@37c343f2
☆ 2017-06-14 17:23:35.663 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39d53959
☆ 2017-06-14 17:23:35.663 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@50d6ea75
☆ 2017-06-14 17:23:35.663 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b1ffa94
☆ 2017-06-14 17:23:35.670 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:23:35.673 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:23:35.673 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:23:35.673 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:23:35.676 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:23:35.677 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:23:35.843 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:23:35.843 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:23:35.843 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:23:35.852 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:23:35.871 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:23:35.927 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:23:35.927 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:23:35.928 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:23:35.928 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:23:35.928 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:23:35.929 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:23:35.929 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:23:35.930 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:23:35.930 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:23:35.931 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:23:35.931 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:23:35.932 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:23:35.932 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:23:35.932 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:23:35.954 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:23:35.973 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:23:35.987 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:23:35.991 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:23:35.996 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:23:36.018 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:23:36.021 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:23:36.023 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:23:36.024 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:23:36.025 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:23:36.028 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:23:36.029 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:23:36.029 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:23:36.029 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:23:36.029 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:23:36.029 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:23:36.029 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:23:36.030 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:23:36.030 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:23:36.030 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:23:36.031 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:23:36.031 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:23:36.031 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:23:36.032 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:23:36.054 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:23:36.055 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:23:36.055 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:23:36.055 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:23:36.055 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:23:36.055 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:23:36.055 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:23:36.056 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:23:36.056 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:23:36.056 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:23:36.056 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:23:36.056 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:23:36.056 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:23:36.056 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:23:36.056 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:23:36.056 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:23:36.056 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:23:36.056 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:23:36.057 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:23:36.057 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:23:36.057 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:23:36.057 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:23:36.057 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2f285927
☆ 2017-06-14 17:23:36.057 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:23:36.057 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:23:36.057 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:23:36.057 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:23:36.057 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:23:36.057 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:23:36.058 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:23:36.058 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:23:36.058 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:23:36.058 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:23:36.058 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:23:36.058 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:23:36.058 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:23:36.090 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:23:36.091 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:23:36.091 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7706f2be, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:23:36.098 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:23:36.120 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:23:36.121 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:23:36.129 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:23:36.129 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:23:36.170 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:23:36.170 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:23:36.170 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:23:36.171 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:23:36.171 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:23:36.171 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:23:36.186 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e6ff2b5]
☆ 2017-06-14 17:23:36.186 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:23:36.187 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:23:36.187 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:23:36.197 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:23:36.200 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:23:36.201 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:23:36.202 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47493c]
☆ 2017-06-14 17:23:36.202 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:23:36.202 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:23:36.202 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:23:36.202 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:23:36.202 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:23:36.202 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:23:36.203 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d319967]
☆ 2017-06-14 17:23:36.203 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:23:36.203 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:23:36.203 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:23:36.203 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:23:36.203 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:23:36.203 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:23:36.203 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53d92438]
☆ 2017-06-14 17:23:36.204 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:23:36.204 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:23:36.204 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:23:36.204 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:23:36.204 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:23:36.204 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:23:36.204 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b3a277]
☆ 2017-06-14 17:23:36.204 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:23:36.205 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:23:36.205 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:23:36.205 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:23:36.205 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:23:36.205 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:23:36.205 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56cda996]
☆ 2017-06-14 17:23:36.205 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:23:36.205 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:23:36.206 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:23:36.206 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:23:36.206 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:23:36.206 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:23:36.206 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d7bef8b]
☆ 2017-06-14 17:23:36.206 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:23:36.207 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:23:36.207 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:23:36.207 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:23:36.207 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:23:36.207 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:23:36.207 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b9fc20]
☆ 2017-06-14 17:23:36.207 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:23:36.208 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:23:36.208 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:23:36.208 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:23:36.208 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:23:36.208 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:23:36.208 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76b657d6]
☆ 2017-06-14 17:23:36.208 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:23:36.208 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:23:36.208 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:23:36.209 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:23:36.209 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:23:36.209 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:23:36.209 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@199b7649]
☆ 2017-06-14 17:23:36.209 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:23:36.209 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:23:36.209 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:23:36.210 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:23:36.210 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:23:36.210 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:23:36.210 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6614b5b5]
☆ 2017-06-14 17:23:36.210 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:23:36.210 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:23:36.210 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:23:36.211 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:23:36.211 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:23:36.211 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:23:36.223 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:23:36.223 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:23:36.223 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:23:36.225 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:23:36.243 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:23:36.245 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:23:36.245 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:23:36.247 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:23:36.247 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:23:36.248 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:23:36.249 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6a6f51bf
☆ 2017-06-14 17:23:36.250 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 0949a64e-8956-4ca8-8a43-9e5f5cb8c3d4 (<unnamed>)
☆ 2017-06-14 17:23:36.250 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:23:36.283 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:23:36.297 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:23:36.299 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:23:36.301 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:23:36.306 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:23:36.308 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:23:36.371 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:23:49.673 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 17:23:49.673 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:23:49.673 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:23:49.674 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:24:25.864 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:24:25.872 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:24:25.873 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:24:25.875 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:24:25.943 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:24:25.944 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:24:25.945 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:24:25.958 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:24:25.960 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:24:25.960 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:24:25.964 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:24:26.112 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:24:26.113 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:24:26.113 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:24:26.122 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:24:26.123 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:24:26.132 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:24:26.138 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:24:26.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@dd22b86
☆ 2017-06-14 17:24:26.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@dd22b86
☆ 2017-06-14 17:24:26.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@dd22b86
☆ 2017-06-14 17:24:26.153 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@47d72694
☆ 2017-06-14 17:24:26.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@1dac3ca7
☆ 2017-06-14 17:24:26.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@650bac9a
☆ 2017-06-14 17:24:26.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@43c3a4f
☆ 2017-06-14 17:24:26.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@43c3a4f
☆ 2017-06-14 17:24:26.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@43c3a4f
☆ 2017-06-14 17:24:26.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4b8b8a9d
☆ 2017-06-14 17:24:26.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4b8b8a9d
☆ 2017-06-14 17:24:26.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4b8b8a9d
☆ 2017-06-14 17:24:26.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@147277c1
☆ 2017-06-14 17:24:26.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@147277c1
☆ 2017-06-14 17:24:26.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@147277c1
☆ 2017-06-14 17:24:26.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@22638e97
☆ 2017-06-14 17:24:26.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@22638e97
☆ 2017-06-14 17:24:26.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@22638e97
☆ 2017-06-14 17:24:26.195 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@22ab7199
☆ 2017-06-14 17:24:26.195 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@22ab7199
☆ 2017-06-14 17:24:26.195 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@22ab7199
☆ 2017-06-14 17:24:26.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@1c53d434
☆ 2017-06-14 17:24:26.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@1c53d434
☆ 2017-06-14 17:24:26.197 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c53d434
☆ 2017-06-14 17:24:26.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@45a4bffc
☆ 2017-06-14 17:24:26.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@45a4bffc
☆ 2017-06-14 17:24:26.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@45a4bffc
☆ 2017-06-14 17:24:26.199 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@49b4f95a
☆ 2017-06-14 17:24:26.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@49b4f95a
☆ 2017-06-14 17:24:26.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2e4ee518
☆ 2017-06-14 17:24:26.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2e4ee518
☆ 2017-06-14 17:24:26.201 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@c497065
☆ 2017-06-14 17:24:26.202 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@c497065
☆ 2017-06-14 17:24:26.202 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@453dc75
☆ 2017-06-14 17:24:26.203 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64be6b0b
☆ 2017-06-14 17:24:26.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@2c64612d
☆ 2017-06-14 17:24:26.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@2c64612d
☆ 2017-06-14 17:24:26.205 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@4596eb88
☆ 2017-06-14 17:24:26.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@4596eb88
☆ 2017-06-14 17:24:26.207 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@3da87217
☆ 2017-06-14 17:24:26.207 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3da87217
☆ 2017-06-14 17:24:26.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@407f8a1d
☆ 2017-06-14 17:24:26.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@407f8a1d
☆ 2017-06-14 17:24:26.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@407f8a1d
☆ 2017-06-14 17:24:26.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@463e7da2
☆ 2017-06-14 17:24:26.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@1642a188
☆ 2017-06-14 17:24:26.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1642a188
☆ 2017-06-14 17:24:26.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1642a188
☆ 2017-06-14 17:24:26.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52c2f287
☆ 2017-06-14 17:24:26.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2ce88cf7
☆ 2017-06-14 17:24:26.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2ce88cf7
☆ 2017-06-14 17:24:26.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@30064e14
☆ 2017-06-14 17:24:26.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@30064e14
☆ 2017-06-14 17:24:26.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@15c56132
☆ 2017-06-14 17:24:26.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@15c56132
☆ 2017-06-14 17:24:26.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@1552e828
☆ 2017-06-14 17:24:26.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1552e828
☆ 2017-06-14 17:24:26.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5613301c
☆ 2017-06-14 17:24:26.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5613301c
☆ 2017-06-14 17:24:26.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18ed4e1d
☆ 2017-06-14 17:24:26.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@99c7b6d
☆ 2017-06-14 17:24:26.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@99c7b6d
☆ 2017-06-14 17:24:26.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@99c7b6d
☆ 2017-06-14 17:24:26.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4841a651
☆ 2017-06-14 17:24:26.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4841a651
☆ 2017-06-14 17:24:26.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4841a651
☆ 2017-06-14 17:24:26.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@27496d72
☆ 2017-06-14 17:24:26.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3e28e074
☆ 2017-06-14 17:24:26.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3e28e074
☆ 2017-06-14 17:24:26.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3e28e074
☆ 2017-06-14 17:24:26.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2c3c999e
☆ 2017-06-14 17:24:26.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2c3c999e
☆ 2017-06-14 17:24:26.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2c3c999e
☆ 2017-06-14 17:24:26.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@585d5b51
☆ 2017-06-14 17:24:26.222 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@792b4bff
☆ 2017-06-14 17:24:26.224 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@37e23a66
☆ 2017-06-14 17:24:26.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@37e23a66
☆ 2017-06-14 17:24:26.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5cb1ab11
☆ 2017-06-14 17:24:26.228 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@b3ca904
☆ 2017-06-14 17:24:26.228 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b3ca904
☆ 2017-06-14 17:24:26.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@42118a14
☆ 2017-06-14 17:24:26.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@42118a14
☆ 2017-06-14 17:24:26.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60edb99c
☆ 2017-06-14 17:24:26.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4743d9cd
☆ 2017-06-14 17:24:26.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@2099ad5e
☆ 2017-06-14 17:24:26.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@67297951
☆ 2017-06-14 17:24:26.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@67297951
☆ 2017-06-14 17:24:26.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6ae709bc
☆ 2017-06-14 17:24:26.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@46281640
☆ 2017-06-14 17:24:26.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@584c3acd
☆ 2017-06-14 17:24:26.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ce66fb1
☆ 2017-06-14 17:24:26.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e1e2b78
☆ 2017-06-14 17:24:26.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6882aaed
☆ 2017-06-14 17:24:26.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@51216f62
☆ 2017-06-14 17:24:26.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5eb51910
☆ 2017-06-14 17:24:26.246 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:24:26.248 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:24:26.248 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:24:26.248 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:24:26.250 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:24:26.251 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:24:26.399 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:24:26.399 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:24:26.399 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:24:26.408 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:24:26.428 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:24:26.484 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:24:26.484 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:24:26.485 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:24:26.485 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:24:26.485 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:24:26.486 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:24:26.486 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:24:26.487 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:24:26.488 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:24:26.488 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:24:26.489 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:24:26.489 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:24:26.489 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:24:26.490 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:24:26.512 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:24:26.530 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:24:26.544 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:24:26.549 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:24:26.553 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:24:26.576 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:24:26.579 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:24:26.580 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:24:26.581 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:24:26.583 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:24:26.586 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:24:26.586 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:24:26.587 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:24:26.587 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:24:26.587 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:24:26.587 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:24:26.587 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:24:26.587 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:24:26.587 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:24:26.588 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:24:26.588 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:24:26.588 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:24:26.589 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:24:26.590 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:24:26.614 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:24:26.615 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:24:26.615 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:24:26.615 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:24:26.615 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:24:26.615 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:24:26.615 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:24:26.615 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:24:26.615 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:24:26.615 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:24:26.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:24:26.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:24:26.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:24:26.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:24:26.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:24:26.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:24:26.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:24:26.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:24:26.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:24:26.616 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:24:26.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:24:26.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:24:26.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@52a90731
☆ 2017-06-14 17:24:26.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:24:26.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:24:26.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:24:26.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:24:26.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:24:26.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:24:26.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:24:26.618 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:24:26.618 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:24:26.618 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:24:26.618 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:24:26.618 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:24:26.618 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:24:26.650 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:24:26.652 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:24:26.652 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d910f0e, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:24:26.659 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:24:26.682 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:24:26.682 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:24:26.691 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:24:26.691 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:24:26.734 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:24:26.735 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:24:26.735 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:24:26.735 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:24:26.735 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:24:26.735 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:24:26.750 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@132c963]
☆ 2017-06-14 17:24:26.751 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:24:26.751 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:24:26.751 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:24:26.761 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:24:26.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:24:26.766 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:24:26.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4866498]
☆ 2017-06-14 17:24:26.767 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:24:26.767 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:24:26.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:24:26.767 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:24:26.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:24:26.767 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:24:26.768 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@716eab76]
☆ 2017-06-14 17:24:26.768 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:24:26.768 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:24:26.768 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:24:26.768 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:24:26.768 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:24:26.768 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:24:26.768 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1888a948]
☆ 2017-06-14 17:24:26.769 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:24:26.769 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:24:26.769 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:24:26.769 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:24:26.769 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:24:26.769 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:24:26.769 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41175e4f]
☆ 2017-06-14 17:24:26.769 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:24:26.770 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:24:26.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:24:26.770 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:24:26.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:24:26.770 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:24:26.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e83b62a]
☆ 2017-06-14 17:24:26.770 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:24:26.770 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:24:26.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:24:26.771 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:24:26.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:24:26.771 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:24:26.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5309d15f]
☆ 2017-06-14 17:24:26.771 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:24:26.772 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:24:26.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:24:26.772 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:24:26.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:24:26.772 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:24:26.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@776c37c4]
☆ 2017-06-14 17:24:26.772 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:24:26.772 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:24:26.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:24:26.773 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:24:26.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:24:26.773 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:24:26.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7acc1626]
☆ 2017-06-14 17:24:26.773 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:24:26.773 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:24:26.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:24:26.774 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:24:26.774 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:24:26.774 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:24:26.774 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3762c42e]
☆ 2017-06-14 17:24:26.774 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:24:26.774 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:24:26.774 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:24:26.774 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:24:26.775 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:24:26.775 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:24:26.775 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f2036b0]
☆ 2017-06-14 17:24:26.775 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:24:26.775 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:24:26.775 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:24:26.775 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:24:26.776 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:24:26.776 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:24:26.788 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:24:26.789 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:24:26.789 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:24:26.791 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:24:26.809 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:24:26.812 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:24:26.812 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:24:26.814 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:24:26.815 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:24:26.815 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:24:26.816 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2c7edd36
☆ 2017-06-14 17:24:26.818 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 2866727a-b99b-429e-a6d6-37746d1cb432 (<unnamed>)
☆ 2017-06-14 17:24:26.818 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:24:26.853 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:24:26.867 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:24:26.874 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:24:26.876 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:24:26.881 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:24:26.883 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:24:26.951 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:25:07.337 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:25:07.345 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:25:07.346 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:25:07.348 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:25:07.422 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:25:07.423 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:25:07.424 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:25:07.437 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:25:07.439 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:25:07.439 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:25:07.443 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:25:07.611 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:25:07.611 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:25:07.611 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:25:07.623 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:25:07.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:25:07.632 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:25:07.640 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:25:07.655 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@453903fe
☆ 2017-06-14 17:25:07.655 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@453903fe
☆ 2017-06-14 17:25:07.655 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@453903fe
☆ 2017-06-14 17:25:07.656 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ce11aa7
☆ 2017-06-14 17:25:07.657 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@1ad8f320
☆ 2017-06-14 17:25:07.657 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@5323b05e
☆ 2017-06-14 17:25:07.694 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@717bb0d1
☆ 2017-06-14 17:25:07.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@717bb0d1
☆ 2017-06-14 17:25:07.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@717bb0d1
☆ 2017-06-14 17:25:07.696 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@465e1b72
☆ 2017-06-14 17:25:07.696 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@465e1b72
☆ 2017-06-14 17:25:07.696 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@465e1b72
☆ 2017-06-14 17:25:07.697 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@6411082d
☆ 2017-06-14 17:25:07.697 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@6411082d
☆ 2017-06-14 17:25:07.697 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6411082d
☆ 2017-06-14 17:25:07.698 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@56d98c46
☆ 2017-06-14 17:25:07.698 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@56d98c46
☆ 2017-06-14 17:25:07.698 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56d98c46
☆ 2017-06-14 17:25:07.699 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6d6cc09a
☆ 2017-06-14 17:25:07.700 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6d6cc09a
☆ 2017-06-14 17:25:07.700 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@6d6cc09a
☆ 2017-06-14 17:25:07.701 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@257b4c31
☆ 2017-06-14 17:25:07.701 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@257b4c31
☆ 2017-06-14 17:25:07.701 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@257b4c31
☆ 2017-06-14 17:25:07.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@73673ea1
☆ 2017-06-14 17:25:07.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@73673ea1
☆ 2017-06-14 17:25:07.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@73673ea1
☆ 2017-06-14 17:25:07.704 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@e9e38a6
☆ 2017-06-14 17:25:07.704 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@e9e38a6
☆ 2017-06-14 17:25:07.705 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2d7fba02
☆ 2017-06-14 17:25:07.705 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2d7fba02
☆ 2017-06-14 17:25:07.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5513747
☆ 2017-06-14 17:25:07.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5513747
☆ 2017-06-14 17:25:07.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@29861470
☆ 2017-06-14 17:25:07.707 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c799667
☆ 2017-06-14 17:25:07.708 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@34d24109
☆ 2017-06-14 17:25:07.708 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@34d24109
☆ 2017-06-14 17:25:07.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@1c9851c6
☆ 2017-06-14 17:25:07.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c9851c6
☆ 2017-06-14 17:25:07.711 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@1ff8347a
☆ 2017-06-14 17:25:07.711 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ff8347a
☆ 2017-06-14 17:25:07.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@6e934503
☆ 2017-06-14 17:25:07.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e934503
☆ 2017-06-14 17:25:07.713 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e934503
☆ 2017-06-14 17:25:07.714 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@35e18146
☆ 2017-06-14 17:25:07.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@1c6fb66b
☆ 2017-06-14 17:25:07.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c6fb66b
☆ 2017-06-14 17:25:07.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c6fb66b
☆ 2017-06-14 17:25:07.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ecc2ad2
☆ 2017-06-14 17:25:07.717 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@fa86ed1
☆ 2017-06-14 17:25:07.717 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fa86ed1
☆ 2017-06-14 17:25:07.717 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@593937b6
☆ 2017-06-14 17:25:07.717 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@593937b6
☆ 2017-06-14 17:25:07.718 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@6deba3b3
☆ 2017-06-14 17:25:07.718 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6deba3b3
☆ 2017-06-14 17:25:07.719 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@65b4cdd6
☆ 2017-06-14 17:25:07.719 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@65b4cdd6
☆ 2017-06-14 17:25:07.720 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e04d6cf
☆ 2017-06-14 17:25:07.721 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e04d6cf
☆ 2017-06-14 17:25:07.721 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@474d6c3c
☆ 2017-06-14 17:25:07.722 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1e8b50ff
☆ 2017-06-14 17:25:07.722 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1e8b50ff
☆ 2017-06-14 17:25:07.722 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1e8b50ff
☆ 2017-06-14 17:25:07.723 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@82f8105
☆ 2017-06-14 17:25:07.723 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@82f8105
☆ 2017-06-14 17:25:07.723 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@82f8105
☆ 2017-06-14 17:25:07.724 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@5bc7811b
☆ 2017-06-14 17:25:07.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@159857a6
☆ 2017-06-14 17:25:07.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@159857a6
☆ 2017-06-14 17:25:07.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@159857a6
☆ 2017-06-14 17:25:07.726 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1aff2824
☆ 2017-06-14 17:25:07.726 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1aff2824
☆ 2017-06-14 17:25:07.726 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1aff2824
☆ 2017-06-14 17:25:07.727 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@5ccf6f55
☆ 2017-06-14 17:25:07.727 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@70708f58
☆ 2017-06-14 17:25:07.730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@428c9cb3
☆ 2017-06-14 17:25:07.730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@428c9cb3
☆ 2017-06-14 17:25:07.730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4a3484c0
☆ 2017-06-14 17:25:07.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@62157cf3
☆ 2017-06-14 17:25:07.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@62157cf3
☆ 2017-06-14 17:25:07.735 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4e085724
☆ 2017-06-14 17:25:07.735 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4e085724
☆ 2017-06-14 17:25:07.736 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@68825913
☆ 2017-06-14 17:25:07.738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fef699
☆ 2017-06-14 17:25:07.739 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@5f90fe03
☆ 2017-06-14 17:25:07.741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@731a3bc7
☆ 2017-06-14 17:25:07.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@731a3bc7
☆ 2017-06-14 17:25:07.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b7647c5
☆ 2017-06-14 17:25:07.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49109d6f
☆ 2017-06-14 17:25:07.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@343978c5
☆ 2017-06-14 17:25:07.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@30b187ac
☆ 2017-06-14 17:25:07.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69a0b610
☆ 2017-06-14 17:25:07.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2496b5ae
☆ 2017-06-14 17:25:07.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b161ea9
☆ 2017-06-14 17:25:07.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@67a67e80
☆ 2017-06-14 17:25:07.750 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:25:07.753 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:25:07.753 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:25:07.753 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:25:07.755 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:25:07.756 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:25:07.911 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:25:07.912 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:25:07.912 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:25:07.921 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:25:07.941 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:25:07.997 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:25:07.998 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:25:07.998 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:25:07.999 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:25:07.999 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:25:08.000 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:25:08.000 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:25:08.001 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:25:08.001 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:25:08.002 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:25:08.002 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:25:08.003 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:25:08.003 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:25:08.003 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:25:08.025 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:25:08.044 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:25:08.058 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:25:08.062 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:25:08.067 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:25:08.090 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:25:08.092 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:25:08.094 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:25:08.095 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:25:08.096 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:25:08.099 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:25:08.099 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:25:08.100 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:25:08.100 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:25:08.100 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:25:08.100 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:25:08.100 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:25:08.100 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:25:08.100 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:25:08.100 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:25:08.101 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:25:08.101 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:25:08.102 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:25:08.103 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:25:08.125 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:25:08.126 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:25:08.127 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:25:08.127 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:25:08.127 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:25:08.127 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:25:08.127 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:25:08.127 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:25:08.127 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:25:08.127 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:25:08.127 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:25:08.127 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:25:08.127 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:25:08.128 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:25:08.128 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:25:08.128 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:25:08.128 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:25:08.128 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:25:08.128 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:25:08.128 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:25:08.128 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:25:08.128 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:25:08.128 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@775629fb
☆ 2017-06-14 17:25:08.128 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:25:08.128 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:25:08.129 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:25:08.129 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:25:08.129 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:25:08.129 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:25:08.129 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:25:08.129 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:25:08.129 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:25:08.129 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:25:08.129 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:25:08.129 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:25:08.130 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:25:08.161 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:25:08.163 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:25:08.163 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5851af4a, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:25:08.170 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:25:08.192 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:25:08.193 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:25:08.202 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:25:08.202 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:25:08.242 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:25:08.242 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:25:08.242 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:25:08.243 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:25:08.243 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:25:08.243 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:25:08.258 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26c120e5]
☆ 2017-06-14 17:25:08.258 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:25:08.258 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:25:08.259 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:25:08.268 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:25:08.271 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:25:08.273 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:25:08.273 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@370ef268]
☆ 2017-06-14 17:25:08.273 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:25:08.273 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:25:08.273 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:25:08.274 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:25:08.274 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:25:08.274 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:25:08.274 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f5d4f63]
☆ 2017-06-14 17:25:08.274 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:25:08.274 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:25:08.274 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:25:08.275 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:25:08.275 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:25:08.275 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:25:08.275 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69cf8fab]
☆ 2017-06-14 17:25:08.275 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:25:08.275 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:25:08.275 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:25:08.276 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:25:08.276 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:25:08.276 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:25:08.276 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3aee4d]
☆ 2017-06-14 17:25:08.276 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:25:08.276 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:25:08.276 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:25:08.277 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:25:08.277 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:25:08.277 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:25:08.277 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@139919df]
☆ 2017-06-14 17:25:08.277 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:25:08.277 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:25:08.277 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:25:08.278 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:25:08.278 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:25:08.278 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:25:08.279 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d521c6b]
☆ 2017-06-14 17:25:08.279 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:25:08.279 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:25:08.279 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:25:08.280 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:25:08.280 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:25:08.280 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:25:08.281 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6376b558]
☆ 2017-06-14 17:25:08.281 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:25:08.281 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:25:08.281 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:25:08.282 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:25:08.282 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:25:08.282 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:25:08.283 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20c6b7a4]
☆ 2017-06-14 17:25:08.283 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:25:08.283 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:25:08.283 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:25:08.283 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:25:08.284 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:25:08.284 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:25:08.284 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efd962a]
☆ 2017-06-14 17:25:08.285 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:25:08.285 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:25:08.285 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:25:08.285 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:25:08.286 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:25:08.286 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:25:08.286 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24ff01e7]
☆ 2017-06-14 17:25:08.286 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:25:08.287 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:25:08.287 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:25:08.287 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:25:08.288 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:25:08.288 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:25:08.301 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:25:08.302 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:25:08.302 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:25:08.304 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:25:08.321 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:25:08.324 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:25:08.324 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:25:08.326 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:25:08.326 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:25:08.326 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:25:08.327 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@502cd83c
☆ 2017-06-14 17:25:08.329 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 5ccda810-e8c3-493c-9a52-a27962bd2b31 (<unnamed>)
☆ 2017-06-14 17:25:08.329 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:25:08.362 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:25:08.376 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:25:08.379 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:25:08.380 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:25:08.385 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:25:08.387 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:25:08.451 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:29:38.706 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:29:38.716 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:29:38.717 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:29:38.719 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:29:38.788 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:29:38.789 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:29:38.790 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:29:38.803 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:29:38.805 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:29:38.805 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:29:38.809 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:29:38.977 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:29:38.978 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:29:38.978 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:29:38.991 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:29:38.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:29:39.002 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:29:39.008 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:29:39.060 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@dd22b86
☆ 2017-06-14 17:29:39.061 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@dd22b86
☆ 2017-06-14 17:29:39.061 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@dd22b86
☆ 2017-06-14 17:29:39.062 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@47d72694
☆ 2017-06-14 17:29:39.063 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@1dac3ca7
☆ 2017-06-14 17:29:39.063 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@650bac9a
☆ 2017-06-14 17:29:39.064 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@43c3a4f
☆ 2017-06-14 17:29:39.064 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@43c3a4f
☆ 2017-06-14 17:29:39.065 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@43c3a4f
☆ 2017-06-14 17:29:39.065 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4b8b8a9d
☆ 2017-06-14 17:29:39.066 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4b8b8a9d
☆ 2017-06-14 17:29:39.066 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4b8b8a9d
☆ 2017-06-14 17:29:39.067 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@147277c1
☆ 2017-06-14 17:29:39.067 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@147277c1
☆ 2017-06-14 17:29:39.067 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@147277c1
☆ 2017-06-14 17:29:39.068 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@22638e97
☆ 2017-06-14 17:29:39.068 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@22638e97
☆ 2017-06-14 17:29:39.068 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@22638e97
☆ 2017-06-14 17:29:39.069 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@22ab7199
☆ 2017-06-14 17:29:39.070 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@22ab7199
☆ 2017-06-14 17:29:39.070 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@22ab7199
☆ 2017-06-14 17:29:39.071 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@1c53d434
☆ 2017-06-14 17:29:39.071 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@1c53d434
☆ 2017-06-14 17:29:39.071 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c53d434
☆ 2017-06-14 17:29:39.072 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@45a4bffc
☆ 2017-06-14 17:29:39.073 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@45a4bffc
☆ 2017-06-14 17:29:39.073 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@45a4bffc
☆ 2017-06-14 17:29:39.074 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@49b4f95a
☆ 2017-06-14 17:29:39.074 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@49b4f95a
☆ 2017-06-14 17:29:39.075 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2e4ee518
☆ 2017-06-14 17:29:39.075 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2e4ee518
☆ 2017-06-14 17:29:39.076 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@c497065
☆ 2017-06-14 17:29:39.076 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@c497065
☆ 2017-06-14 17:29:39.077 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@453dc75
☆ 2017-06-14 17:29:39.077 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64be6b0b
☆ 2017-06-14 17:29:39.078 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@2c64612d
☆ 2017-06-14 17:29:39.078 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@2c64612d
☆ 2017-06-14 17:29:39.080 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@4596eb88
☆ 2017-06-14 17:29:39.080 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@4596eb88
☆ 2017-06-14 17:29:39.081 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@3da87217
☆ 2017-06-14 17:29:39.081 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3da87217
☆ 2017-06-14 17:29:39.082 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@407f8a1d
☆ 2017-06-14 17:29:39.082 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@407f8a1d
☆ 2017-06-14 17:29:39.082 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@407f8a1d
☆ 2017-06-14 17:29:39.084 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@463e7da2
☆ 2017-06-14 17:29:39.084 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@1642a188
☆ 2017-06-14 17:29:39.085 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1642a188
☆ 2017-06-14 17:29:39.085 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1642a188
☆ 2017-06-14 17:29:39.085 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52c2f287
☆ 2017-06-14 17:29:39.086 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2ce88cf7
☆ 2017-06-14 17:29:39.086 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2ce88cf7
☆ 2017-06-14 17:29:39.087 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@30064e14
☆ 2017-06-14 17:29:39.087 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@30064e14
☆ 2017-06-14 17:29:39.088 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@15c56132
☆ 2017-06-14 17:29:39.088 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@15c56132
☆ 2017-06-14 17:29:39.088 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@1552e828
☆ 2017-06-14 17:29:39.089 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1552e828
☆ 2017-06-14 17:29:39.090 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5613301c
☆ 2017-06-14 17:29:39.090 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5613301c
☆ 2017-06-14 17:29:39.090 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18ed4e1d
☆ 2017-06-14 17:29:39.091 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@99c7b6d
☆ 2017-06-14 17:29:39.091 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@99c7b6d
☆ 2017-06-14 17:29:39.091 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@99c7b6d
☆ 2017-06-14 17:29:39.092 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4841a651
☆ 2017-06-14 17:29:39.092 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4841a651
☆ 2017-06-14 17:29:39.092 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4841a651
☆ 2017-06-14 17:29:39.093 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@27496d72
☆ 2017-06-14 17:29:39.094 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3e28e074
☆ 2017-06-14 17:29:39.094 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3e28e074
☆ 2017-06-14 17:29:39.094 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3e28e074
☆ 2017-06-14 17:29:39.095 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2c3c999e
☆ 2017-06-14 17:29:39.095 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2c3c999e
☆ 2017-06-14 17:29:39.095 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2c3c999e
☆ 2017-06-14 17:29:39.096 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@585d5b51
☆ 2017-06-14 17:29:39.096 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@792b4bff
☆ 2017-06-14 17:29:39.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@37e23a66
☆ 2017-06-14 17:29:39.100 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@37e23a66
☆ 2017-06-14 17:29:39.100 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5cb1ab11
☆ 2017-06-14 17:29:39.103 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@b3ca904
☆ 2017-06-14 17:29:39.103 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@b3ca904
☆ 2017-06-14 17:29:39.105 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@42118a14
☆ 2017-06-14 17:29:39.105 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@42118a14
☆ 2017-06-14 17:29:39.105 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60edb99c
☆ 2017-06-14 17:29:39.108 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4743d9cd
☆ 2017-06-14 17:29:39.109 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@2099ad5e
☆ 2017-06-14 17:29:39.111 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@67297951
☆ 2017-06-14 17:29:39.111 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@67297951
☆ 2017-06-14 17:29:39.112 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6ae709bc
☆ 2017-06-14 17:29:39.112 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@46281640
☆ 2017-06-14 17:29:39.112 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@584c3acd
☆ 2017-06-14 17:29:39.112 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3ce66fb1
☆ 2017-06-14 17:29:39.112 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e1e2b78
☆ 2017-06-14 17:29:39.112 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6882aaed
☆ 2017-06-14 17:29:39.113 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@51216f62
☆ 2017-06-14 17:29:39.113 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5eb51910
☆ 2017-06-14 17:29:39.122 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:29:39.125 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:29:39.125 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:29:39.125 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:29:39.129 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:29:39.129 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:29:39.289 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:29:39.290 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:29:39.290 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:29:39.299 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:29:39.319 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:29:39.375 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:29:39.375 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:29:39.376 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:29:39.376 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:29:39.376 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:29:39.377 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:29:39.377 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:29:39.378 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:29:39.379 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:29:39.379 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:29:39.379 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:29:39.380 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:29:39.380 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:29:39.381 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:29:39.402 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:29:39.421 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:29:39.435 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:29:39.439 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:29:39.444 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:29:39.467 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:29:39.469 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:29:39.471 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:29:39.472 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:29:39.473 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:29:39.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:29:39.476 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:29:39.476 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:29:39.477 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:29:39.477 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:29:39.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:29:39.477 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:29:39.477 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:29:39.477 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:29:39.477 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:29:39.478 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:29:39.478 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:29:39.478 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:29:39.479 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:29:39.502 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:29:39.503 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:29:39.503 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:29:39.503 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:29:39.503 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:29:39.503 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:29:39.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:29:39.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:29:39.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:29:39.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:29:39.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:29:39.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:29:39.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:29:39.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:29:39.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:29:39.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:29:39.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:29:39.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:29:39.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:29:39.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:29:39.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:29:39.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:29:39.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@52a90731
☆ 2017-06-14 17:29:39.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:29:39.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:29:39.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:29:39.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:29:39.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:29:39.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:29:39.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:29:39.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:29:39.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:29:39.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:29:39.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:29:39.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:29:39.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:29:39.538 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:29:39.539 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:29:39.540 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d910f0e, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:29:39.547 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:29:39.570 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:29:39.570 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:29:39.579 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:29:39.579 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:29:39.620 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:29:39.621 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:29:39.621 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:29:39.621 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:29:39.621 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:29:39.621 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:29:39.636 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@132c963]
☆ 2017-06-14 17:29:39.637 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:29:39.637 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:29:39.637 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:29:39.647 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:29:39.650 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:29:39.652 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:29:39.652 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4866498]
☆ 2017-06-14 17:29:39.652 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:29:39.652 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:29:39.652 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:29:39.653 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:29:39.653 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:29:39.653 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:29:39.653 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@716eab76]
☆ 2017-06-14 17:29:39.653 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:29:39.653 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:29:39.653 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:29:39.654 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:29:39.654 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:29:39.654 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:29:39.654 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1888a948]
☆ 2017-06-14 17:29:39.654 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:29:39.654 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:29:39.654 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:29:39.654 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:29:39.655 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:29:39.655 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:29:39.655 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41175e4f]
☆ 2017-06-14 17:29:39.655 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:29:39.655 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:29:39.655 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:29:39.655 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:29:39.656 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:29:39.656 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:29:39.656 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e83b62a]
☆ 2017-06-14 17:29:39.656 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:29:39.656 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:29:39.656 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:29:39.656 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:29:39.657 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:29:39.657 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:29:39.657 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5309d15f]
☆ 2017-06-14 17:29:39.657 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:29:39.657 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:29:39.657 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:29:39.657 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:29:39.658 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:29:39.658 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:29:39.658 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@776c37c4]
☆ 2017-06-14 17:29:39.658 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:29:39.658 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:29:39.658 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:29:39.658 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:29:39.659 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:29:39.659 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:29:39.659 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7acc1626]
☆ 2017-06-14 17:29:39.659 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:29:39.659 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:29:39.659 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:29:39.659 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:29:39.660 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:29:39.660 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:29:39.660 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3762c42e]
☆ 2017-06-14 17:29:39.660 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:29:39.660 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:29:39.660 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:29:39.660 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:29:39.660 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:29:39.661 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:29:39.661 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f2036b0]
☆ 2017-06-14 17:29:39.661 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:29:39.661 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:29:39.661 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:29:39.661 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:29:39.662 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:29:39.662 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:29:39.674 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:29:39.674 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:29:39.674 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:29:39.677 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:29:39.695 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:29:39.697 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:29:39.698 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:29:39.699 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:29:39.700 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:29:39.700 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:29:39.702 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2c7edd36
☆ 2017-06-14 17:29:39.703 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 446e6ed7-54cd-40b6-9a24-c19e9567ad8d (<unnamed>)
☆ 2017-06-14 17:29:39.703 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:29:39.739 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:29:39.753 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:29:39.756 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:29:39.758 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:29:39.764 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:29:39.765 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:29:39.832 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:30:02.877 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:30:04.924 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 17:30:04.925 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:30:04.925 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:30:04.926 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:30:45.019 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:30:45.027 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:30:45.028 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:30:45.030 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:30:45.098 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:30:45.099 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:30:45.101 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:30:45.114 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:30:45.115 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:30:45.116 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:30:45.119 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:30:45.282 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:30:45.283 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:30:45.283 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:30:45.295 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:30:45.296 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:30:45.305 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:30:45.311 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:30:45.325 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:30:45.325 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:30:45.326 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:30:45.327 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45406ad9
☆ 2017-06-14 17:30:45.328 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@d203453
☆ 2017-06-14 17:30:45.328 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@1ddddd9e
☆ 2017-06-14 17:30:45.330 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:30:45.330 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:30:45.330 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:30:45.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:30:45.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:30:45.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:30:45.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:30:45.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:30:45.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:30:45.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:30:45.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:30:45.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:30:45.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:30:45.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:30:45.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:30:45.376 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:30:45.376 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:30:45.376 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:30:45.377 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:30:45.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:30:45.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:30:45.379 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 17:30:45.379 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 17:30:45.380 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 17:30:45.380 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 17:30:45.381 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 17:30:45.381 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 17:30:45.381 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@603f7723
☆ 2017-06-14 17:30:45.382 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11d57dc3
☆ 2017-06-14 17:30:45.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 17:30:45.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 17:30:45.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 17:30:45.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 17:30:45.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 17:30:45.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 17:30:45.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:30:45.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:30:45.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:30:45.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9cc13a
☆ 2017-06-14 17:30:45.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:30:45.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:30:45.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:30:45.390 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30a8cfff
☆ 2017-06-14 17:30:45.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 17:30:45.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 17:30:45.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 17:30:45.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 17:30:45.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 17:30:45.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 17:30:45.393 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 17:30:45.393 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 17:30:45.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 17:30:45.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 17:30:45.395 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@14cd5c87
☆ 2017-06-14 17:30:45.396 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:30:45.396 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:30:45.396 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:30:45.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:30:45.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:30:45.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:30:45.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@f3cd9c4
☆ 2017-06-14 17:30:45.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:30:45.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:30:45.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:30:45.399 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:30:45.399 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:30:45.399 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:30:45.400 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@60e92abf
☆ 2017-06-14 17:30:45.400 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@2c376fa2
☆ 2017-06-14 17:30:45.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 17:30:45.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 17:30:45.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11b52292
☆ 2017-06-14 17:30:45.406 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 17:30:45.406 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 17:30:45.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 17:30:45.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 17:30:45.409 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5013cc27
☆ 2017-06-14 17:30:45.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f98d316
☆ 2017-06-14 17:30:45.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@4f1eec54
☆ 2017-06-14 17:30:45.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 17:30:45.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 17:30:45.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@23250633
☆ 2017-06-14 17:30:45.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74fd2712
☆ 2017-06-14 17:30:45.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48456cd3
☆ 2017-06-14 17:30:45.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@798472b8
☆ 2017-06-14 17:30:45.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@729be725
☆ 2017-06-14 17:30:45.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6fc38bd3
☆ 2017-06-14 17:30:45.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c03510c
☆ 2017-06-14 17:30:45.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56c8e386
☆ 2017-06-14 17:30:45.424 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:30:45.426 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:30:45.426 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:30:45.426 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:30:45.428 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:30:45.428 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:31:12.101 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:31:12.109 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:31:12.110 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:31:12.111 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:31:12.177 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:31:12.178 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:31:12.179 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:31:12.192 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:31:12.194 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:31:12.194 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:31:12.198 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:31:12.344 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:31:12.345 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:31:12.345 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:31:12.354 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:31:12.354 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:31:12.363 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:31:12.369 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:31:12.423 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@301d217e
☆ 2017-06-14 17:31:12.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@301d217e
☆ 2017-06-14 17:31:12.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@301d217e
☆ 2017-06-14 17:31:12.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@673cd1f1
☆ 2017-06-14 17:31:12.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@44f772b1
☆ 2017-06-14 17:31:12.427 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@400f71bc
☆ 2017-06-14 17:31:12.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4b198e8b
☆ 2017-06-14 17:31:12.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4b198e8b
☆ 2017-06-14 17:31:12.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4b198e8b
☆ 2017-06-14 17:31:12.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@466ec1af
☆ 2017-06-14 17:31:12.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@466ec1af
☆ 2017-06-14 17:31:12.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@466ec1af
☆ 2017-06-14 17:31:12.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@1d741b58
☆ 2017-06-14 17:31:12.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@1d741b58
☆ 2017-06-14 17:31:12.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d741b58
☆ 2017-06-14 17:31:12.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@222beb63
☆ 2017-06-14 17:31:12.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@222beb63
☆ 2017-06-14 17:31:12.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@222beb63
☆ 2017-06-14 17:31:12.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6fbd190b
☆ 2017-06-14 17:31:12.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6fbd190b
☆ 2017-06-14 17:31:12.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@6fbd190b
☆ 2017-06-14 17:31:12.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7e1fc3bb
☆ 2017-06-14 17:31:12.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7e1fc3bb
☆ 2017-06-14 17:31:12.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e1fc3bb
☆ 2017-06-14 17:31:12.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@e92dca5
☆ 2017-06-14 17:31:12.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@e92dca5
☆ 2017-06-14 17:31:12.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@e92dca5
☆ 2017-06-14 17:31:12.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@12255890
☆ 2017-06-14 17:31:12.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@12255890
☆ 2017-06-14 17:31:12.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d279477
☆ 2017-06-14 17:31:12.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d279477
☆ 2017-06-14 17:31:12.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5c448e39
☆ 2017-06-14 17:31:12.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5c448e39
☆ 2017-06-14 17:31:12.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7caedb20
☆ 2017-06-14 17:31:12.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4cc43ab9
☆ 2017-06-14 17:31:12.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@59ff5a61
☆ 2017-06-14 17:31:12.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@59ff5a61
☆ 2017-06-14 17:31:12.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@3415ed9f
☆ 2017-06-14 17:31:12.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3415ed9f
☆ 2017-06-14 17:31:12.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@3d6c73e4
☆ 2017-06-14 17:31:12.445 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3d6c73e4
☆ 2017-06-14 17:31:12.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@7749c695
☆ 2017-06-14 17:31:12.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7749c695
☆ 2017-06-14 17:31:12.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7749c695
☆ 2017-06-14 17:31:12.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@feb1354
☆ 2017-06-14 17:31:12.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@57d59c45
☆ 2017-06-14 17:31:12.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@57d59c45
☆ 2017-06-14 17:31:12.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@57d59c45
☆ 2017-06-14 17:31:12.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d0b79db
☆ 2017-06-14 17:31:12.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@1a5e5183
☆ 2017-06-14 17:31:12.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a5e5183
☆ 2017-06-14 17:31:12.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@50397789
☆ 2017-06-14 17:31:12.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50397789
☆ 2017-06-14 17:31:12.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@12fb0b2e
☆ 2017-06-14 17:31:12.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12fb0b2e
☆ 2017-06-14 17:31:12.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7842414c
☆ 2017-06-14 17:31:12.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7842414c
☆ 2017-06-14 17:31:12.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3893143a
☆ 2017-06-14 17:31:12.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3893143a
☆ 2017-06-14 17:31:12.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e2b46fd
☆ 2017-06-14 17:31:12.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@48b3b33b
☆ 2017-06-14 17:31:12.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@48b3b33b
☆ 2017-06-14 17:31:12.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@48b3b33b
☆ 2017-06-14 17:31:12.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@e0a54ef
☆ 2017-06-14 17:31:12.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@e0a54ef
☆ 2017-06-14 17:31:12.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@e0a54ef
☆ 2017-06-14 17:31:12.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@534c8b28
☆ 2017-06-14 17:31:12.457 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@625a92bb
☆ 2017-06-14 17:31:12.457 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@625a92bb
☆ 2017-06-14 17:31:12.457 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@625a92bb
☆ 2017-06-14 17:31:12.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4bb8b4c9
☆ 2017-06-14 17:31:12.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4bb8b4c9
☆ 2017-06-14 17:31:12.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4bb8b4c9
☆ 2017-06-14 17:31:12.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@633b6d8
☆ 2017-06-14 17:31:12.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@751e4077
☆ 2017-06-14 17:31:12.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3c76979
☆ 2017-06-14 17:31:12.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3c76979
☆ 2017-06-14 17:31:12.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6a7f27b1
☆ 2017-06-14 17:31:12.465 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@20c3801d
☆ 2017-06-14 17:31:12.465 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@20c3801d
☆ 2017-06-14 17:31:12.467 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@130fed72
☆ 2017-06-14 17:31:12.467 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@130fed72
☆ 2017-06-14 17:31:12.467 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b69e49c
☆ 2017-06-14 17:31:12.470 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f3eb35f
☆ 2017-06-14 17:31:12.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@22bcbf1e
☆ 2017-06-14 17:31:12.473 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@15884547
☆ 2017-06-14 17:31:12.473 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@15884547
☆ 2017-06-14 17:31:12.473 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@733afb44
☆ 2017-06-14 17:31:12.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@244f3a19
☆ 2017-06-14 17:31:12.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2b0a1607
☆ 2017-06-14 17:31:12.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@69b7e02a
☆ 2017-06-14 17:31:12.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4d73c683
☆ 2017-06-14 17:31:12.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@10b1b2c6
☆ 2017-06-14 17:31:12.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6bf034f9
☆ 2017-06-14 17:31:12.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d103f1d
☆ 2017-06-14 17:31:12.482 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:31:12.484 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:31:12.484 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:31:12.484 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:31:12.486 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:31:12.487 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:31:12.637 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:31:12.637 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:31:12.638 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:31:12.646 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:31:12.667 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:31:12.738 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:31:12.739 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:31:12.740 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:31:12.740 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:31:12.740 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:31:12.741 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:31:12.742 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:31:12.743 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:31:12.744 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:31:12.744 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:31:12.744 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:31:12.745 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:31:12.745 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:31:12.746 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:31:12.766 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:31:12.786 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:31:12.800 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:31:12.804 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:31:12.809 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:31:12.834 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:31:12.837 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:31:12.839 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:31:12.840 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:31:12.841 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:31:12.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:31:12.846 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:31:12.846 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:31:12.846 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:31:12.846 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:31:12.847 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:31:12.847 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:31:12.847 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:31:12.847 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:31:12.847 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:31:12.848 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:31:12.848 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:31:12.849 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:31:12.850 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:31:12.872 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:31:12.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:31:12.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:31:12.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:31:12.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:31:12.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:31:12.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:31:12.874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:31:12.874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:31:12.874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:31:12.874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:31:12.874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:31:12.874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:31:12.874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:31:12.874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:31:12.874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:31:12.875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:31:12.875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:31:12.875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:31:12.875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:31:12.875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:31:12.875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:31:12.875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@260a50ac
☆ 2017-06-14 17:31:12.875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:31:12.875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:31:12.875 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:31:12.876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:31:12.876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:31:12.876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:31:12.876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:31:12.876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:31:12.876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:31:12.876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:31:12.877 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:31:12.877 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:31:12.877 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:31:12.909 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:31:12.911 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:31:12.911 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@b203dac, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:31:12.918 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:31:12.940 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:31:12.940 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:31:12.949 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:31:12.949 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:31:12.990 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:31:12.990 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:31:12.990 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:31:12.990 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:31:12.991 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:31:12.991 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:31:13.005 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32afa62e]
☆ 2017-06-14 17:31:13.006 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:31:13.006 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:31:13.006 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:31:13.016 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:31:13.019 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:31:13.021 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:31:13.021 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f05f0f4]
☆ 2017-06-14 17:31:13.021 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:31:13.021 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:31:13.021 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:31:13.021 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:31:13.022 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:31:13.022 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:31:13.022 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ddf4cc2]
☆ 2017-06-14 17:31:13.022 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:31:13.022 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:31:13.022 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:31:13.023 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:31:13.023 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:31:13.023 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:31:13.023 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5339c25c]
☆ 2017-06-14 17:31:13.023 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:31:13.023 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:31:13.024 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:31:13.024 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:31:13.024 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:31:13.024 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:31:13.024 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e23e69f]
☆ 2017-06-14 17:31:13.024 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:31:13.025 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:31:13.025 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:31:13.025 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:31:13.025 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:31:13.025 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:31:13.026 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68c1d356]
☆ 2017-06-14 17:31:13.026 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:31:13.026 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:31:13.026 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:31:13.026 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:31:13.027 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:31:13.027 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:31:13.027 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18ea98d2]
☆ 2017-06-14 17:31:13.027 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:31:13.027 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:31:13.027 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:31:13.028 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:31:13.028 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:31:13.028 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:31:13.028 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35cf0ef6]
☆ 2017-06-14 17:31:13.028 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:31:13.029 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:31:13.029 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:31:13.029 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:31:13.029 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:31:13.029 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:31:13.030 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@546d68da]
☆ 2017-06-14 17:31:13.030 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:31:13.030 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:31:13.030 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:31:13.030 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:31:13.031 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:31:13.031 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:31:13.031 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b4db5a1]
☆ 2017-06-14 17:31:13.031 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:31:13.031 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:31:13.031 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:31:13.031 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:31:13.032 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:31:13.032 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:31:13.032 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16de9ad5]
☆ 2017-06-14 17:31:13.032 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:31:13.032 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:31:13.032 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:31:13.033 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:31:13.033 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:31:13.033 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:31:13.047 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:31:13.048 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:31:13.048 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:31:13.051 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:31:13.075 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:31:13.078 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:31:13.078 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:31:13.081 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:31:13.082 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:31:13.082 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:31:13.083 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69fe21ba
☆ 2017-06-14 17:31:13.085 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 4e438ae2-6ba7-4f9c-a173-443cc6a4e0fa (<unnamed>)
☆ 2017-06-14 17:31:13.085 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:31:13.118 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:31:13.130 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:31:13.133 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:31:13.135 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:31:13.140 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:31:13.142 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:31:13.205 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:31:20.099 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 17:31:20.158 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:31:20.158 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:31:20.159 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:39:20.635 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:39:20.642 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:39:20.655 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:39:20.657 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:39:20.791 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:39:20.793 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:39:20.794 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:39:20.868 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:39:20.869 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:39:20.869 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:39:20.875 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:39:21.248 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:39:21.248 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:39:21.249 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:39:21.257 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:39:21.258 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:39:21.267 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:39:21.273 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:39:21.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@301d217e
☆ 2017-06-14 17:39:21.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@301d217e
☆ 2017-06-14 17:39:21.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@301d217e
☆ 2017-06-14 17:39:21.288 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@673cd1f1
☆ 2017-06-14 17:39:21.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@44f772b1
☆ 2017-06-14 17:39:21.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@400f71bc
☆ 2017-06-14 17:39:21.327 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4b198e8b
☆ 2017-06-14 17:39:21.327 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4b198e8b
☆ 2017-06-14 17:39:21.327 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4b198e8b
☆ 2017-06-14 17:39:21.328 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@466ec1af
☆ 2017-06-14 17:39:21.328 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@466ec1af
☆ 2017-06-14 17:39:21.328 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@466ec1af
☆ 2017-06-14 17:39:21.329 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@1d741b58
☆ 2017-06-14 17:39:21.330 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@1d741b58
☆ 2017-06-14 17:39:21.330 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d741b58
☆ 2017-06-14 17:39:21.331 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@222beb63
☆ 2017-06-14 17:39:21.331 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@222beb63
☆ 2017-06-14 17:39:21.331 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@222beb63
☆ 2017-06-14 17:39:21.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6fbd190b
☆ 2017-06-14 17:39:21.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6fbd190b
☆ 2017-06-14 17:39:21.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@6fbd190b
☆ 2017-06-14 17:39:21.333 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7e1fc3bb
☆ 2017-06-14 17:39:21.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7e1fc3bb
☆ 2017-06-14 17:39:21.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e1fc3bb
☆ 2017-06-14 17:39:21.335 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@e92dca5
☆ 2017-06-14 17:39:21.335 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@e92dca5
☆ 2017-06-14 17:39:21.335 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@e92dca5
☆ 2017-06-14 17:39:21.336 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@12255890
☆ 2017-06-14 17:39:21.337 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@12255890
☆ 2017-06-14 17:39:21.337 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d279477
☆ 2017-06-14 17:39:21.337 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d279477
☆ 2017-06-14 17:39:21.338 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5c448e39
☆ 2017-06-14 17:39:21.338 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5c448e39
☆ 2017-06-14 17:39:21.339 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7caedb20
☆ 2017-06-14 17:39:21.340 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4cc43ab9
☆ 2017-06-14 17:39:21.341 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@59ff5a61
☆ 2017-06-14 17:39:21.341 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@59ff5a61
☆ 2017-06-14 17:39:21.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@3415ed9f
☆ 2017-06-14 17:39:21.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3415ed9f
☆ 2017-06-14 17:39:21.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@3d6c73e4
☆ 2017-06-14 17:39:21.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3d6c73e4
☆ 2017-06-14 17:39:21.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@7749c695
☆ 2017-06-14 17:39:21.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7749c695
☆ 2017-06-14 17:39:21.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7749c695
☆ 2017-06-14 17:39:21.377 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@feb1354
☆ 2017-06-14 17:39:21.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@57d59c45
☆ 2017-06-14 17:39:21.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@57d59c45
☆ 2017-06-14 17:39:21.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@57d59c45
☆ 2017-06-14 17:39:21.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d0b79db
☆ 2017-06-14 17:39:21.379 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@1a5e5183
☆ 2017-06-14 17:39:21.379 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a5e5183
☆ 2017-06-14 17:39:21.380 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@50397789
☆ 2017-06-14 17:39:21.380 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50397789
☆ 2017-06-14 17:39:21.381 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@12fb0b2e
☆ 2017-06-14 17:39:21.381 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12fb0b2e
☆ 2017-06-14 17:39:21.381 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7842414c
☆ 2017-06-14 17:39:21.382 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7842414c
☆ 2017-06-14 17:39:21.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3893143a
☆ 2017-06-14 17:39:21.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3893143a
☆ 2017-06-14 17:39:21.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e2b46fd
☆ 2017-06-14 17:39:21.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@48b3b33b
☆ 2017-06-14 17:39:21.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@48b3b33b
☆ 2017-06-14 17:39:21.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@48b3b33b
☆ 2017-06-14 17:39:21.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@e0a54ef
☆ 2017-06-14 17:39:21.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@e0a54ef
☆ 2017-06-14 17:39:21.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@e0a54ef
☆ 2017-06-14 17:39:21.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@534c8b28
☆ 2017-06-14 17:39:21.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@625a92bb
☆ 2017-06-14 17:39:21.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@625a92bb
☆ 2017-06-14 17:39:21.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@625a92bb
☆ 2017-06-14 17:39:21.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4bb8b4c9
☆ 2017-06-14 17:39:21.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4bb8b4c9
☆ 2017-06-14 17:39:21.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4bb8b4c9
☆ 2017-06-14 17:39:21.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@633b6d8
☆ 2017-06-14 17:39:21.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@751e4077
☆ 2017-06-14 17:39:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3c76979
☆ 2017-06-14 17:39:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3c76979
☆ 2017-06-14 17:39:21.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6a7f27b1
☆ 2017-06-14 17:39:21.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@20c3801d
☆ 2017-06-14 17:39:21.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@20c3801d
☆ 2017-06-14 17:39:21.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@130fed72
☆ 2017-06-14 17:39:21.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@130fed72
☆ 2017-06-14 17:39:21.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b69e49c
☆ 2017-06-14 17:39:21.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f3eb35f
☆ 2017-06-14 17:39:21.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@22bcbf1e
☆ 2017-06-14 17:39:21.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@15884547
☆ 2017-06-14 17:39:21.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@15884547
☆ 2017-06-14 17:39:21.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@733afb44
☆ 2017-06-14 17:39:21.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@244f3a19
☆ 2017-06-14 17:39:21.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2b0a1607
☆ 2017-06-14 17:39:21.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@69b7e02a
☆ 2017-06-14 17:39:21.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4d73c683
☆ 2017-06-14 17:39:21.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@10b1b2c6
☆ 2017-06-14 17:39:21.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6bf034f9
☆ 2017-06-14 17:39:21.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d103f1d
☆ 2017-06-14 17:39:21.443 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:39:21.453 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:39:21.454 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:39:21.454 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:39:21.457 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:39:21.458 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:39:21.621 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:39:21.622 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:39:21.622 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:39:21.631 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:39:21.657 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:39:21.728 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:39:21.728 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:39:21.729 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:39:21.729 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:39:21.729 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:39:21.730 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:39:21.730 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:39:21.731 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:39:21.732 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:39:21.732 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:39:21.733 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:39:21.733 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:39:21.733 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:39:21.734 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:39:21.756 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:39:21.782 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:39:21.797 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:39:21.801 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:39:21.805 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:39:21.833 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:39:21.837 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:39:21.839 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:39:21.840 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:39:21.841 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:39:21.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:39:21.845 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:39:21.845 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:39:21.846 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:39:21.846 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:39:21.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:39:21.846 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:39:21.846 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:39:21.846 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:39:21.846 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:39:21.847 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:39:21.848 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:39:21.848 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:39:21.849 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:39:21.894 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:39:21.895 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:39:21.896 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:39:21.896 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:39:21.896 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:39:21.896 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:39:21.896 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:39:21.896 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:39:21.896 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:39:21.896 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:39:21.896 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:39:21.896 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:39:21.896 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:39:21.897 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:39:21.897 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:39:21.897 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:39:21.897 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:39:21.897 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:39:21.897 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:39:21.897 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:39:21.897 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:39:21.897 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:39:21.897 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@260a50ac
☆ 2017-06-14 17:39:21.897 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:39:21.897 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:39:21.897 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:39:21.898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:39:21.898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:39:21.898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:39:21.898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:39:21.898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:39:21.898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:39:21.898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:39:21.898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:39:21.898 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:39:21.899 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:39:21.933 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:39:21.943 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:39:21.943 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@b203dac, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:39:21.956 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:39:21.981 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:39:21.981 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:39:21.990 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:39:21.990 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:39:22.032 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:39:22.032 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:39:22.032 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:39:22.033 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:39:22.033 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:39:22.033 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:39:22.048 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32afa62e]
☆ 2017-06-14 17:39:22.049 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:39:22.049 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:39:22.049 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:39:22.066 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:39:22.072 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:39:22.074 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:39:22.075 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f05f0f4]
☆ 2017-06-14 17:39:22.075 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:39:22.075 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:39:22.075 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:39:22.075 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:39:22.076 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:39:22.076 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:39:22.076 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ddf4cc2]
☆ 2017-06-14 17:39:22.076 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:39:22.076 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:39:22.076 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:39:22.077 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:39:22.077 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:39:22.077 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:39:22.077 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5339c25c]
☆ 2017-06-14 17:39:22.078 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:39:22.078 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:39:22.078 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:39:22.078 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:39:22.078 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:39:22.079 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:39:22.079 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e23e69f]
☆ 2017-06-14 17:39:22.079 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:39:22.079 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:39:22.079 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:39:22.079 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:39:22.080 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:39:22.080 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:39:22.080 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68c1d356]
☆ 2017-06-14 17:39:22.080 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:39:22.080 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:39:22.081 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:39:22.081 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:39:22.081 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:39:22.081 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:39:22.081 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18ea98d2]
☆ 2017-06-14 17:39:22.082 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:39:22.082 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:39:22.082 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:39:22.082 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:39:22.083 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:39:22.083 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:39:22.083 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35cf0ef6]
☆ 2017-06-14 17:39:22.083 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:39:22.083 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:39:22.083 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:39:22.084 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:39:22.084 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:39:22.084 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:39:22.084 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@546d68da]
☆ 2017-06-14 17:39:22.085 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:39:22.085 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:39:22.085 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:39:22.085 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:39:22.085 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:39:22.086 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:39:22.086 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b4db5a1]
☆ 2017-06-14 17:39:22.086 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:39:22.086 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:39:22.086 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:39:22.086 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:39:22.087 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:39:22.087 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:39:22.087 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16de9ad5]
☆ 2017-06-14 17:39:22.087 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:39:22.087 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:39:22.087 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:39:22.088 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:39:22.088 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:39:22.088 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:39:22.102 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:39:22.102 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:39:22.102 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:39:22.105 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:39:22.130 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:39:22.133 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:39:22.134 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:39:22.136 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:39:22.138 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:39:22.138 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:39:22.148 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69fe21ba
☆ 2017-06-14 17:39:22.190 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 2bb70c3e-7ba5-4ec5-bd8f-f66ad9188e43 (<unnamed>)
☆ 2017-06-14 17:39:22.190 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:39:22.226 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:39:22.238 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:39:22.241 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:39:22.243 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:39:22.249 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:39:22.250 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:39:22.384 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:39:51.616 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-14 17:40:49.249 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 17:40:49.249 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:40:49.249 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:40:49.274 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:41:06.596 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:41:06.604 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:41:06.605 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:41:06.607 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:41:06.672 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:41:06.673 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:41:06.674 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:41:06.687 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:41:06.689 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:41:06.689 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:41:06.693 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:41:06.840 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:41:06.841 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:41:06.841 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:41:06.849 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:41:06.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:41:06.859 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:41:06.865 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:41:06.878 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@301d217e
☆ 2017-06-14 17:41:06.879 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@301d217e
☆ 2017-06-14 17:41:06.879 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@301d217e
☆ 2017-06-14 17:41:06.880 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@673cd1f1
☆ 2017-06-14 17:41:06.920 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@44f772b1
☆ 2017-06-14 17:41:06.921 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@400f71bc
☆ 2017-06-14 17:41:06.922 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4b198e8b
☆ 2017-06-14 17:41:06.923 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4b198e8b
☆ 2017-06-14 17:41:06.923 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4b198e8b
☆ 2017-06-14 17:41:06.924 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@466ec1af
☆ 2017-06-14 17:41:06.924 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@466ec1af
☆ 2017-06-14 17:41:06.924 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@466ec1af
☆ 2017-06-14 17:41:06.925 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@1d741b58
☆ 2017-06-14 17:41:06.925 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@1d741b58
☆ 2017-06-14 17:41:06.925 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d741b58
☆ 2017-06-14 17:41:06.926 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@222beb63
☆ 2017-06-14 17:41:06.926 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@222beb63
☆ 2017-06-14 17:41:06.927 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@222beb63
☆ 2017-06-14 17:41:06.928 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6fbd190b
☆ 2017-06-14 17:41:06.928 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6fbd190b
☆ 2017-06-14 17:41:06.928 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@6fbd190b
☆ 2017-06-14 17:41:06.929 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7e1fc3bb
☆ 2017-06-14 17:41:06.930 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7e1fc3bb
☆ 2017-06-14 17:41:06.930 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7e1fc3bb
☆ 2017-06-14 17:41:06.931 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@e92dca5
☆ 2017-06-14 17:41:06.931 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@e92dca5
☆ 2017-06-14 17:41:06.932 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@e92dca5
☆ 2017-06-14 17:41:06.933 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@12255890
☆ 2017-06-14 17:41:06.933 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@12255890
☆ 2017-06-14 17:41:06.934 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d279477
☆ 2017-06-14 17:41:06.934 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d279477
☆ 2017-06-14 17:41:06.935 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5c448e39
☆ 2017-06-14 17:41:06.935 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5c448e39
☆ 2017-06-14 17:41:06.936 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7caedb20
☆ 2017-06-14 17:41:06.936 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4cc43ab9
☆ 2017-06-14 17:41:06.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@59ff5a61
☆ 2017-06-14 17:41:06.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@59ff5a61
☆ 2017-06-14 17:41:06.939 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@3415ed9f
☆ 2017-06-14 17:41:06.939 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3415ed9f
☆ 2017-06-14 17:41:06.940 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@3d6c73e4
☆ 2017-06-14 17:41:06.940 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3d6c73e4
☆ 2017-06-14 17:41:06.941 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@7749c695
☆ 2017-06-14 17:41:06.941 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7749c695
☆ 2017-06-14 17:41:06.941 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7749c695
☆ 2017-06-14 17:41:06.943 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@feb1354
☆ 2017-06-14 17:41:06.944 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@57d59c45
☆ 2017-06-14 17:41:06.944 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@57d59c45
☆ 2017-06-14 17:41:06.944 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@57d59c45
☆ 2017-06-14 17:41:06.944 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d0b79db
☆ 2017-06-14 17:41:06.945 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@1a5e5183
☆ 2017-06-14 17:41:06.945 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a5e5183
☆ 2017-06-14 17:41:06.946 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@50397789
☆ 2017-06-14 17:41:06.946 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50397789
☆ 2017-06-14 17:41:06.947 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@12fb0b2e
☆ 2017-06-14 17:41:06.947 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12fb0b2e
☆ 2017-06-14 17:41:06.947 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7842414c
☆ 2017-06-14 17:41:06.947 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7842414c
☆ 2017-06-14 17:41:06.948 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3893143a
☆ 2017-06-14 17:41:06.949 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3893143a
☆ 2017-06-14 17:41:06.949 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e2b46fd
☆ 2017-06-14 17:41:06.950 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@48b3b33b
☆ 2017-06-14 17:41:06.950 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@48b3b33b
☆ 2017-06-14 17:41:06.950 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@48b3b33b
☆ 2017-06-14 17:41:06.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@e0a54ef
☆ 2017-06-14 17:41:06.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@e0a54ef
☆ 2017-06-14 17:41:06.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@e0a54ef
☆ 2017-06-14 17:41:06.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@534c8b28
☆ 2017-06-14 17:41:06.952 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@625a92bb
☆ 2017-06-14 17:41:06.952 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@625a92bb
☆ 2017-06-14 17:41:06.952 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@625a92bb
☆ 2017-06-14 17:41:06.953 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4bb8b4c9
☆ 2017-06-14 17:41:06.953 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4bb8b4c9
☆ 2017-06-14 17:41:06.953 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4bb8b4c9
☆ 2017-06-14 17:41:06.954 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@633b6d8
☆ 2017-06-14 17:41:06.954 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@751e4077
☆ 2017-06-14 17:41:06.957 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3c76979
☆ 2017-06-14 17:41:06.957 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3c76979
☆ 2017-06-14 17:41:06.958 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6a7f27b1
☆ 2017-06-14 17:41:06.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@20c3801d
☆ 2017-06-14 17:41:06.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@20c3801d
☆ 2017-06-14 17:41:06.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@130fed72
☆ 2017-06-14 17:41:06.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@130fed72
☆ 2017-06-14 17:41:06.963 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b69e49c
☆ 2017-06-14 17:41:06.965 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f3eb35f
☆ 2017-06-14 17:41:06.966 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@22bcbf1e
☆ 2017-06-14 17:41:06.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@15884547
☆ 2017-06-14 17:41:06.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@15884547
☆ 2017-06-14 17:41:06.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@733afb44
☆ 2017-06-14 17:41:06.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@244f3a19
☆ 2017-06-14 17:41:06.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2b0a1607
☆ 2017-06-14 17:41:06.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@69b7e02a
☆ 2017-06-14 17:41:06.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4d73c683
☆ 2017-06-14 17:41:06.970 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@10b1b2c6
☆ 2017-06-14 17:41:06.970 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6bf034f9
☆ 2017-06-14 17:41:06.970 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d103f1d
☆ 2017-06-14 17:41:06.977 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:41:06.979 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:41:06.980 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:41:06.980 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:41:06.982 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:41:06.982 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:41:07.136 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:41:07.136 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:41:07.136 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:41:07.147 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:41:07.168 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:41:07.225 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:41:07.226 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:41:07.226 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:41:07.227 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:41:07.227 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:41:07.227 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:41:07.228 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:41:07.229 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:41:07.229 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:41:07.230 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:41:07.230 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:41:07.230 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:41:07.230 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:41:07.231 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:41:07.257 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:41:07.278 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:41:07.293 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:41:07.298 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:41:07.303 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:41:07.328 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:41:07.330 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:41:07.332 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:41:07.333 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:41:07.334 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:41:07.337 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:41:07.338 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:41:07.338 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:41:07.338 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:41:07.338 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:41:07.338 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:41:07.338 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:41:07.339 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:41:07.339 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:41:07.339 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:41:07.340 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:41:07.340 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:41:07.340 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:41:07.341 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:41:07.366 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:41:07.367 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:41:07.367 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:41:07.367 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:41:07.367 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:41:07.367 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:41:07.367 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:41:07.367 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:41:07.367 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:41:07.367 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:41:07.368 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:41:07.368 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:41:07.368 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:41:07.368 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:41:07.368 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:41:07.368 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:41:07.368 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:41:07.368 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:41:07.368 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:41:07.368 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:41:07.369 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:41:07.369 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:41:07.369 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@260a50ac
☆ 2017-06-14 17:41:07.369 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:41:07.369 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:41:07.369 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:41:07.369 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:41:07.369 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:41:07.369 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:41:07.369 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:41:07.370 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:41:07.370 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:41:07.370 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:41:07.370 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:41:07.370 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:41:07.370 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:41:07.403 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:41:07.404 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:41:07.404 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@b203dac, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:41:07.412 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:41:07.435 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:41:07.435 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:41:07.444 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:41:07.444 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:41:07.487 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:41:07.487 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:41:07.487 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:41:07.487 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:41:07.487 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:41:07.487 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:41:07.502 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32afa62e]
☆ 2017-06-14 17:41:07.503 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:41:07.503 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:41:07.503 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:41:07.513 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:41:07.517 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:41:07.519 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:41:07.519 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f05f0f4]
☆ 2017-06-14 17:41:07.519 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:41:07.519 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:41:07.519 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:41:07.519 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:41:07.519 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:41:07.520 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:41:07.520 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ddf4cc2]
☆ 2017-06-14 17:41:07.520 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:41:07.520 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:41:07.520 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:41:07.520 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:41:07.520 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:41:07.521 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:41:07.521 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5339c25c]
☆ 2017-06-14 17:41:07.521 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:41:07.521 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:41:07.521 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:41:07.521 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:41:07.521 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:41:07.522 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:41:07.522 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e23e69f]
☆ 2017-06-14 17:41:07.522 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:41:07.522 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:41:07.522 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:41:07.522 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:41:07.522 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:41:07.523 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:41:07.523 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68c1d356]
☆ 2017-06-14 17:41:07.523 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:41:07.523 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:41:07.523 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:41:07.523 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:41:07.523 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:41:07.524 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:41:07.524 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18ea98d2]
☆ 2017-06-14 17:41:07.524 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:41:07.524 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:41:07.524 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:41:07.524 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:41:07.525 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:41:07.525 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:41:07.525 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35cf0ef6]
☆ 2017-06-14 17:41:07.525 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:41:07.525 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:41:07.525 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:41:07.525 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:41:07.526 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:41:07.526 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:41:07.526 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@546d68da]
☆ 2017-06-14 17:41:07.526 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:41:07.526 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:41:07.526 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:41:07.526 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:41:07.526 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:41:07.527 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:41:07.527 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b4db5a1]
☆ 2017-06-14 17:41:07.527 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:41:07.527 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:41:07.527 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:41:07.527 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:41:07.527 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:41:07.528 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:41:07.528 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16de9ad5]
☆ 2017-06-14 17:41:07.528 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:41:07.528 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:41:07.528 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:41:07.528 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:41:07.529 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:41:07.529 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:41:07.541 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:41:07.541 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:41:07.542 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:41:07.544 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:41:07.563 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:41:07.566 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:41:07.566 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:41:07.568 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:41:07.569 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:41:07.569 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:41:07.571 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69fe21ba
☆ 2017-06-14 17:41:07.573 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 648b7725-d21e-4e90-9c46-8c98f5f5a248 (<unnamed>)
☆ 2017-06-14 17:41:07.573 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:41:07.607 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:41:07.620 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:41:07.623 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:41:07.625 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:41:07.630 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:41:07.632 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:41:07.694 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:41:37.133 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-14 17:43:49.640 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:43:49.648 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:43:49.649 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:43:49.651 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:43:49.717 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:43:49.718 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:43:49.719 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:43:49.732 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:43:49.733 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:43:49.734 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:43:49.738 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:43:49.882 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:43:49.882 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:43:49.883 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:43:49.891 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:43:49.892 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:43:49.902 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:43:49.907 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:43:49.922 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@453903fe
☆ 2017-06-14 17:43:49.922 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@453903fe
☆ 2017-06-14 17:43:49.922 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@453903fe
☆ 2017-06-14 17:43:49.923 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ce11aa7
☆ 2017-06-14 17:43:49.966 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@1ad8f320
☆ 2017-06-14 17:43:49.967 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@5323b05e
☆ 2017-06-14 17:43:49.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@717bb0d1
☆ 2017-06-14 17:43:49.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@717bb0d1
☆ 2017-06-14 17:43:49.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@717bb0d1
☆ 2017-06-14 17:43:49.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@465e1b72
☆ 2017-06-14 17:43:49.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@465e1b72
☆ 2017-06-14 17:43:49.970 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@465e1b72
☆ 2017-06-14 17:43:49.971 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@6411082d
☆ 2017-06-14 17:43:49.971 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@6411082d
☆ 2017-06-14 17:43:49.971 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6411082d
☆ 2017-06-14 17:43:49.972 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@56d98c46
☆ 2017-06-14 17:43:49.972 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@56d98c46
☆ 2017-06-14 17:43:49.973 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56d98c46
☆ 2017-06-14 17:43:49.974 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6d6cc09a
☆ 2017-06-14 17:43:49.974 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6d6cc09a
☆ 2017-06-14 17:43:49.974 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@6d6cc09a
☆ 2017-06-14 17:43:49.975 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@257b4c31
☆ 2017-06-14 17:43:49.976 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@257b4c31
☆ 2017-06-14 17:43:49.976 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@257b4c31
☆ 2017-06-14 17:43:49.977 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@73673ea1
☆ 2017-06-14 17:43:49.977 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@73673ea1
☆ 2017-06-14 17:43:49.977 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@73673ea1
☆ 2017-06-14 17:43:49.978 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@e9e38a6
☆ 2017-06-14 17:43:49.979 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@e9e38a6
☆ 2017-06-14 17:43:49.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2d7fba02
☆ 2017-06-14 17:43:49.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2d7fba02
☆ 2017-06-14 17:43:49.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5513747
☆ 2017-06-14 17:43:49.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5513747
☆ 2017-06-14 17:43:49.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@29861470
☆ 2017-06-14 17:43:49.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c799667
☆ 2017-06-14 17:43:49.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@34d24109
☆ 2017-06-14 17:43:49.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@34d24109
☆ 2017-06-14 17:43:49.984 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@1c9851c6
☆ 2017-06-14 17:43:49.984 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c9851c6
☆ 2017-06-14 17:43:49.985 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@1ff8347a
☆ 2017-06-14 17:43:49.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ff8347a
☆ 2017-06-14 17:43:49.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@6e934503
☆ 2017-06-14 17:43:49.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e934503
☆ 2017-06-14 17:43:49.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e934503
☆ 2017-06-14 17:43:49.988 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@35e18146
☆ 2017-06-14 17:43:49.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@1c6fb66b
☆ 2017-06-14 17:43:49.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c6fb66b
☆ 2017-06-14 17:43:49.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c6fb66b
☆ 2017-06-14 17:43:49.990 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ecc2ad2
☆ 2017-06-14 17:43:49.991 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@fa86ed1
☆ 2017-06-14 17:43:49.991 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fa86ed1
☆ 2017-06-14 17:43:49.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@593937b6
☆ 2017-06-14 17:43:49.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@593937b6
☆ 2017-06-14 17:43:49.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@6deba3b3
☆ 2017-06-14 17:43:49.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6deba3b3
☆ 2017-06-14 17:43:49.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@65b4cdd6
☆ 2017-06-14 17:43:49.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@65b4cdd6
☆ 2017-06-14 17:43:49.994 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e04d6cf
☆ 2017-06-14 17:43:49.995 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e04d6cf
☆ 2017-06-14 17:43:49.995 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@474d6c3c
☆ 2017-06-14 17:43:49.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1e8b50ff
☆ 2017-06-14 17:43:49.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1e8b50ff
☆ 2017-06-14 17:43:49.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1e8b50ff
☆ 2017-06-14 17:43:49.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@82f8105
☆ 2017-06-14 17:43:49.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@82f8105
☆ 2017-06-14 17:43:49.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@82f8105
☆ 2017-06-14 17:43:49.998 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@5bc7811b
☆ 2017-06-14 17:43:49.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@159857a6
☆ 2017-06-14 17:43:49.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@159857a6
☆ 2017-06-14 17:43:49.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@159857a6
☆ 2017-06-14 17:43:50.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1aff2824
☆ 2017-06-14 17:43:50.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1aff2824
☆ 2017-06-14 17:43:50.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1aff2824
☆ 2017-06-14 17:43:50.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@5ccf6f55
☆ 2017-06-14 17:43:50.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@70708f58
☆ 2017-06-14 17:43:50.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@428c9cb3
☆ 2017-06-14 17:43:50.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@428c9cb3
☆ 2017-06-14 17:43:50.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4a3484c0
☆ 2017-06-14 17:43:50.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@62157cf3
☆ 2017-06-14 17:43:50.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@62157cf3
☆ 2017-06-14 17:43:50.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4e085724
☆ 2017-06-14 17:43:50.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4e085724
☆ 2017-06-14 17:43:50.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@68825913
☆ 2017-06-14 17:43:50.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fef699
☆ 2017-06-14 17:43:50.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@5f90fe03
☆ 2017-06-14 17:43:50.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@731a3bc7
☆ 2017-06-14 17:43:50.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@731a3bc7
☆ 2017-06-14 17:43:50.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b7647c5
☆ 2017-06-14 17:43:50.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49109d6f
☆ 2017-06-14 17:43:50.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@343978c5
☆ 2017-06-14 17:43:50.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@30b187ac
☆ 2017-06-14 17:43:50.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69a0b610
☆ 2017-06-14 17:43:50.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2496b5ae
☆ 2017-06-14 17:43:50.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b161ea9
☆ 2017-06-14 17:43:50.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@67a67e80
☆ 2017-06-14 17:43:50.025 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:43:50.027 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:43:50.028 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:43:50.028 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:43:50.030 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:43:50.030 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:43:50.181 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:43:50.181 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:43:50.181 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:43:50.189 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:43:50.209 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:43:50.264 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:43:50.265 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:43:50.265 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:43:50.266 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:43:50.266 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:43:50.267 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:43:50.267 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:43:50.268 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:43:50.268 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:43:50.269 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:43:50.269 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:43:50.269 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:43:50.269 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:43:50.270 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:43:50.291 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:43:50.310 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:43:50.324 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:43:50.328 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:43:50.332 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:43:50.355 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:43:50.357 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:43:50.359 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:43:50.360 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:43:50.361 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:43:50.364 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:43:50.365 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:43:50.365 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:43:50.365 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:43:50.365 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:43:50.365 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:43:50.365 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:43:50.365 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:43:50.366 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:43:50.366 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:43:50.367 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:43:50.367 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:43:50.367 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:43:50.368 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:43:50.391 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:43:50.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:43:50.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:43:50.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:43:50.392 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:43:50.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:43:50.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:43:50.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:43:50.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:43:50.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:43:50.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:43:50.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:43:50.393 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:43:50.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:43:50.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:43:50.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:43:50.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:43:50.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:43:50.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:43:50.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:43:50.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:43:50.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:43:50.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@775629fb
☆ 2017-06-14 17:43:50.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:43:50.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:43:50.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:43:50.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:43:50.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:43:50.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:43:50.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:43:50.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:43:50.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:43:50.395 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:43:50.396 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:43:50.396 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:43:50.396 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:43:50.428 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:43:50.430 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:43:50.430 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5851af4a, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:43:50.437 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:43:50.460 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:43:50.460 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:43:50.469 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:43:50.469 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:43:50.509 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:43:50.509 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:43:50.509 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:43:50.510 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:43:50.510 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:43:50.510 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:43:50.524 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26c120e5]
☆ 2017-06-14 17:43:50.525 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:43:50.525 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:43:50.525 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:43:50.535 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:43:50.539 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:43:50.540 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:43:50.540 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@370ef268]
☆ 2017-06-14 17:43:50.540 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:43:50.541 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:43:50.541 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:43:50.541 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:43:50.541 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:43:50.541 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:43:50.541 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f5d4f63]
☆ 2017-06-14 17:43:50.541 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:43:50.541 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:43:50.542 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:43:50.542 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:43:50.542 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:43:50.542 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:43:50.542 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69cf8fab]
☆ 2017-06-14 17:43:50.542 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:43:50.542 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:43:50.542 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:43:50.543 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:43:50.543 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:43:50.543 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:43:50.543 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3aee4d]
☆ 2017-06-14 17:43:50.543 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:43:50.543 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:43:50.543 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:43:50.543 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:43:50.544 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:43:50.544 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:43:50.544 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@139919df]
☆ 2017-06-14 17:43:50.544 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:43:50.544 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:43:50.544 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:43:50.544 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:43:50.545 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:43:50.545 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:43:50.545 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d521c6b]
☆ 2017-06-14 17:43:50.545 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:43:50.545 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:43:50.545 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:43:50.545 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:43:50.546 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:43:50.546 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:43:50.546 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6376b558]
☆ 2017-06-14 17:43:50.546 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:43:50.546 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:43:50.546 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:43:50.546 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:43:50.547 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:43:50.547 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:43:50.547 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20c6b7a4]
☆ 2017-06-14 17:43:50.547 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:43:50.547 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:43:50.547 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:43:50.547 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:43:50.548 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:43:50.548 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:43:50.548 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efd962a]
☆ 2017-06-14 17:43:50.548 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:43:50.548 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:43:50.548 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:43:50.548 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:43:50.548 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:43:50.549 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:43:50.549 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24ff01e7]
☆ 2017-06-14 17:43:50.549 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:43:50.549 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:43:50.549 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:43:50.549 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:43:50.549 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:43:50.549 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:43:50.562 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:43:50.562 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:43:50.562 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:43:50.564 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:43:50.582 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:43:50.584 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:43:50.585 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:43:50.586 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:43:50.587 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:43:50.587 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:43:50.589 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@502cd83c
☆ 2017-06-14 17:43:50.590 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 33075e6f-127d-4e45-a120-1ce110a9448f (<unnamed>)
☆ 2017-06-14 17:43:50.590 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:43:50.624 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:43:50.637 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:43:50.640 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:43:50.642 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:43:50.647 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:43:50.649 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:43:50.712 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:44:06.857 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 17:44:06.858 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:44:06.858 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:44:06.859 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:45:32.969 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:45:32.977 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:45:32.978 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:45:32.980 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:45:33.046 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:45:33.047 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:45:33.049 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:45:33.061 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:45:33.063 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:45:33.063 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:45:33.067 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:45:33.211 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:45:33.211 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:45:33.211 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:45:33.221 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:45:33.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:45:33.231 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:45:33.237 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:45:33.251 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@453903fe
☆ 2017-06-14 17:45:33.251 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@453903fe
☆ 2017-06-14 17:45:33.251 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@453903fe
☆ 2017-06-14 17:45:33.252 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ce11aa7
☆ 2017-06-14 17:45:33.253 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@1ad8f320
☆ 2017-06-14 17:45:33.253 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@5323b05e
☆ 2017-06-14 17:45:33.292 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@717bb0d1
☆ 2017-06-14 17:45:33.292 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@717bb0d1
☆ 2017-06-14 17:45:33.292 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@717bb0d1
☆ 2017-06-14 17:45:33.293 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@465e1b72
☆ 2017-06-14 17:45:33.293 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@465e1b72
☆ 2017-06-14 17:45:33.293 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@465e1b72
☆ 2017-06-14 17:45:33.294 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@6411082d
☆ 2017-06-14 17:45:33.295 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@6411082d
☆ 2017-06-14 17:45:33.295 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6411082d
☆ 2017-06-14 17:45:33.296 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@56d98c46
☆ 2017-06-14 17:45:33.296 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@56d98c46
☆ 2017-06-14 17:45:33.296 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56d98c46
☆ 2017-06-14 17:45:33.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6d6cc09a
☆ 2017-06-14 17:45:33.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6d6cc09a
☆ 2017-06-14 17:45:33.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@6d6cc09a
☆ 2017-06-14 17:45:33.298 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@257b4c31
☆ 2017-06-14 17:45:33.298 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@257b4c31
☆ 2017-06-14 17:45:33.299 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@257b4c31
☆ 2017-06-14 17:45:33.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@73673ea1
☆ 2017-06-14 17:45:33.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@73673ea1
☆ 2017-06-14 17:45:33.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@73673ea1
☆ 2017-06-14 17:45:33.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@e9e38a6
☆ 2017-06-14 17:45:33.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@e9e38a6
☆ 2017-06-14 17:45:33.302 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2d7fba02
☆ 2017-06-14 17:45:33.302 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2d7fba02
☆ 2017-06-14 17:45:33.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5513747
☆ 2017-06-14 17:45:33.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5513747
☆ 2017-06-14 17:45:33.304 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@29861470
☆ 2017-06-14 17:45:33.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c799667
☆ 2017-06-14 17:45:33.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@34d24109
☆ 2017-06-14 17:45:33.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@34d24109
☆ 2017-06-14 17:45:33.307 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@1c9851c6
☆ 2017-06-14 17:45:33.307 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c9851c6
☆ 2017-06-14 17:45:33.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@1ff8347a
☆ 2017-06-14 17:45:33.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ff8347a
☆ 2017-06-14 17:45:33.309 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@6e934503
☆ 2017-06-14 17:45:33.309 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e934503
☆ 2017-06-14 17:45:33.310 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e934503
☆ 2017-06-14 17:45:33.311 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@35e18146
☆ 2017-06-14 17:45:33.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@1c6fb66b
☆ 2017-06-14 17:45:33.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c6fb66b
☆ 2017-06-14 17:45:33.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c6fb66b
☆ 2017-06-14 17:45:33.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ecc2ad2
☆ 2017-06-14 17:45:33.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@fa86ed1
☆ 2017-06-14 17:45:33.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fa86ed1
☆ 2017-06-14 17:45:33.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@593937b6
☆ 2017-06-14 17:45:33.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@593937b6
☆ 2017-06-14 17:45:33.315 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@6deba3b3
☆ 2017-06-14 17:45:33.315 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6deba3b3
☆ 2017-06-14 17:45:33.316 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@65b4cdd6
☆ 2017-06-14 17:45:33.316 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@65b4cdd6
☆ 2017-06-14 17:45:33.317 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e04d6cf
☆ 2017-06-14 17:45:33.317 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e04d6cf
☆ 2017-06-14 17:45:33.318 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@474d6c3c
☆ 2017-06-14 17:45:33.318 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1e8b50ff
☆ 2017-06-14 17:45:33.319 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1e8b50ff
☆ 2017-06-14 17:45:33.319 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1e8b50ff
☆ 2017-06-14 17:45:33.320 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@82f8105
☆ 2017-06-14 17:45:33.320 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@82f8105
☆ 2017-06-14 17:45:33.320 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@82f8105
☆ 2017-06-14 17:45:33.320 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@5bc7811b
☆ 2017-06-14 17:45:33.321 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@159857a6
☆ 2017-06-14 17:45:33.321 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@159857a6
☆ 2017-06-14 17:45:33.321 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@159857a6
☆ 2017-06-14 17:45:33.322 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1aff2824
☆ 2017-06-14 17:45:33.322 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1aff2824
☆ 2017-06-14 17:45:33.322 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1aff2824
☆ 2017-06-14 17:45:33.323 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@5ccf6f55
☆ 2017-06-14 17:45:33.323 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@70708f58
☆ 2017-06-14 17:45:33.326 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@428c9cb3
☆ 2017-06-14 17:45:33.326 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@428c9cb3
☆ 2017-06-14 17:45:33.327 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4a3484c0
☆ 2017-06-14 17:45:33.329 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@62157cf3
☆ 2017-06-14 17:45:33.330 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@62157cf3
☆ 2017-06-14 17:45:33.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4e085724
☆ 2017-06-14 17:45:33.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4e085724
☆ 2017-06-14 17:45:33.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@68825913
☆ 2017-06-14 17:45:33.335 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fef699
☆ 2017-06-14 17:45:33.336 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@5f90fe03
☆ 2017-06-14 17:45:33.338 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@731a3bc7
☆ 2017-06-14 17:45:33.338 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@731a3bc7
☆ 2017-06-14 17:45:33.339 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b7647c5
☆ 2017-06-14 17:45:33.339 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49109d6f
☆ 2017-06-14 17:45:33.339 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@343978c5
☆ 2017-06-14 17:45:33.339 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@30b187ac
☆ 2017-06-14 17:45:33.339 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69a0b610
☆ 2017-06-14 17:45:33.339 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2496b5ae
☆ 2017-06-14 17:45:33.339 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b161ea9
☆ 2017-06-14 17:45:33.340 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@67a67e80
☆ 2017-06-14 17:45:33.347 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:45:33.349 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:45:33.349 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:45:33.350 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:45:33.352 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:45:33.352 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:45:33.508 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:45:33.509 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:45:33.509 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:45:33.517 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:45:33.537 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:45:33.593 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:45:33.593 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:45:33.594 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:45:33.594 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:45:33.594 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:45:33.595 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:45:33.595 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:45:33.596 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:45:33.597 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:45:33.597 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:45:33.597 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:45:33.598 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:45:33.598 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:45:33.599 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:45:33.620 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:45:33.639 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:45:33.653 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:45:33.657 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:45:33.662 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:45:33.684 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:45:33.687 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:45:33.689 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:45:33.689 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:45:33.691 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:45:33.694 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:45:33.695 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:45:33.695 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:45:33.695 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:45:33.695 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:45:33.695 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:45:33.695 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:45:33.695 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:45:33.696 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:45:33.696 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:45:33.696 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:45:33.697 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:45:33.697 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:45:33.698 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:45:33.731 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:45:33.733 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:45:33.733 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:45:33.733 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:45:33.733 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:45:33.733 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:45:33.733 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:45:33.733 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:45:33.733 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:45:33.734 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:45:33.734 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:45:33.734 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:45:33.734 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:45:33.734 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:45:33.734 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:45:33.734 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:45:33.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:45:33.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:45:33.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:45:33.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:45:33.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:45:33.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:45:33.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@775629fb
☆ 2017-06-14 17:45:33.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:45:33.736 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:45:33.736 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:45:33.736 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:45:33.736 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:45:33.736 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:45:33.736 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:45:33.736 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:45:33.736 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:45:33.737 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:45:33.737 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:45:33.737 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:45:33.737 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:45:33.769 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:45:33.770 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:45:33.770 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5851af4a, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:45:33.778 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:45:33.800 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:45:33.801 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:45:33.809 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:45:33.809 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:45:33.849 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:45:33.850 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:45:33.850 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:45:33.850 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:45:33.850 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:45:33.850 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:45:33.864 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26c120e5]
☆ 2017-06-14 17:45:33.865 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:45:33.865 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:45:33.866 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:45:33.875 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:45:33.878 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:45:33.880 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:45:33.880 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@370ef268]
☆ 2017-06-14 17:45:33.880 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:45:33.880 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:45:33.880 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:45:33.880 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:45:33.881 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:45:33.881 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:45:33.881 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f5d4f63]
☆ 2017-06-14 17:45:33.881 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:45:33.881 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:45:33.882 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:45:33.882 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:45:33.882 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:45:33.882 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:45:33.882 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69cf8fab]
☆ 2017-06-14 17:45:33.882 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:45:33.883 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:45:33.883 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:45:33.883 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:45:33.883 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:45:33.883 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:45:33.884 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3aee4d]
☆ 2017-06-14 17:45:33.884 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:45:33.884 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:45:33.884 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:45:33.884 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:45:33.885 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:45:33.885 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:45:33.885 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@139919df]
☆ 2017-06-14 17:45:33.885 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:45:33.885 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:45:33.885 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:45:33.885 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:45:33.886 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:45:33.886 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:45:33.886 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d521c6b]
☆ 2017-06-14 17:45:33.886 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:45:33.887 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:45:33.887 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:45:33.887 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:45:33.887 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:45:33.888 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:45:33.888 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6376b558]
☆ 2017-06-14 17:45:33.888 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:45:33.888 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:45:33.888 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:45:33.888 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:45:33.889 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:45:33.889 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:45:33.889 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20c6b7a4]
☆ 2017-06-14 17:45:33.889 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:45:33.889 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:45:33.889 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:45:33.889 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:45:33.890 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:45:33.890 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:45:33.890 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efd962a]
☆ 2017-06-14 17:45:33.890 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:45:33.890 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:45:33.890 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:45:33.891 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:45:33.891 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:45:33.891 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:45:33.891 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24ff01e7]
☆ 2017-06-14 17:45:33.891 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:45:33.892 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:45:33.892 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:45:33.892 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:45:33.892 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:45:33.892 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:45:33.904 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:45:33.905 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:45:33.905 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:45:33.907 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:45:33.925 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:45:33.927 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:45:33.928 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:45:33.929 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:45:33.930 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:45:33.930 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:45:33.931 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@502cd83c
☆ 2017-06-14 17:45:33.932 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 2abf3f79-db12-4de4-9e22-36de023f9f4f (<unnamed>)
☆ 2017-06-14 17:45:33.932 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:45:33.966 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:45:33.978 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:45:33.981 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:45:33.983 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:45:33.987 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:45:33.989 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:45:34.050 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:45:43.019 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 17:45:43.020 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:45:43.020 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:45:43.021 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:46:31.888 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:46:31.896 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:46:31.897 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:46:31.898 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:46:31.964 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:46:31.965 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:46:31.967 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:46:31.979 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:46:31.981 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:46:31.981 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:46:31.985 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:46:32.127 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:46:32.127 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:46:32.127 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:46:32.135 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:46:32.136 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:46:32.145 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:46:32.150 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:46:32.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@453903fe
☆ 2017-06-14 17:46:32.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@453903fe
☆ 2017-06-14 17:46:32.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@453903fe
☆ 2017-06-14 17:46:32.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ce11aa7
☆ 2017-06-14 17:46:32.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@1ad8f320
☆ 2017-06-14 17:46:32.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@5323b05e
☆ 2017-06-14 17:46:32.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@717bb0d1
☆ 2017-06-14 17:46:32.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@717bb0d1
☆ 2017-06-14 17:46:32.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@717bb0d1
☆ 2017-06-14 17:46:32.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@465e1b72
☆ 2017-06-14 17:46:32.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@465e1b72
☆ 2017-06-14 17:46:32.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@465e1b72
☆ 2017-06-14 17:46:32.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@6411082d
☆ 2017-06-14 17:46:32.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@6411082d
☆ 2017-06-14 17:46:32.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6411082d
☆ 2017-06-14 17:46:32.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@56d98c46
☆ 2017-06-14 17:46:32.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@56d98c46
☆ 2017-06-14 17:46:32.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56d98c46
☆ 2017-06-14 17:46:32.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6d6cc09a
☆ 2017-06-14 17:46:32.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@6d6cc09a
☆ 2017-06-14 17:46:32.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@6d6cc09a
☆ 2017-06-14 17:46:32.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@257b4c31
☆ 2017-06-14 17:46:32.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@257b4c31
☆ 2017-06-14 17:46:32.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@257b4c31
☆ 2017-06-14 17:46:32.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@73673ea1
☆ 2017-06-14 17:46:32.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@73673ea1
☆ 2017-06-14 17:46:32.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@73673ea1
☆ 2017-06-14 17:46:32.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@e9e38a6
☆ 2017-06-14 17:46:32.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@e9e38a6
☆ 2017-06-14 17:46:32.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2d7fba02
☆ 2017-06-14 17:46:32.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2d7fba02
☆ 2017-06-14 17:46:32.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5513747
☆ 2017-06-14 17:46:32.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5513747
☆ 2017-06-14 17:46:32.222 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@29861470
☆ 2017-06-14 17:46:32.222 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c799667
☆ 2017-06-14 17:46:32.223 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@34d24109
☆ 2017-06-14 17:46:32.223 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@34d24109
☆ 2017-06-14 17:46:32.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@1c9851c6
☆ 2017-06-14 17:46:32.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c9851c6
☆ 2017-06-14 17:46:32.226 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@1ff8347a
☆ 2017-06-14 17:46:32.226 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1ff8347a
☆ 2017-06-14 17:46:32.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@6e934503
☆ 2017-06-14 17:46:32.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e934503
☆ 2017-06-14 17:46:32.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e934503
☆ 2017-06-14 17:46:32.228 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@35e18146
☆ 2017-06-14 17:46:32.229 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@1c6fb66b
☆ 2017-06-14 17:46:32.229 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c6fb66b
☆ 2017-06-14 17:46:32.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c6fb66b
☆ 2017-06-14 17:46:32.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ecc2ad2
☆ 2017-06-14 17:46:32.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@fa86ed1
☆ 2017-06-14 17:46:32.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fa86ed1
☆ 2017-06-14 17:46:32.232 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@593937b6
☆ 2017-06-14 17:46:32.232 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@593937b6
☆ 2017-06-14 17:46:32.232 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@6deba3b3
☆ 2017-06-14 17:46:32.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6deba3b3
☆ 2017-06-14 17:46:32.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@65b4cdd6
☆ 2017-06-14 17:46:32.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@65b4cdd6
☆ 2017-06-14 17:46:32.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e04d6cf
☆ 2017-06-14 17:46:32.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e04d6cf
☆ 2017-06-14 17:46:32.235 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@474d6c3c
☆ 2017-06-14 17:46:32.236 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1e8b50ff
☆ 2017-06-14 17:46:32.236 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1e8b50ff
☆ 2017-06-14 17:46:32.236 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1e8b50ff
☆ 2017-06-14 17:46:32.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@82f8105
☆ 2017-06-14 17:46:32.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@82f8105
☆ 2017-06-14 17:46:32.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@82f8105
☆ 2017-06-14 17:46:32.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@5bc7811b
☆ 2017-06-14 17:46:32.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@159857a6
☆ 2017-06-14 17:46:32.239 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@159857a6
☆ 2017-06-14 17:46:32.239 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@159857a6
☆ 2017-06-14 17:46:32.239 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1aff2824
☆ 2017-06-14 17:46:32.239 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1aff2824
☆ 2017-06-14 17:46:32.240 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1aff2824
☆ 2017-06-14 17:46:32.240 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@5ccf6f55
☆ 2017-06-14 17:46:32.241 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@70708f58
☆ 2017-06-14 17:46:32.243 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@428c9cb3
☆ 2017-06-14 17:46:32.244 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@428c9cb3
☆ 2017-06-14 17:46:32.244 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4a3484c0
☆ 2017-06-14 17:46:32.246 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@62157cf3
☆ 2017-06-14 17:46:32.247 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@62157cf3
☆ 2017-06-14 17:46:32.249 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4e085724
☆ 2017-06-14 17:46:32.249 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4e085724
☆ 2017-06-14 17:46:32.249 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@68825913
☆ 2017-06-14 17:46:32.251 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fef699
☆ 2017-06-14 17:46:32.252 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@5f90fe03
☆ 2017-06-14 17:46:32.255 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@731a3bc7
☆ 2017-06-14 17:46:32.255 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@731a3bc7
☆ 2017-06-14 17:46:32.255 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b7647c5
☆ 2017-06-14 17:46:32.255 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49109d6f
☆ 2017-06-14 17:46:32.255 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@343978c5
☆ 2017-06-14 17:46:32.255 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@30b187ac
☆ 2017-06-14 17:46:32.255 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69a0b610
☆ 2017-06-14 17:46:32.256 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2496b5ae
☆ 2017-06-14 17:46:32.256 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5b161ea9
☆ 2017-06-14 17:46:32.256 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@67a67e80
☆ 2017-06-14 17:46:32.264 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:46:32.266 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:46:32.266 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:46:32.266 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:46:32.268 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:46:32.269 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:46:32.423 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:46:32.423 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:46:32.423 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:46:32.432 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:46:32.451 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:46:32.506 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:46:32.506 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:46:32.507 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:46:32.507 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:46:32.507 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:46:32.508 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:46:32.508 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:46:32.509 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:46:32.509 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:46:32.510 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:46:32.510 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:46:32.510 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:46:32.511 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:46:32.511 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:46:32.532 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:46:32.550 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:46:32.564 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:46:32.568 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:46:32.572 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:46:32.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:46:32.597 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:46:32.598 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:46:32.599 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:46:32.601 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:46:32.604 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:46:32.604 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:46:32.604 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:46:32.604 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:46:32.604 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:46:32.605 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:46:32.605 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:46:32.605 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:46:32.605 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:46:32.605 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:46:32.606 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:46:32.606 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:46:32.606 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:46:32.607 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:46:32.629 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:46:32.630 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:46:32.630 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:46:32.630 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:46:32.630 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:46:32.631 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:46:32.631 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:46:32.631 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:46:32.631 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:46:32.631 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:46:32.631 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:46:32.631 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:46:32.631 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:46:32.631 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:46:32.631 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:46:32.631 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:46:32.631 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:46:32.632 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:46:32.632 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:46:32.632 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:46:32.632 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:46:32.632 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:46:32.632 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@775629fb
☆ 2017-06-14 17:46:32.632 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:46:32.632 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:46:32.632 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:46:32.632 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:46:32.632 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:46:32.632 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:46:32.633 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:46:32.633 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:46:32.633 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:46:32.633 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:46:32.633 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:46:32.633 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:46:32.633 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:46:32.664 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:46:32.666 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:46:32.699 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5851af4a, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:46:32.706 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:46:32.728 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:46:32.728 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:46:32.736 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:46:32.737 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:46:32.778 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:46:32.778 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:46:32.778 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:46:32.778 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:46:32.778 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:46:32.778 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:46:32.793 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26c120e5]
☆ 2017-06-14 17:46:32.793 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:46:32.794 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:46:32.794 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:46:32.804 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:46:32.807 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:46:32.809 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:46:32.809 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@370ef268]
☆ 2017-06-14 17:46:32.809 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:46:32.809 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:46:32.809 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:46:32.809 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:46:32.809 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:46:32.810 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:46:32.810 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f5d4f63]
☆ 2017-06-14 17:46:32.810 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:46:32.810 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:46:32.810 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:46:32.810 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:46:32.810 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:46:32.811 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:46:32.811 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69cf8fab]
☆ 2017-06-14 17:46:32.811 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:46:32.811 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:46:32.811 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:46:32.811 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:46:32.811 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:46:32.811 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:46:32.811 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3aee4d]
☆ 2017-06-14 17:46:32.812 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:46:32.812 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:46:32.812 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:46:32.812 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:46:32.812 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:46:32.812 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:46:32.812 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@139919df]
☆ 2017-06-14 17:46:32.812 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:46:32.813 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:46:32.813 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:46:32.813 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:46:32.813 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:46:32.813 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:46:32.813 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d521c6b]
☆ 2017-06-14 17:46:32.813 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:46:32.814 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:46:32.814 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:46:32.814 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:46:32.814 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:46:32.814 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:46:32.814 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6376b558]
☆ 2017-06-14 17:46:32.814 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:46:32.815 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:46:32.815 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:46:32.815 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:46:32.815 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:46:32.815 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:46:32.815 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20c6b7a4]
☆ 2017-06-14 17:46:32.815 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:46:32.815 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:46:32.816 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:46:32.816 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:46:32.816 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:46:32.816 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:46:32.816 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efd962a]
☆ 2017-06-14 17:46:32.816 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:46:32.816 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:46:32.816 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:46:32.816 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:46:32.817 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:46:32.817 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:46:32.817 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24ff01e7]
☆ 2017-06-14 17:46:32.817 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:46:32.817 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:46:32.817 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:46:32.818 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:46:32.818 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:46:32.818 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:46:32.830 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:46:32.830 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:46:32.830 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:46:32.833 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:46:32.851 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:46:32.853 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:46:32.854 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:46:32.855 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:46:32.856 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:46:32.856 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:46:32.857 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@502cd83c
☆ 2017-06-14 17:46:32.859 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: e7255fbf-6760-4d12-9038-56e621c5cc6c (<unnamed>)
☆ 2017-06-14 17:46:32.859 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:46:32.900 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:46:32.913 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:46:32.916 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:46:32.918 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:46:32.923 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:46:32.925 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:46:32.998 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:46:36.126 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 17:46:36.127 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:46:36.127 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:46:36.128 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:47:44.024 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:47:44.032 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:47:44.033 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:47:44.035 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:47:44.101 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:47:44.102 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:47:44.103 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:47:44.116 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:47:44.118 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:47:44.118 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:47:44.121 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:47:44.266 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:47:44.267 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:47:44.267 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:47:44.275 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:47:44.276 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:47:44.285 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:47:44.291 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:47:44.341 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:47:44.342 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:47:44.342 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:47:44.343 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45406ad9
☆ 2017-06-14 17:47:44.344 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@d203453
☆ 2017-06-14 17:47:44.344 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@1ddddd9e
☆ 2017-06-14 17:47:44.345 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:47:44.345 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:47:44.346 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:47:44.347 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:47:44.347 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:47:44.347 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:47:44.348 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:47:44.348 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:47:44.349 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:47:44.349 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:47:44.350 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:47:44.350 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:47:44.351 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:47:44.351 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:47:44.351 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:47:44.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:47:44.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:47:44.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:47:44.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:47:44.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:47:44.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:47:44.355 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 17:47:44.355 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 17:47:44.356 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 17:47:44.356 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 17:47:44.357 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 17:47:44.357 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 17:47:44.358 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@603f7723
☆ 2017-06-14 17:47:44.358 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11d57dc3
☆ 2017-06-14 17:47:44.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 17:47:44.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 17:47:44.360 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 17:47:44.361 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 17:47:44.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 17:47:44.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 17:47:44.363 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:47:44.363 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:47:44.363 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:47:44.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9cc13a
☆ 2017-06-14 17:47:44.365 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:47:44.365 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:47:44.366 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:47:44.366 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30a8cfff
☆ 2017-06-14 17:47:44.367 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 17:47:44.367 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 17:47:44.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 17:47:44.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 17:47:44.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 17:47:44.369 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 17:47:44.369 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 17:47:44.369 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 17:47:44.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 17:47:44.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 17:47:44.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@14cd5c87
☆ 2017-06-14 17:47:44.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:47:44.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:47:44.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:47:44.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:47:44.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:47:44.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:47:44.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@f3cd9c4
☆ 2017-06-14 17:47:44.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:47:44.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:47:44.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:47:44.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:47:44.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:47:44.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:47:44.376 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@60e92abf
☆ 2017-06-14 17:47:44.376 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@2c376fa2
☆ 2017-06-14 17:47:44.379 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 17:47:44.379 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 17:47:44.380 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11b52292
☆ 2017-06-14 17:47:44.382 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 17:47:44.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 17:47:44.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 17:47:44.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 17:47:44.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5013cc27
☆ 2017-06-14 17:47:44.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f98d316
☆ 2017-06-14 17:47:44.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@4f1eec54
☆ 2017-06-14 17:47:44.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 17:47:44.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 17:47:44.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@23250633
☆ 2017-06-14 17:47:44.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74fd2712
☆ 2017-06-14 17:47:44.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48456cd3
☆ 2017-06-14 17:47:44.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@798472b8
☆ 2017-06-14 17:47:44.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@729be725
☆ 2017-06-14 17:47:44.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6fc38bd3
☆ 2017-06-14 17:47:44.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c03510c
☆ 2017-06-14 17:47:44.393 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56c8e386
☆ 2017-06-14 17:47:44.400 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:47:44.402 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:47:44.403 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:47:44.403 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:47:44.405 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:47:44.405 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:47:44.551 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:47:44.552 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:47:44.552 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:47:44.560 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:47:44.580 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:47:44.635 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:47:44.636 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:47:44.636 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:47:44.636 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:47:44.637 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:47:44.637 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:47:44.638 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:47:44.638 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:47:44.639 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:47:44.639 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:47:44.640 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:47:44.640 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:47:44.640 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:47:44.641 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:47:44.662 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:47:44.681 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:47:44.695 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:47:44.699 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:47:44.703 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:47:44.725 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:47:44.728 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:47:44.729 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:47:44.730 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:47:44.731 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:47:44.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:47:44.735 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:47:44.735 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:47:44.735 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:47:44.735 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:47:44.735 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:47:44.736 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:47:44.736 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:47:44.736 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:47:44.736 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:47:44.737 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:47:44.737 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:47:44.737 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:47:44.738 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:47:44.761 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:47:44.762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:47:44.762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:47:44.762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:47:44.762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:47:44.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:47:44.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:47:44.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:47:44.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:47:44.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:47:44.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:47:44.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:47:44.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:47:44.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:47:44.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:47:44.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:47:44.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:47:44.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:47:44.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:47:44.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:47:44.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:47:44.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:47:44.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e4bae75
☆ 2017-06-14 17:47:44.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:47:44.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:47:44.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:47:44.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:47:44.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:47:44.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:47:44.765 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:47:44.765 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:47:44.765 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:47:44.765 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:47:44.765 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:47:44.765 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:47:44.765 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:47:44.795 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:47:44.796 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:47:44.796 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e2ffdd4, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:47:44.803 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:47:44.825 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:47:44.825 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:47:44.833 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:47:44.834 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:47:44.873 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:47:44.873 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:47:44.874 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:47:44.874 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:47:44.874 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:47:44.874 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:47:44.890 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68705d2f]
☆ 2017-06-14 17:47:44.890 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:47:44.890 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:47:44.891 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:47:44.901 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:47:44.904 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:47:44.906 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:47:44.906 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27c1bd81]
☆ 2017-06-14 17:47:44.906 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:47:44.906 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:47:44.906 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:47:44.906 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:47:44.907 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:47:44.907 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:47:44.907 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bbd1231]
☆ 2017-06-14 17:47:44.907 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:47:44.907 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:47:44.907 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:47:44.907 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:47:44.907 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:47:44.908 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:47:44.908 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22e9e3d5]
☆ 2017-06-14 17:47:44.908 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:47:44.908 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:47:44.908 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:47:44.908 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:47:44.908 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:47:44.908 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:47:44.909 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420f12c7]
☆ 2017-06-14 17:47:44.909 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:47:44.909 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:47:44.909 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:47:44.909 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:47:44.909 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:47:44.909 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:47:44.909 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54578247]
☆ 2017-06-14 17:47:44.909 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:47:44.910 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:47:44.910 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:47:44.910 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:47:44.910 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:47:44.910 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:47:44.910 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a02f760]
☆ 2017-06-14 17:47:44.911 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:47:44.911 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:47:44.911 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:47:44.911 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:47:44.912 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:47:44.912 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:47:44.912 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62fd39ce]
☆ 2017-06-14 17:47:44.912 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:47:44.912 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:47:44.912 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:47:44.913 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:47:44.913 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:47:44.913 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:47:44.913 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45861f91]
☆ 2017-06-14 17:47:44.913 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:47:44.914 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:47:44.914 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:47:44.914 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:47:44.914 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:47:44.915 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:47:44.915 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d9906c]
☆ 2017-06-14 17:47:44.915 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:47:44.915 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:47:44.915 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:47:44.915 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:47:44.916 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:47:44.916 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:47:44.916 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d3e0caf]
☆ 2017-06-14 17:47:44.916 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:47:44.916 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:47:44.916 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:47:44.917 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:47:44.917 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:47:44.917 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:47:44.930 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:47:44.930 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:47:44.930 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:47:44.932 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:47:44.951 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:47:44.954 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:47:44.954 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:47:44.956 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:47:44.957 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:47:44.957 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:47:44.958 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36898aa1
☆ 2017-06-14 17:47:44.959 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 98170eb9-8814-43f0-9f98-5d0b2a73e21b (<unnamed>)
☆ 2017-06-14 17:47:44.959 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:47:44.994 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:47:45.007 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:47:45.010 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:47:45.012 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:47:45.017 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:47:45.019 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:47:45.083 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:48:14.549 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-14 17:48:35.451 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 17:48:35.451 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:48:35.455 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:48:35.456 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:49:48.367 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:49:48.374 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:49:48.375 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:49:48.377 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:49:48.443 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:49:48.444 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:49:48.446 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:49:48.459 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:49:48.460 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:49:48.461 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:49:48.464 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:49:48.610 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:49:48.610 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:49:48.611 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:49:48.619 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:49:48.620 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:49:48.629 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:49:48.635 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:49:48.691 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:49:48.692 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:49:48.692 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:49:48.692 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45406ad9
☆ 2017-06-14 17:49:48.693 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@d203453
☆ 2017-06-14 17:49:48.694 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@1ddddd9e
☆ 2017-06-14 17:49:48.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:49:48.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:49:48.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:49:48.696 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:49:48.696 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:49:48.696 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:49:48.697 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:49:48.697 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:49:48.697 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:49:48.698 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:49:48.699 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:49:48.699 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:49:48.700 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:49:48.700 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:49:48.701 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:49:48.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:49:48.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:49:48.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:49:48.703 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:49:48.703 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:49:48.703 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:49:48.705 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 17:49:48.705 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 17:49:48.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 17:49:48.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 17:49:48.707 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 17:49:48.707 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 17:49:48.707 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@603f7723
☆ 2017-06-14 17:49:48.708 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11d57dc3
☆ 2017-06-14 17:49:48.709 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 17:49:48.709 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 17:49:48.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 17:49:48.711 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 17:49:48.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 17:49:48.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 17:49:48.713 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:49:48.713 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:49:48.713 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:49:48.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9cc13a
☆ 2017-06-14 17:49:48.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:49:48.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:49:48.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:49:48.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30a8cfff
☆ 2017-06-14 17:49:48.717 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 17:49:48.717 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 17:49:48.718 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 17:49:48.718 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 17:49:48.719 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 17:49:48.719 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 17:49:48.719 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 17:49:48.720 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 17:49:48.720 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 17:49:48.721 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 17:49:48.721 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@14cd5c87
☆ 2017-06-14 17:49:48.722 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:49:48.722 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:49:48.722 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:49:48.723 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:49:48.723 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:49:48.723 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:49:48.724 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@f3cd9c4
☆ 2017-06-14 17:49:48.724 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:49:48.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:49:48.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:49:48.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:49:48.726 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:49:48.726 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:49:48.726 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@60e92abf
☆ 2017-06-14 17:49:48.727 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@2c376fa2
☆ 2017-06-14 17:49:48.729 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 17:49:48.730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 17:49:48.730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11b52292
☆ 2017-06-14 17:49:48.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 17:49:48.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 17:49:48.735 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 17:49:48.735 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 17:49:48.735 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5013cc27
☆ 2017-06-14 17:49:48.738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f98d316
☆ 2017-06-14 17:49:48.739 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@4f1eec54
☆ 2017-06-14 17:49:48.741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 17:49:48.741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 17:49:48.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@23250633
☆ 2017-06-14 17:49:48.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74fd2712
☆ 2017-06-14 17:49:48.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48456cd3
☆ 2017-06-14 17:49:48.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@798472b8
☆ 2017-06-14 17:49:48.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@729be725
☆ 2017-06-14 17:49:48.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6fc38bd3
☆ 2017-06-14 17:49:48.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c03510c
☆ 2017-06-14 17:49:48.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56c8e386
☆ 2017-06-14 17:49:48.750 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:49:48.752 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:49:48.752 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:49:48.753 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:49:48.755 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:49:48.755 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:49:48.901 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:49:48.901 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:49:48.901 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:49:48.910 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:49:48.930 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:49:48.987 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:49:48.988 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:49:48.988 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:49:48.988 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:49:48.988 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:49:48.989 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:49:48.989 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:49:48.990 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:49:48.991 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:49:48.991 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:49:48.992 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:49:48.992 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:49:48.992 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:49:48.993 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:49:49.014 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:49:49.033 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:49:49.048 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:49:49.052 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:49:49.056 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:49:49.079 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:49:49.082 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:49:49.083 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:49:49.084 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:49:49.086 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:49:49.089 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:49:49.089 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:49:49.089 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:49:49.089 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:49:49.089 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:49:49.090 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:49:49.090 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:49:49.090 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:49:49.090 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:49:49.090 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:49:49.091 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:49:49.091 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:49:49.091 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:49:49.092 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:49:49.116 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:49:49.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:49:49.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:49:49.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:49:49.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:49:49.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:49:49.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:49:49.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:49:49.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:49:49.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:49:49.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:49:49.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:49:49.117 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:49:49.118 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:49:49.118 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:49:49.118 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:49:49.118 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:49:49.118 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:49:49.118 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:49:49.118 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:49:49.118 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:49:49.118 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:49:49.118 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e4bae75
☆ 2017-06-14 17:49:49.118 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:49:49.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:49:49.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:49:49.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:49:49.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:49:49.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:49:49.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:49:49.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:49:49.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:49:49.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:49:49.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:49:49.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:49:49.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:49:49.152 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:49:49.153 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:49:49.153 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e2ffdd4, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:49:49.160 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:49:49.182 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:49:49.183 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:49:49.191 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:49:49.191 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:49:49.232 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:49:49.232 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:49:49.232 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:49:49.232 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:49:49.233 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:49:49.233 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:49:49.247 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68705d2f]
☆ 2017-06-14 17:49:49.248 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:49:49.248 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:49:49.249 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:49:49.259 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:49:49.262 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:49:49.264 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:49:49.264 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27c1bd81]
☆ 2017-06-14 17:49:49.264 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:49:49.264 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:49:49.264 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:49:49.264 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:49:49.264 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:49:49.265 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:49:49.265 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bbd1231]
☆ 2017-06-14 17:49:49.265 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:49:49.265 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:49:49.265 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:49:49.265 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:49:49.265 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:49:49.265 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:49:49.265 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22e9e3d5]
☆ 2017-06-14 17:49:49.266 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:49:49.266 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:49:49.266 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:49:49.266 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:49:49.266 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:49:49.266 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:49:49.266 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420f12c7]
☆ 2017-06-14 17:49:49.266 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:49:49.267 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:49:49.267 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:49:49.267 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:49:49.267 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:49:49.267 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:49:49.267 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54578247]
☆ 2017-06-14 17:49:49.267 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:49:49.267 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:49:49.267 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:49:49.268 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:49:49.268 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:49:49.268 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:49:49.268 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a02f760]
☆ 2017-06-14 17:49:49.268 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:49:49.268 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:49:49.268 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:49:49.269 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:49:49.269 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:49:49.269 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:49:49.269 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62fd39ce]
☆ 2017-06-14 17:49:49.269 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:49:49.269 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:49:49.269 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:49:49.270 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:49:49.270 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:49:49.270 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:49:49.270 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45861f91]
☆ 2017-06-14 17:49:49.270 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:49:49.270 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:49:49.270 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:49:49.270 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:49:49.271 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:49:49.271 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:49:49.271 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d9906c]
☆ 2017-06-14 17:49:49.271 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:49:49.271 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:49:49.271 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:49:49.271 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:49:49.272 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:49:49.272 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:49:49.272 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d3e0caf]
☆ 2017-06-14 17:49:49.272 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:49:49.272 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:49:49.272 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:49:49.272 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:49:49.272 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:49:49.273 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:49:49.285 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:49:49.285 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:49:49.285 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:49:49.287 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:49:49.306 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:49:49.308 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:49:49.309 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:49:49.310 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:49:49.311 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:49:49.311 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:49:49.312 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36898aa1
☆ 2017-06-14 17:49:49.314 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: bd8c60d3-8aa1-4bc0-a226-35497adb8809 (<unnamed>)
☆ 2017-06-14 17:49:49.314 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:49:49.355 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:49:49.368 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:49:49.371 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:49:49.373 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:49:49.378 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:49:49.380 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:49:49.451 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:50:07.572 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 17:50:07.573 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:50:07.573 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:50:07.574 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:50:28.972 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:50:28.981 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:50:28.983 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:50:28.984 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:50:29.047 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:50:29.048 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:50:29.050 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:50:29.062 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:50:29.064 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:50:29.064 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:50:29.068 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:50:29.215 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:50:29.215 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:50:29.215 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:50:29.224 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:50:29.224 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:50:29.233 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:50:29.239 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:50:29.252 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 17:50:29.253 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 17:50:29.296 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 17:50:29.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 17:50:29.298 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 17:50:29.298 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 17:50:29.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 17:50:29.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 17:50:29.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 17:50:29.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 17:50:29.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 17:50:29.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 17:50:29.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 17:50:29.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 17:50:29.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 17:50:29.304 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 17:50:29.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 17:50:29.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 17:50:29.306 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 17:50:29.306 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 17:50:29.307 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 17:50:29.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 17:50:29.309 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 17:50:29.309 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 17:50:29.310 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 17:50:29.311 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 17:50:29.311 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 17:50:29.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 17:50:29.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 17:50:29.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 17:50:29.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 17:50:29.315 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 17:50:29.316 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 17:50:29.316 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 17:50:29.317 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 17:50:29.318 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 17:50:29.318 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 17:50:29.320 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 17:50:29.320 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 17:50:29.321 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 17:50:29.321 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 17:50:29.323 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 17:50:29.323 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 17:50:29.323 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 17:50:29.325 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 17:50:29.326 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 17:50:29.326 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 17:50:29.327 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 17:50:29.327 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 17:50:29.328 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 17:50:29.328 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 17:50:29.329 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 17:50:29.329 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 17:50:29.330 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 17:50:29.330 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 17:50:29.331 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 17:50:29.331 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 17:50:29.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 17:50:29.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 17:50:29.333 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 17:50:29.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 17:50:29.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 17:50:29.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 17:50:29.335 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 17:50:29.335 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 17:50:29.335 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 17:50:29.336 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 17:50:29.336 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 17:50:29.336 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 17:50:29.336 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 17:50:29.337 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 17:50:29.337 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 17:50:29.337 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 17:50:29.338 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 17:50:29.338 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 17:50:29.341 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 17:50:29.341 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 17:50:29.342 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 17:50:29.344 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 17:50:29.344 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 17:50:29.346 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 17:50:29.346 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 17:50:29.347 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 17:50:29.349 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 17:50:29.350 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 17:50:29.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 17:50:29.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 17:50:29.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 17:50:29.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 17:50:29.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 17:50:29.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 17:50:29.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 17:50:29.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 17:50:29.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 17:50:29.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 17:50:29.361 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:50:29.364 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:50:29.364 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:50:29.364 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:50:29.366 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:50:29.366 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:50:29.513 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:50:29.514 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:50:29.514 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:50:29.522 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:50:29.542 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:50:29.597 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:50:29.597 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:50:29.598 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:50:29.598 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:50:29.598 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:50:29.599 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:50:29.599 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:50:29.600 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:50:29.600 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:50:29.601 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:50:29.601 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:50:29.601 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:50:29.602 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:50:29.602 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:50:29.623 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:50:29.642 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:50:29.656 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:50:29.660 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:50:29.665 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:50:29.687 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:50:29.690 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:50:29.731 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:50:29.732 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:50:29.733 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:50:29.736 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:50:29.736 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:50:29.737 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:50:29.737 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:50:29.737 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:50:29.737 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:50:29.737 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:50:29.737 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:50:29.737 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:50:29.737 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:50:29.738 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:50:29.738 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:50:29.738 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:50:29.739 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:50:29.761 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:50:29.762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:50:29.762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:50:29.762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:50:29.762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:50:29.762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:50:29.762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:50:29.762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:50:29.762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:50:29.762 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:50:29.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:50:29.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:50:29.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:50:29.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:50:29.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:50:29.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:50:29.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:50:29.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:50:29.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:50:29.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:50:29.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:50:29.763 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:50:29.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 17:50:29.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:50:29.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:50:29.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:50:29.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:50:29.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:50:29.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:50:29.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:50:29.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:50:29.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:50:29.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:50:29.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:50:29.765 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:50:29.765 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:50:29.796 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:50:29.797 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:50:29.797 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:50:29.804 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:50:29.827 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:50:29.827 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:50:29.836 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:50:29.836 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:50:29.875 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:50:29.875 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:50:29.876 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:50:29.876 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:50:29.876 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:50:29.876 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:50:29.890 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 17:50:29.891 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:50:29.891 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:50:29.891 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:50:29.901 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:50:29.904 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:50:29.906 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:50:29.906 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 17:50:29.906 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:50:29.906 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:50:29.906 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:50:29.906 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:50:29.906 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:50:29.906 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:50:29.907 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 17:50:29.907 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:50:29.907 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:50:29.907 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:50:29.907 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:50:29.907 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:50:29.907 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:50:29.907 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 17:50:29.908 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:50:29.908 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:50:29.908 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:50:29.908 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:50:29.908 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:50:29.908 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:50:29.908 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 17:50:29.908 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:50:29.908 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:50:29.909 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:50:29.909 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:50:29.909 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:50:29.909 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:50:29.909 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 17:50:29.909 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:50:29.909 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:50:29.909 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:50:29.909 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:50:29.910 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:50:29.910 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:50:29.910 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 17:50:29.910 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:50:29.910 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:50:29.910 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:50:29.911 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:50:29.911 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:50:29.911 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:50:29.911 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 17:50:29.911 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:50:29.911 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:50:29.911 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:50:29.911 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:50:29.912 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:50:29.912 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:50:29.912 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 17:50:29.912 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:50:29.912 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:50:29.912 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:50:29.912 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:50:29.912 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:50:29.913 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:50:29.913 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 17:50:29.913 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:50:29.913 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:50:29.913 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:50:29.913 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:50:29.913 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:50:29.913 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:50:29.914 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 17:50:29.914 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:50:29.914 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:50:29.914 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:50:29.914 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:50:29.914 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:50:29.914 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:50:29.926 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:50:29.926 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:50:29.926 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:50:29.929 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:50:29.948 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:50:29.951 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:50:29.951 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:50:29.953 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:50:29.953 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:50:29.953 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:50:29.955 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 17:50:29.956 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 5a9542c6-d2a3-456c-a5c5-1f17866a226f (<unnamed>)
☆ 2017-06-14 17:50:29.956 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:50:29.989 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:50:30.001 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:50:30.004 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:50:30.006 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:50:30.011 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:50:30.012 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:50:30.073 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:50:44.935 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 17:50:44.936 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:50:44.936 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:50:44.937 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:51:19.943 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:51:19.952 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:51:19.953 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:51:19.955 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:51:20.019 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:51:20.020 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:51:20.021 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:51:20.034 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:51:20.035 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:51:20.036 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:51:20.039 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:51:20.185 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:51:20.185 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:51:20.185 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:51:20.193 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:51:20.194 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:51:20.203 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:51:20.209 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:51:20.263 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:51:20.263 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:51:20.263 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:51:20.264 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45406ad9
☆ 2017-06-14 17:51:20.265 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@d203453
☆ 2017-06-14 17:51:20.265 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@1ddddd9e
☆ 2017-06-14 17:51:20.266 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:51:20.267 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:51:20.267 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:51:20.267 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:51:20.268 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:51:20.268 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:51:20.269 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:51:20.269 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:51:20.269 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:51:20.270 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:51:20.270 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:51:20.270 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:51:20.271 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:51:20.271 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:51:20.272 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:51:20.273 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:51:20.273 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:51:20.273 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:51:20.274 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:51:20.274 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:51:20.275 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:51:20.276 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 17:51:20.276 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 17:51:20.277 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 17:51:20.277 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 17:51:20.278 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 17:51:20.278 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 17:51:20.279 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@603f7723
☆ 2017-06-14 17:51:20.279 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11d57dc3
☆ 2017-06-14 17:51:20.280 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 17:51:20.280 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 17:51:20.282 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 17:51:20.282 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 17:51:20.283 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 17:51:20.283 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 17:51:20.284 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:51:20.284 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:51:20.284 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:51:20.286 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9cc13a
☆ 2017-06-14 17:51:20.286 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:51:20.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:51:20.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:51:20.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30a8cfff
☆ 2017-06-14 17:51:20.288 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 17:51:20.288 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 17:51:20.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 17:51:20.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 17:51:20.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 17:51:20.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 17:51:20.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 17:51:20.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 17:51:20.291 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 17:51:20.292 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 17:51:20.292 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@14cd5c87
☆ 2017-06-14 17:51:20.293 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:51:20.293 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:51:20.293 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:51:20.294 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:51:20.294 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:51:20.294 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:51:20.295 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@f3cd9c4
☆ 2017-06-14 17:51:20.295 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:51:20.295 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:51:20.296 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:51:20.296 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:51:20.296 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:51:20.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:51:20.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@60e92abf
☆ 2017-06-14 17:51:20.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@2c376fa2
☆ 2017-06-14 17:51:20.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 17:51:20.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 17:51:20.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11b52292
☆ 2017-06-14 17:51:20.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 17:51:20.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 17:51:20.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 17:51:20.306 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 17:51:20.306 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5013cc27
☆ 2017-06-14 17:51:20.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f98d316
☆ 2017-06-14 17:51:20.310 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@4f1eec54
☆ 2017-06-14 17:51:20.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 17:51:20.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 17:51:20.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@23250633
☆ 2017-06-14 17:51:20.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74fd2712
☆ 2017-06-14 17:51:20.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48456cd3
☆ 2017-06-14 17:51:20.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@798472b8
☆ 2017-06-14 17:51:20.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@729be725
☆ 2017-06-14 17:51:20.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6fc38bd3
☆ 2017-06-14 17:51:20.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c03510c
☆ 2017-06-14 17:51:20.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56c8e386
☆ 2017-06-14 17:51:20.321 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:51:20.323 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:51:20.323 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:51:20.323 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:51:20.325 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:51:20.326 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:51:20.471 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:51:20.471 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:51:20.471 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:51:20.479 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:51:20.499 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:51:20.554 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:51:20.555 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:51:20.555 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:51:20.555 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:51:20.555 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:51:20.556 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:51:20.556 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:51:20.557 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:51:20.558 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:51:20.558 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:51:20.559 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:51:20.559 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:51:20.559 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:51:20.560 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:51:20.581 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:51:20.600 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:51:20.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:51:20.617 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:51:20.622 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:51:20.644 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:51:20.647 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:51:20.648 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:51:20.649 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:51:20.650 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:51:20.654 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:51:20.654 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:51:20.654 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:51:20.654 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:51:20.654 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:51:20.654 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:51:20.655 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:51:20.655 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:51:20.655 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:51:20.655 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:51:20.656 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:51:20.656 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:51:20.656 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:51:20.657 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:51:20.680 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:51:20.681 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:51:20.681 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:51:20.681 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:51:20.681 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:51:20.681 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:51:20.681 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:51:20.682 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:51:20.682 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:51:20.682 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:51:20.682 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:51:20.682 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:51:20.682 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:51:20.682 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:51:20.682 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:51:20.682 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:51:20.682 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:51:20.683 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:51:20.683 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:51:20.683 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:51:20.683 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:51:20.683 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:51:20.683 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e4bae75
☆ 2017-06-14 17:51:20.683 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:51:20.683 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:51:20.683 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:51:20.683 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:51:20.683 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:51:20.684 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:51:20.684 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:51:20.684 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:51:20.684 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:51:20.684 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:51:20.684 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:51:20.684 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:51:20.684 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:51:20.715 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:51:20.717 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:51:20.717 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e2ffdd4, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:51:20.724 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:51:20.746 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:51:20.746 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:51:20.754 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:51:20.755 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:51:20.794 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:51:20.794 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:51:20.795 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:51:20.795 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:51:20.795 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:51:20.795 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:51:20.810 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68705d2f]
☆ 2017-06-14 17:51:20.810 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:51:20.811 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:51:20.811 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:51:20.821 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:51:20.824 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:51:20.826 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:51:20.826 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27c1bd81]
☆ 2017-06-14 17:51:20.826 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:51:20.826 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:51:20.826 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:51:20.827 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:51:20.827 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:51:20.827 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:51:20.828 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bbd1231]
☆ 2017-06-14 17:51:20.828 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:51:20.828 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:51:20.828 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:51:20.828 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:51:20.829 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:51:20.829 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:51:20.829 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22e9e3d5]
☆ 2017-06-14 17:51:20.829 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:51:20.829 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:51:20.830 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:51:20.830 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:51:20.830 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:51:20.830 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:51:20.831 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420f12c7]
☆ 2017-06-14 17:51:20.831 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:51:20.831 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:51:20.831 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:51:20.832 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:51:20.832 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:51:20.832 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:51:20.832 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54578247]
☆ 2017-06-14 17:51:20.833 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:51:20.833 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:51:20.833 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:51:20.833 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:51:20.834 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:51:20.834 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:51:20.834 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a02f760]
☆ 2017-06-14 17:51:20.834 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:51:20.835 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:51:20.835 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:51:20.835 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:51:20.836 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:51:20.836 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:51:20.836 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62fd39ce]
☆ 2017-06-14 17:51:20.836 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:51:20.836 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:51:20.837 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:51:20.837 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:51:20.837 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:51:20.837 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:51:20.837 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45861f91]
☆ 2017-06-14 17:51:20.837 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:51:20.837 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:51:20.838 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:51:20.838 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:51:20.838 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:51:20.838 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:51:20.838 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d9906c]
☆ 2017-06-14 17:51:20.838 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:51:20.839 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:51:20.839 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:51:20.839 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:51:20.839 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:51:20.839 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:51:20.839 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d3e0caf]
☆ 2017-06-14 17:51:20.840 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:51:20.840 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:51:20.840 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:51:20.840 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:51:20.840 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:51:20.840 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:51:20.854 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:51:20.854 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:51:20.854 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:51:20.856 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:51:20.874 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:51:20.876 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:51:20.877 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:51:20.878 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:51:20.879 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:51:20.879 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:51:20.880 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36898aa1
☆ 2017-06-14 17:51:20.882 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: d58f3fed-6760-4026-83a7-268ca63db369 (<unnamed>)
☆ 2017-06-14 17:51:20.882 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:51:20.916 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:51:20.929 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:51:20.932 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:51:20.934 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:51:20.939 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:51:20.941 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:51:21.004 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:53:03.905 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 17:53:03.913 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:53:03.914 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:53:03.916 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:53:03.981 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 17:53:03.982 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 17:53:03.983 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 17:53:03.996 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 17:53:03.997 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 17:53:03.998 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 17:53:04.001 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 17:53:04.146 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 17:53:04.147 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 17:53:04.147 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 17:53:04.156 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 17:53:04.156 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 17:53:04.165 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 17:53:04.171 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 17:53:04.224 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:53:04.224 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:53:04.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 17:53:04.226 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45406ad9
☆ 2017-06-14 17:53:04.226 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@d203453
☆ 2017-06-14 17:53:04.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@1ddddd9e
☆ 2017-06-14 17:53:04.228 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:53:04.228 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:53:04.228 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 17:53:04.229 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:53:04.229 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:53:04.229 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 17:53:04.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:53:04.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:53:04.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 17:53:04.232 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:53:04.232 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:53:04.232 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 17:53:04.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:53:04.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:53:04.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 17:53:04.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:53:04.235 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:53:04.235 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 17:53:04.236 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:53:04.236 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:53:04.236 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 17:53:04.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 17:53:04.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 17:53:04.239 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 17:53:04.239 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 17:53:04.239 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 17:53:04.240 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 17:53:04.240 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@603f7723
☆ 2017-06-14 17:53:04.241 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11d57dc3
☆ 2017-06-14 17:53:04.242 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 17:53:04.242 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 17:53:04.243 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 17:53:04.244 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 17:53:04.245 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 17:53:04.245 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 17:53:04.246 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:53:04.246 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:53:04.246 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 17:53:04.248 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9cc13a
☆ 2017-06-14 17:53:04.248 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:53:04.249 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:53:04.249 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 17:53:04.249 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30a8cfff
☆ 2017-06-14 17:53:04.250 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 17:53:04.250 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 17:53:04.251 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 17:53:04.251 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 17:53:04.252 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 17:53:04.252 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 17:53:04.253 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 17:53:04.253 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 17:53:04.254 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 17:53:04.254 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 17:53:04.254 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@14cd5c87
☆ 2017-06-14 17:53:04.255 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:53:04.255 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:53:04.256 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 17:53:04.256 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:53:04.257 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:53:04.257 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 17:53:04.257 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@f3cd9c4
☆ 2017-06-14 17:53:04.258 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:53:04.258 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:53:04.258 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 17:53:04.259 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:53:04.259 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:53:04.259 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 17:53:04.260 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@60e92abf
☆ 2017-06-14 17:53:04.260 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@2c376fa2
☆ 2017-06-14 17:53:04.263 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 17:53:04.263 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 17:53:04.264 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11b52292
☆ 2017-06-14 17:53:04.266 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 17:53:04.266 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 17:53:04.268 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 17:53:04.269 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 17:53:04.269 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5013cc27
☆ 2017-06-14 17:53:04.271 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f98d316
☆ 2017-06-14 17:53:04.273 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@4f1eec54
☆ 2017-06-14 17:53:04.275 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 17:53:04.275 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 17:53:04.275 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@23250633
☆ 2017-06-14 17:53:04.275 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74fd2712
☆ 2017-06-14 17:53:04.276 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48456cd3
☆ 2017-06-14 17:53:04.276 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@798472b8
☆ 2017-06-14 17:53:04.276 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@729be725
☆ 2017-06-14 17:53:04.276 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6fc38bd3
☆ 2017-06-14 17:53:04.276 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c03510c
☆ 2017-06-14 17:53:04.276 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56c8e386
☆ 2017-06-14 17:53:04.284 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 17:53:04.286 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:53:04.286 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 17:53:04.286 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 17:53:04.289 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 17:53:04.289 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 17:53:04.431 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:53:04.432 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 17:53:04.432 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 17:53:04.441 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 17:53:04.461 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 17:53:04.516 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 17:53:04.517 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 17:53:04.517 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:53:04.518 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 17:53:04.518 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 17:53:04.519 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 17:53:04.519 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 17:53:04.520 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:53:04.520 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 17:53:04.521 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 17:53:04.521 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 17:53:04.522 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 17:53:04.522 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 17:53:04.523 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 17:53:04.544 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 17:53:04.562 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:53:04.576 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 17:53:04.580 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 17:53:04.584 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 17:53:04.607 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 17:53:04.609 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 17:53:04.611 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 17:53:04.612 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 17:53:04.614 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 17:53:04.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:53:04.618 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 17:53:04.618 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 17:53:04.618 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 17:53:04.618 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 17:53:04.618 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 17:53:04.618 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 17:53:04.618 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 17:53:04.618 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 17:53:04.618 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 17:53:04.619 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 17:53:04.619 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 17:53:04.620 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 17:53:04.621 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 17:53:04.643 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 17:53:04.644 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 17:53:04.644 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 17:53:04.644 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 17:53:04.644 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 17:53:04.644 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 17:53:04.644 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 17:53:04.644 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 17:53:04.644 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 17:53:04.645 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 17:53:04.645 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 17:53:04.645 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 17:53:04.645 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 17:53:04.645 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 17:53:04.645 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 17:53:04.645 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 17:53:04.645 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 17:53:04.645 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 17:53:04.645 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 17:53:04.645 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 17:53:04.646 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 17:53:04.646 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 17:53:04.646 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e4bae75
☆ 2017-06-14 17:53:04.646 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 17:53:04.646 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 17:53:04.646 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 17:53:04.646 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 17:53:04.646 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 17:53:04.646 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 17:53:04.646 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 17:53:04.646 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 17:53:04.647 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 17:53:04.647 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 17:53:04.647 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 17:53:04.647 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 17:53:04.647 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 17:53:04.678 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 17:53:04.680 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 17:53:04.680 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e2ffdd4, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 17:53:04.687 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 17:53:04.709 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:53:04.709 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:53:04.718 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 17:53:04.718 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:53:04.758 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 17:53:04.758 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 17:53:04.758 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 17:53:04.758 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 17:53:04.758 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 17:53:04.758 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 17:53:04.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68705d2f]
☆ 2017-06-14 17:53:04.774 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:53:04.774 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:53:04.774 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:53:04.783 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:53:04.786 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:53:04.788 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:53:04.788 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27c1bd81]
☆ 2017-06-14 17:53:04.788 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:53:04.788 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:53:04.788 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:53:04.789 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:53:04.789 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:53:04.789 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:53:04.789 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bbd1231]
☆ 2017-06-14 17:53:04.789 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:53:04.789 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:53:04.789 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:53:04.789 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:53:04.790 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:53:04.790 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:53:04.790 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22e9e3d5]
☆ 2017-06-14 17:53:04.790 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:53:04.790 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:53:04.790 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:53:04.790 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:53:04.791 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:53:04.791 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:53:04.791 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420f12c7]
☆ 2017-06-14 17:53:04.791 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:53:04.791 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:53:04.791 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:53:04.791 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:53:04.791 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:53:04.792 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:53:04.792 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54578247]
☆ 2017-06-14 17:53:04.792 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:53:04.792 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:53:04.792 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:53:04.792 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:53:04.792 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:53:04.792 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:53:04.793 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a02f760]
☆ 2017-06-14 17:53:04.793 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:53:04.793 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:53:04.793 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:53:04.793 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:53:04.793 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:53:04.793 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:53:04.794 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62fd39ce]
☆ 2017-06-14 17:53:04.794 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:53:04.794 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:53:04.794 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:53:04.794 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:53:04.794 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:53:04.794 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:53:04.794 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45861f91]
☆ 2017-06-14 17:53:04.795 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:53:04.795 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:53:04.795 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:53:04.795 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:53:04.795 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:53:04.795 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 17:53:04.795 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d9906c]
☆ 2017-06-14 17:53:04.795 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:53:04.795 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:53:04.796 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:53:04.796 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:53:04.796 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:53:04.796 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:53:04.796 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d3e0caf]
☆ 2017-06-14 17:53:04.796 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 17:53:04.796 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 17:53:04.796 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 17:53:04.797 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 17:53:04.797 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 17:53:04.797 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:53:04.809 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:53:04.809 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 17:53:04.809 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 17:53:04.811 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 17:53:04.828 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 17:53:04.830 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 17:53:04.831 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 17:53:04.832 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 17:53:04.833 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 17:53:04.833 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 17:53:04.834 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36898aa1
☆ 2017-06-14 17:53:04.835 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 3cd5a4e7-5d11-4375-bb68-a72e0996f3c4 (<unnamed>)
☆ 2017-06-14 17:53:04.836 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 17:53:04.869 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 17:53:04.883 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 17:53:04.885 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 17:53:04.887 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:53:04.892 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:53:04.894 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 17:53:04.955 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 17:53:06.940 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 17:53:06.941 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 17:53:06.941 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 17:53:06.942 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 18:17:56.558 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 18:17:56.565 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:17:56.567 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:17:56.568 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:17:56.636 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 18:17:56.637 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 18:17:56.638 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 18:17:56.651 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 18:17:56.652 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 18:17:56.653 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 18:17:56.656 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 18:17:56.801 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:17:56.801 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:17:56.801 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:17:56.809 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 18:17:56.810 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 18:17:56.819 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 18:17:56.825 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 18:17:56.875 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 18:17:56.876 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 18:17:56.876 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 18:17:56.877 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45406ad9
☆ 2017-06-14 18:17:56.877 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@d203453
☆ 2017-06-14 18:17:56.878 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@1ddddd9e
☆ 2017-06-14 18:17:56.879 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 18:17:56.879 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 18:17:56.879 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 18:17:56.880 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 18:17:56.880 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 18:17:56.880 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 18:17:56.881 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 18:17:56.881 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 18:17:56.882 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 18:17:56.882 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 18:17:56.883 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 18:17:56.883 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 18:17:56.884 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 18:17:56.884 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 18:17:56.884 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 18:17:56.885 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 18:17:56.886 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 18:17:56.886 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 18:17:56.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 18:17:56.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 18:17:56.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 18:17:56.888 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 18:17:56.888 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 18:17:56.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 18:17:56.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 18:17:56.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 18:17:56.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 18:17:56.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@603f7723
☆ 2017-06-14 18:17:56.892 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11d57dc3
☆ 2017-06-14 18:17:56.892 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 18:17:56.892 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 18:17:56.894 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 18:17:56.894 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 18:17:56.895 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 18:17:56.895 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 18:17:56.896 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 18:17:56.897 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 18:17:56.897 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 18:17:56.898 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9cc13a
☆ 2017-06-14 18:17:56.899 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 18:17:56.899 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 18:17:56.899 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 18:17:56.900 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30a8cfff
☆ 2017-06-14 18:17:56.901 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 18:17:56.901 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 18:17:56.902 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 18:17:56.902 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 18:17:56.902 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 18:17:56.903 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 18:17:56.903 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 18:17:56.903 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 18:17:56.904 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 18:17:56.904 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 18:17:56.905 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@14cd5c87
☆ 2017-06-14 18:17:56.906 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 18:17:56.906 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 18:17:56.906 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 18:17:56.907 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 18:17:56.907 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 18:17:56.907 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 18:17:56.908 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@f3cd9c4
☆ 2017-06-14 18:17:56.908 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 18:17:56.908 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 18:17:56.909 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 18:17:56.909 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 18:17:56.909 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 18:17:56.910 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 18:17:56.910 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@60e92abf
☆ 2017-06-14 18:17:56.911 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@2c376fa2
☆ 2017-06-14 18:17:56.913 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 18:17:56.914 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 18:17:56.914 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11b52292
☆ 2017-06-14 18:17:56.917 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 18:17:56.917 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 18:17:56.919 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 18:17:56.919 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 18:17:56.919 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5013cc27
☆ 2017-06-14 18:17:56.922 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f98d316
☆ 2017-06-14 18:17:56.923 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@4f1eec54
☆ 2017-06-14 18:17:56.925 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 18:17:56.925 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 18:17:56.926 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@23250633
☆ 2017-06-14 18:17:56.926 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74fd2712
☆ 2017-06-14 18:17:56.926 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48456cd3
☆ 2017-06-14 18:17:56.926 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@798472b8
☆ 2017-06-14 18:17:56.926 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@729be725
☆ 2017-06-14 18:17:56.926 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6fc38bd3
☆ 2017-06-14 18:17:56.926 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c03510c
☆ 2017-06-14 18:17:56.926 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56c8e386
☆ 2017-06-14 18:17:56.934 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 18:17:56.936 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:17:56.936 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 18:17:56.936 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 18:17:56.939 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 18:17:56.939 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 18:17:57.085 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:17:57.085 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:17:57.085 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 18:17:57.094 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 18:17:57.113 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 18:17:57.169 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 18:17:57.169 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 18:17:57.170 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:17:57.170 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:17:57.170 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 18:17:57.171 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 18:17:57.171 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 18:17:57.172 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:17:57.172 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 18:17:57.173 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 18:17:57.173 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 18:17:57.173 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 18:17:57.174 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:17:57.174 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 18:17:57.195 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 18:17:57.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:17:57.229 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 18:17:57.233 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 18:17:57.237 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 18:17:57.260 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 18:17:57.263 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 18:17:57.264 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 18:17:57.265 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 18:17:57.266 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 18:17:57.270 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:17:57.270 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 18:17:57.270 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 18:17:57.270 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 18:17:57.270 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 18:17:57.271 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:17:57.271 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 18:17:57.271 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 18:17:57.271 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 18:17:57.271 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 18:17:57.272 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 18:17:57.272 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 18:17:57.272 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 18:17:57.273 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 18:17:57.296 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 18:17:57.297 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 18:17:57.297 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 18:17:57.297 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 18:17:57.297 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 18:17:57.297 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 18:17:57.297 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 18:17:57.297 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 18:17:57.297 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 18:17:57.297 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 18:17:57.298 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 18:17:57.298 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 18:17:57.298 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 18:17:57.298 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 18:17:57.298 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 18:17:57.298 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 18:17:57.298 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 18:17:57.298 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 18:17:57.298 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 18:17:57.298 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 18:17:57.299 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 18:17:57.299 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 18:17:57.299 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e4bae75
☆ 2017-06-14 18:17:57.299 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 18:17:57.299 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 18:17:57.299 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 18:17:57.299 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 18:17:57.299 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 18:17:57.299 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 18:17:57.299 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 18:17:57.300 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 18:17:57.300 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 18:17:57.300 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 18:17:57.300 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 18:17:57.300 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 18:17:57.300 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 18:17:57.333 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 18:17:57.334 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 18:17:57.335 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e2ffdd4, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 18:17:57.342 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 18:17:57.365 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:17:57.365 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:17:57.374 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:17:57.374 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:17:57.415 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:17:57.416 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 18:17:57.416 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 18:17:57.416 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 18:17:57.416 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 18:17:57.416 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 18:17:57.431 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68705d2f]
☆ 2017-06-14 18:17:57.432 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:17:57.432 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:17:57.432 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:17:57.442 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:17:57.445 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:17:57.447 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:17:57.447 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27c1bd81]
☆ 2017-06-14 18:17:57.447 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:17:57.447 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:17:57.448 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:17:57.448 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:17:57.448 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:17:57.448 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:17:57.448 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bbd1231]
☆ 2017-06-14 18:17:57.448 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:17:57.449 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:17:57.449 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:17:57.449 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:17:57.449 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:17:57.449 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:17:57.449 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22e9e3d5]
☆ 2017-06-14 18:17:57.449 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:17:57.450 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:17:57.450 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:17:57.450 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:17:57.450 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:17:57.450 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:17:57.451 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420f12c7]
☆ 2017-06-14 18:17:57.451 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:17:57.451 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:17:57.451 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:17:57.451 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:17:57.451 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:17:57.452 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:17:57.452 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54578247]
☆ 2017-06-14 18:17:57.452 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:17:57.452 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:17:57.452 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:17:57.452 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:17:57.453 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:17:57.453 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:17:57.453 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a02f760]
☆ 2017-06-14 18:17:57.453 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:17:57.453 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:17:57.454 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:17:57.454 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:17:57.454 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:17:57.454 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:17:57.454 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62fd39ce]
☆ 2017-06-14 18:17:57.455 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:17:57.455 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:17:57.455 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:17:57.455 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:17:57.455 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:17:57.455 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:17:57.456 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45861f91]
☆ 2017-06-14 18:17:57.456 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:17:57.456 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:17:57.456 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:17:57.456 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:17:57.456 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:17:57.457 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:17:57.457 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d9906c]
☆ 2017-06-14 18:17:57.457 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:17:57.457 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:17:57.457 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:17:57.457 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:17:57.458 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:17:57.458 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:17:57.458 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d3e0caf]
☆ 2017-06-14 18:17:57.458 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:17:57.458 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:17:57.458 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:17:57.459 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:17:57.459 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:17:57.459 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:17:57.471 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:17:57.471 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:17:57.471 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 18:17:57.473 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 18:17:57.491 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 18:17:57.493 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 18:17:57.493 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 18:17:57.495 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 18:17:57.495 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 18:17:57.496 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 18:17:57.497 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36898aa1
☆ 2017-06-14 18:17:57.498 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 52b1bc47-8440-46eb-ade8-d8fea5154e1b (<unnamed>)
☆ 2017-06-14 18:17:57.498 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 18:17:57.531 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 18:17:57.544 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 18:17:57.547 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 18:17:57.549 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:17:57.553 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:17:57.555 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:17:57.616 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 18:18:48.651 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 18:18:48.659 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:18:48.660 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:18:48.661 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:18:48.726 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 18:18:48.727 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 18:18:48.729 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 18:18:48.741 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 18:18:48.743 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 18:18:48.743 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 18:18:48.747 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 18:18:48.892 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:18:48.892 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:18:48.893 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:18:48.901 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 18:18:48.902 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 18:18:48.911 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 18:18:48.917 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 18:18:48.930 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:18:48.931 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:18:48.931 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:18:48.932 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 18:18:48.978 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 18:18:48.979 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 18:18:48.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:18:48.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:18:48.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:18:48.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:18:48.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:18:48.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:18:48.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:18:48.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:18:48.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:18:48.984 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:18:48.984 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:18:48.984 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:18:48.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:18:48.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:18:48.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:18:48.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:18:48.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:18:48.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:18:48.988 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:18:48.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:18:48.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:18:48.990 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:18:48.990 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:18:48.991 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:18:48.991 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:18:48.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:18:48.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:18:48.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 18:18:48.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 18:18:48.994 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:18:48.994 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:18:48.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:18:48.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:18:48.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:18:48.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:18:48.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:18:48.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:18:48.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:18:49.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 18:18:49.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:18:49.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:18:49.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:18:49.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 18:18:49.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:18:49.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:18:49.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:18:49.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:18:49.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:18:49.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:18:49.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:18:49.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:18:49.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:18:49.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:18:49.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 18:18:49.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:18:49.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:18:49.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:18:49.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:18:49.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:18:49.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:18:49.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 18:18:49.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:18:49.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:18:49.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:18:49.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:18:49.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:18:49.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:18:49.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 18:18:49.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 18:18:49.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:18:49.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:18:49.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 18:18:49.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:18:49.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:18:49.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:18:49.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:18:49.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 18:18:49.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 18:18:49.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 18:18:49.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:18:49.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:18:49.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 18:18:49.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 18:18:49.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 18:18:49.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 18:18:49.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 18:18:49.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 18:18:49.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 18:18:49.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 18:18:49.039 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 18:18:49.042 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:18:49.042 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 18:18:49.042 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 18:18:49.045 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 18:18:49.046 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 18:18:49.202 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:18:49.202 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:18:49.202 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 18:18:49.211 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 18:18:49.231 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 18:18:49.287 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 18:18:49.287 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 18:18:49.287 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:18:49.288 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:18:49.288 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 18:18:49.289 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 18:18:49.289 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 18:18:49.290 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:18:49.290 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 18:18:49.291 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 18:18:49.291 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 18:18:49.291 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 18:18:49.291 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:18:49.292 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 18:18:49.313 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 18:18:49.332 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:18:49.346 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 18:18:49.350 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 18:18:49.355 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 18:18:49.377 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 18:18:49.380 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 18:18:49.381 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 18:18:49.382 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 18:18:49.383 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 18:18:49.387 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:18:49.387 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 18:18:49.387 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 18:18:49.387 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 18:18:49.387 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 18:18:49.387 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:18:49.388 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 18:18:49.388 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 18:18:49.388 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 18:18:49.388 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 18:18:49.389 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 18:18:49.389 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 18:18:49.389 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 18:18:49.390 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 18:18:49.413 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 18:18:49.415 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 18:18:49.444 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 18:18:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 18:18:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 18:18:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 18:18:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 18:18:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 18:18:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 18:18:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 18:18:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 18:18:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 18:18:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 18:18:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 18:18:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 18:18:49.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 18:18:49.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 18:18:49.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 18:18:49.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 18:18:49.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 18:18:49.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 18:18:49.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 18:18:49.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 18:18:49.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 18:18:49.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 18:18:49.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 18:18:49.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 18:18:49.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 18:18:49.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 18:18:49.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 18:18:49.449 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 18:18:49.449 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 18:18:49.449 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 18:18:49.449 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 18:18:49.449 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 18:18:49.449 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 18:18:49.483 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 18:18:49.485 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 18:18:49.485 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 18:18:49.492 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 18:18:49.515 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:18:49.515 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:18:49.524 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:18:49.524 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:18:49.565 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:18:49.565 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 18:18:49.565 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 18:18:49.566 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 18:18:49.566 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 18:18:49.566 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 18:18:49.581 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 18:18:49.582 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:18:49.582 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:18:49.582 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:18:49.592 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:18:49.595 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:18:49.597 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:18:49.597 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 18:18:49.597 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:18:49.597 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:18:49.597 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:18:49.597 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:18:49.598 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:18:49.598 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:18:49.598 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 18:18:49.598 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:18:49.598 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:18:49.599 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:18:49.599 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:18:49.599 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:18:49.599 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:18:49.599 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 18:18:49.600 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:18:49.600 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:18:49.600 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:18:49.600 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:18:49.600 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:18:49.600 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:18:49.601 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 18:18:49.601 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:18:49.601 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:18:49.601 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:18:49.601 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:18:49.602 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:18:49.602 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:18:49.602 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 18:18:49.602 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:18:49.602 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:18:49.602 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:18:49.602 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:18:49.603 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:18:49.603 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:18:49.603 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 18:18:49.603 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:18:49.604 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:18:49.604 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:18:49.604 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:18:49.604 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:18:49.604 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:18:49.605 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 18:18:49.605 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:18:49.605 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:18:49.605 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:18:49.605 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:18:49.606 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:18:49.606 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:18:49.606 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 18:18:49.606 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:18:49.606 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:18:49.606 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:18:49.607 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:18:49.607 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:18:49.607 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:18:49.607 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 18:18:49.607 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:18:49.608 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:18:49.608 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:18:49.608 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:18:49.608 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:18:49.608 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:18:49.609 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 18:18:49.609 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:18:49.609 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:18:49.609 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:18:49.609 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:18:49.609 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:18:49.610 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:18:49.624 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:18:49.625 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:18:49.625 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 18:18:49.628 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 18:18:49.654 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 18:18:49.657 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 18:18:49.658 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 18:18:49.660 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 18:18:49.661 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 18:18:49.662 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 18:18:49.663 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 18:18:49.665 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 9d62e7c9-a05f-4720-bd09-2049606439c5 (<unnamed>)
☆ 2017-06-14 18:18:49.665 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 18:18:49.711 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 18:18:49.723 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 18:18:49.726 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 18:18:49.728 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:18:49.733 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:18:49.735 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:18:49.803 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 18:39:34.084 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 18:39:34.092 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:39:34.093 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:39:34.095 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:39:34.166 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 18:39:34.167 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 18:39:34.169 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 18:39:34.182 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 18:39:34.184 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 18:39:34.184 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 18:39:34.189 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 18:39:34.351 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:39:34.351 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:39:34.351 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:39:34.360 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 18:39:34.360 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 18:39:34.369 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 18:39:34.375 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 18:39:34.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 18:39:34.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 18:39:34.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 18:39:34.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45406ad9
☆ 2017-06-14 18:39:34.427 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@d203453
☆ 2017-06-14 18:39:34.427 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@1ddddd9e
☆ 2017-06-14 18:39:34.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 18:39:34.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 18:39:34.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 18:39:34.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 18:39:34.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 18:39:34.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 18:39:34.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 18:39:34.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 18:39:34.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 18:39:34.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 18:39:34.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 18:39:34.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 18:39:34.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 18:39:34.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 18:39:34.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 18:39:34.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 18:39:34.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 18:39:34.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 18:39:34.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 18:39:34.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 18:39:34.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 18:39:34.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 18:39:34.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 18:39:34.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 18:39:34.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 18:39:34.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 18:39:34.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 18:39:34.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@603f7723
☆ 2017-06-14 18:39:34.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11d57dc3
☆ 2017-06-14 18:39:34.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 18:39:34.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 18:39:34.445 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 18:39:34.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 18:39:34.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 18:39:34.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 18:39:34.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 18:39:34.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 18:39:34.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 18:39:34.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9cc13a
☆ 2017-06-14 18:39:34.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 18:39:34.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 18:39:34.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 18:39:34.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30a8cfff
☆ 2017-06-14 18:39:34.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 18:39:34.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 18:39:34.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 18:39:34.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 18:39:34.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 18:39:34.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 18:39:34.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 18:39:34.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 18:39:34.457 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 18:39:34.457 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 18:39:34.457 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@14cd5c87
☆ 2017-06-14 18:39:34.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 18:39:34.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 18:39:34.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 18:39:34.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 18:39:34.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 18:39:34.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 18:39:34.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@f3cd9c4
☆ 2017-06-14 18:39:34.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 18:39:34.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 18:39:34.461 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 18:39:34.461 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 18:39:34.461 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 18:39:34.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 18:39:34.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@60e92abf
☆ 2017-06-14 18:39:34.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@2c376fa2
☆ 2017-06-14 18:39:34.465 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 18:39:34.465 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 18:39:34.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11b52292
☆ 2017-06-14 18:39:34.468 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 18:39:34.468 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 18:39:34.470 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 18:39:34.470 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 18:39:34.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5013cc27
☆ 2017-06-14 18:39:34.473 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f98d316
☆ 2017-06-14 18:39:34.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@4f1eec54
☆ 2017-06-14 18:39:34.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 18:39:34.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 18:39:34.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@23250633
☆ 2017-06-14 18:39:34.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74fd2712
☆ 2017-06-14 18:39:34.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48456cd3
☆ 2017-06-14 18:39:34.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@798472b8
☆ 2017-06-14 18:39:34.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@729be725
☆ 2017-06-14 18:39:34.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6fc38bd3
☆ 2017-06-14 18:39:34.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c03510c
☆ 2017-06-14 18:39:34.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56c8e386
☆ 2017-06-14 18:39:34.485 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 18:39:34.487 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:39:34.488 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 18:39:34.488 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 18:39:34.490 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 18:39:34.491 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 18:39:34.634 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:39:34.635 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:39:34.635 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 18:39:34.644 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 18:39:34.665 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 18:39:34.735 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 18:39:34.736 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 18:39:34.737 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:39:34.737 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:39:34.737 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 18:39:34.738 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 18:39:34.738 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 18:39:34.739 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:39:34.740 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 18:39:34.741 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 18:39:34.741 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 18:39:34.742 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 18:39:34.742 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:39:34.743 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 18:39:34.764 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 18:39:34.784 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:39:34.798 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 18:39:34.802 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 18:39:34.807 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 18:39:34.831 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 18:39:34.835 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 18:39:34.837 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 18:39:34.837 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 18:39:34.839 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 18:39:34.843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:39:34.843 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 18:39:34.843 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 18:39:34.843 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 18:39:34.843 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 18:39:34.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:39:34.844 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 18:39:34.844 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 18:39:34.844 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 18:39:34.844 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 18:39:34.845 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 18:39:34.845 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 18:39:34.846 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 18:39:34.847 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 18:39:34.869 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 18:39:34.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 18:39:34.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 18:39:34.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 18:39:34.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 18:39:34.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 18:39:34.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 18:39:34.871 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 18:39:34.871 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 18:39:34.871 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 18:39:34.871 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 18:39:34.871 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 18:39:34.871 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 18:39:34.871 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 18:39:34.871 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 18:39:34.872 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 18:39:34.872 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 18:39:34.872 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 18:39:34.872 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 18:39:34.872 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 18:39:34.872 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 18:39:34.872 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 18:39:34.872 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e4bae75
☆ 2017-06-14 18:39:34.872 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 18:39:34.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 18:39:34.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 18:39:34.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 18:39:34.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 18:39:34.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 18:39:34.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 18:39:34.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 18:39:34.873 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 18:39:34.874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 18:39:34.874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 18:39:34.874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 18:39:34.874 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 18:39:34.906 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 18:39:34.908 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 18:39:34.908 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e2ffdd4, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 18:39:34.916 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 18:39:34.938 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:39:34.938 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:39:34.947 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:39:34.947 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:39:34.988 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:39:34.988 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 18:39:34.988 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 18:39:34.988 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 18:39:34.988 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 18:39:34.988 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 18:39:35.003 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68705d2f]
☆ 2017-06-14 18:39:35.004 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:39:35.004 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:39:35.004 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:39:35.014 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:39:35.018 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:39:35.019 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:39:35.020 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27c1bd81]
☆ 2017-06-14 18:39:35.020 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:39:35.020 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:39:35.020 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:39:35.020 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:39:35.020 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:39:35.021 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:39:35.021 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bbd1231]
☆ 2017-06-14 18:39:35.021 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:39:35.021 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:39:35.021 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:39:35.021 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:39:35.022 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:39:35.022 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:39:35.022 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22e9e3d5]
☆ 2017-06-14 18:39:35.022 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:39:35.022 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:39:35.022 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:39:35.022 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:39:35.023 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:39:35.023 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:39:35.023 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420f12c7]
☆ 2017-06-14 18:39:35.023 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:39:35.023 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:39:35.023 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:39:35.024 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:39:35.024 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:39:35.024 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:39:35.024 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54578247]
☆ 2017-06-14 18:39:35.024 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:39:35.024 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:39:35.024 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:39:35.025 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:39:35.025 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:39:35.025 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:39:35.025 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a02f760]
☆ 2017-06-14 18:39:35.025 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:39:35.026 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:39:35.026 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:39:35.026 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:39:35.027 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:39:35.027 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:39:35.027 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62fd39ce]
☆ 2017-06-14 18:39:35.027 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:39:35.027 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:39:35.027 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:39:35.027 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:39:35.028 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:39:35.028 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:39:35.028 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45861f91]
☆ 2017-06-14 18:39:35.028 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:39:35.028 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:39:35.028 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:39:35.028 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:39:35.029 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:39:35.029 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:39:35.029 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d9906c]
☆ 2017-06-14 18:39:35.029 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:39:35.029 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:39:35.029 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:39:35.030 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:39:35.030 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:39:35.030 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:39:35.030 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d3e0caf]
☆ 2017-06-14 18:39:35.031 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:39:35.031 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:39:35.031 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:39:35.031 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:39:35.031 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:39:35.031 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:39:35.046 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:39:35.046 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:39:35.046 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 18:39:35.049 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 18:39:35.070 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 18:39:35.073 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 18:39:35.074 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 18:39:35.076 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 18:39:35.077 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 18:39:35.077 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 18:39:35.079 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36898aa1
☆ 2017-06-14 18:39:35.080 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: d223cd99-c525-4e3c-ab73-1cfbf976457b (<unnamed>)
☆ 2017-06-14 18:39:35.081 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 18:39:35.115 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 18:39:35.127 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 18:39:35.130 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 18:39:35.132 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:39:35.137 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:39:35.138 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:39:35.208 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 18:40:48.672 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 18:40:48.679 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:40:48.680 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:40:48.682 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:40:48.747 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 18:40:48.748 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 18:40:48.749 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 18:40:48.762 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 18:40:48.764 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 18:40:48.764 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 18:40:48.767 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 18:40:48.911 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:40:48.912 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:40:48.912 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:40:48.920 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 18:40:48.921 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 18:40:48.930 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 18:40:48.936 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 18:40:48.950 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:40:48.950 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:40:48.950 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:40:48.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 18:40:48.952 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 18:40:48.952 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 18:40:48.994 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:40:48.995 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:40:48.995 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:40:48.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:40:48.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:40:48.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:40:48.998 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:40:48.998 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:40:48.998 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:40:48.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:40:48.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:40:49.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:40:49.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:40:49.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:40:49.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:40:49.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:40:49.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:40:49.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:40:49.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:40:49.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:40:49.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:40:49.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:40:49.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:40:49.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:40:49.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:40:49.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:40:49.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:40:49.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 18:40:49.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 18:40:49.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:40:49.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:40:49.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:40:49.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:40:49.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:40:49.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:40:49.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:40:49.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:40:49.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:40:49.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 18:40:49.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:40:49.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:40:49.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:40:49.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 18:40:49.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:40:49.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:40:49.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:40:49.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:40:49.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:40:49.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:40:49.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:40:49.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:40:49.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:40:49.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:40:49.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 18:40:49.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:40:49.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:40:49.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:40:49.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:40:49.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:40:49.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:40:49.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 18:40:49.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:40:49.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:40:49.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:40:49.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:40:49.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:40:49.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:40:49.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 18:40:49.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 18:40:49.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:40:49.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:40:49.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 18:40:49.033 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:40:49.033 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:40:49.035 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:40:49.036 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:40:49.036 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 18:40:49.039 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 18:40:49.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 18:40:49.042 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:40:49.042 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:40:49.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 18:40:49.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 18:40:49.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 18:40:49.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 18:40:49.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 18:40:49.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 18:40:49.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 18:40:49.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 18:40:49.051 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 18:40:49.053 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:40:49.054 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 18:40:49.054 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 18:40:49.056 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 18:40:49.056 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 18:40:49.198 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:40:49.198 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:40:49.199 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 18:40:49.207 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 18:40:49.226 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 18:40:49.282 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 18:40:49.282 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 18:40:49.283 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:40:49.283 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:40:49.283 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 18:40:49.284 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 18:40:49.284 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 18:40:49.285 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:40:49.286 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 18:40:49.286 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 18:40:49.286 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 18:40:49.287 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 18:40:49.287 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:40:49.288 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 18:40:49.309 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 18:40:49.327 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:40:49.343 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 18:40:49.378 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 18:40:49.382 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 18:40:49.405 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 18:40:49.408 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 18:40:49.409 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 18:40:49.410 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 18:40:49.412 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 18:40:49.415 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:40:49.416 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 18:40:49.416 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 18:40:49.416 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 18:40:49.416 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 18:40:49.416 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:40:49.416 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 18:40:49.417 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 18:40:49.417 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 18:40:49.417 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 18:40:49.418 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 18:40:49.418 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 18:40:49.418 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 18:40:49.419 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 18:40:49.442 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 18:40:49.443 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 18:40:49.443 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 18:40:49.443 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 18:40:49.443 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 18:40:49.443 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 18:40:49.443 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 18:40:49.443 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 18:40:49.443 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 18:40:49.444 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 18:40:49.444 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 18:40:49.444 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 18:40:49.444 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 18:40:49.444 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 18:40:49.444 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 18:40:49.444 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 18:40:49.444 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 18:40:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 18:40:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 18:40:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 18:40:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 18:40:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 18:40:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 18:40:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 18:40:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 18:40:49.445 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 18:40:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 18:40:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 18:40:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 18:40:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 18:40:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 18:40:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 18:40:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 18:40:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 18:40:49.446 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 18:40:49.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 18:40:49.478 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 18:40:49.480 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 18:40:49.480 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 18:40:49.488 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 18:40:49.510 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:40:49.510 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:40:49.519 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:40:49.519 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:40:49.559 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:40:49.559 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 18:40:49.559 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 18:40:49.559 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 18:40:49.559 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 18:40:49.559 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 18:40:49.574 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 18:40:49.575 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:40:49.575 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:40:49.575 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:40:49.585 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:40:49.588 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:40:49.590 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:40:49.590 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 18:40:49.591 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:40:49.591 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:40:49.591 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:40:49.591 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:40:49.591 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:40:49.592 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:40:49.592 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 18:40:49.592 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:40:49.592 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:40:49.592 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:40:49.592 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:40:49.593 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:40:49.593 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:40:49.593 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 18:40:49.593 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:40:49.593 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:40:49.593 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:40:49.593 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:40:49.594 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:40:49.594 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:40:49.594 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 18:40:49.594 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:40:49.594 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:40:49.594 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:40:49.595 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:40:49.595 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:40:49.595 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:40:49.595 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 18:40:49.595 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:40:49.595 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:40:49.595 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:40:49.596 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:40:49.596 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:40:49.596 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:40:49.596 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 18:40:49.597 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:40:49.597 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:40:49.597 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:40:49.597 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:40:49.598 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:40:49.598 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:40:49.598 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 18:40:49.598 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:40:49.598 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:40:49.598 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:40:49.598 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:40:49.599 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:40:49.599 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:40:49.599 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 18:40:49.599 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:40:49.599 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:40:49.599 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:40:49.600 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:40:49.600 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:40:49.600 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:40:49.600 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 18:40:49.601 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:40:49.601 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:40:49.601 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:40:49.601 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:40:49.601 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:40:49.601 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:40:49.602 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 18:40:49.602 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:40:49.602 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:40:49.602 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:40:49.602 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:40:49.603 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:40:49.603 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:40:49.615 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:40:49.615 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:40:49.616 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 18:40:49.618 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 18:40:49.636 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 18:40:49.639 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 18:40:49.639 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 18:40:49.641 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 18:40:49.641 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 18:40:49.642 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 18:40:49.643 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 18:40:49.644 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: b3bdab33-3ef0-460c-96d3-9365f5a863f3 (<unnamed>)
☆ 2017-06-14 18:40:49.644 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 18:40:49.678 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 18:40:49.691 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 18:40:49.694 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 18:40:49.695 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:40:49.701 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:40:49.702 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:40:49.765 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 18:43:23.464 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 18:43:23.472 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:43:23.473 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:43:23.475 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:43:23.541 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 18:43:23.542 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 18:43:23.543 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 18:43:23.556 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 18:43:23.558 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 18:43:23.558 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 18:43:23.562 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 18:43:23.705 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:43:23.706 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:43:23.706 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:43:23.714 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 18:43:23.715 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 18:43:23.724 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 18:43:23.730 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 18:43:23.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:43:23.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:43:23.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:43:23.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 18:43:23.785 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 18:43:23.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 18:43:23.787 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:43:23.787 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:43:23.787 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:43:23.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:43:23.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:43:23.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:43:23.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:43:23.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:43:23.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:43:23.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:43:23.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:43:23.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:43:23.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:43:23.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:43:23.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:43:23.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:43:23.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:43:23.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:43:23.795 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:43:23.795 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:43:23.795 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:43:23.796 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:43:23.796 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:43:23.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:43:23.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:43:23.798 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:43:23.798 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:43:23.799 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 18:43:23.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 18:43:23.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:43:23.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:43:23.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:43:23.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:43:23.803 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:43:23.803 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:43:23.804 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:43:23.804 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:43:23.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:43:23.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 18:43:23.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:43:23.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:43:23.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:43:23.808 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 18:43:23.808 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:43:23.808 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:43:23.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:43:23.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:43:23.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:43:23.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:43:23.811 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:43:23.811 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:43:23.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:43:23.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:43:23.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 18:43:23.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:43:23.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:43:23.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:43:23.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:43:23.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:43:23.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:43:23.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 18:43:23.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:43:23.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:43:23.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:43:23.817 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:43:23.817 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:43:23.817 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:43:23.818 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 18:43:23.818 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 18:43:23.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:43:23.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:43:23.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 18:43:23.824 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:43:23.824 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:43:23.826 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:43:23.827 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:43:23.827 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 18:43:23.830 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 18:43:23.831 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 18:43:23.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:43:23.834 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:43:23.834 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 18:43:23.834 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 18:43:23.834 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 18:43:23.834 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 18:43:23.835 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 18:43:23.835 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 18:43:23.835 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 18:43:23.835 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 18:43:23.842 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 18:43:23.844 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:43:23.845 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 18:43:23.845 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 18:43:23.847 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 18:43:23.847 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 18:43:23.996 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:43:23.996 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:43:23.996 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 18:43:24.005 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 18:43:24.024 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 18:43:24.080 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 18:43:24.080 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 18:43:24.081 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:43:24.081 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:43:24.081 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 18:43:24.082 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 18:43:24.082 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 18:43:24.083 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:43:24.084 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 18:43:24.084 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 18:43:24.084 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 18:43:24.085 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 18:43:24.085 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:43:24.085 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 18:43:24.107 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 18:43:24.126 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:43:24.140 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 18:43:24.144 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 18:43:24.148 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 18:43:24.171 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 18:43:24.174 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 18:43:24.175 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 18:43:24.176 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 18:43:24.177 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 18:43:24.180 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:43:24.181 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 18:43:24.181 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 18:43:24.181 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 18:43:24.181 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 18:43:24.181 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:43:24.181 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 18:43:24.181 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 18:43:24.182 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 18:43:24.182 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 18:43:24.182 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 18:43:24.183 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 18:43:24.183 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 18:43:24.184 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 18:43:24.206 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 18:43:24.207 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 18:43:24.207 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 18:43:24.207 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 18:43:24.207 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 18:43:24.208 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 18:43:24.208 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 18:43:24.208 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 18:43:24.208 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 18:43:24.208 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 18:43:24.208 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 18:43:24.208 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 18:43:24.208 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 18:43:24.208 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 18:43:24.208 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 18:43:24.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 18:43:24.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 18:43:24.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 18:43:24.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 18:43:24.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 18:43:24.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 18:43:24.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 18:43:24.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 18:43:24.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 18:43:24.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 18:43:24.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 18:43:24.210 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 18:43:24.210 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 18:43:24.210 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 18:43:24.210 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 18:43:24.210 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 18:43:24.210 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 18:43:24.210 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 18:43:24.210 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 18:43:24.210 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 18:43:24.210 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 18:43:24.242 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 18:43:24.243 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 18:43:24.243 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 18:43:24.250 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 18:43:24.273 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:43:24.273 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:43:24.282 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:43:24.282 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:43:24.322 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:43:24.323 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 18:43:24.323 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 18:43:24.323 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 18:43:24.323 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 18:43:24.323 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 18:43:24.338 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 18:43:24.339 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:43:24.339 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:43:24.339 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:43:24.348 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:43:24.352 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:43:24.353 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:43:24.354 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 18:43:24.354 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:43:24.354 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:43:24.354 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:43:24.354 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:43:24.354 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:43:24.354 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:43:24.355 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 18:43:24.355 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:43:24.355 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:43:24.355 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:43:24.355 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:43:24.355 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:43:24.355 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:43:24.356 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 18:43:24.356 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:43:24.356 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:43:24.356 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:43:24.356 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:43:24.356 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:43:24.356 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:43:24.356 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 18:43:24.357 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:43:24.357 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:43:24.357 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:43:24.357 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:43:24.357 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:43:24.357 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:43:24.357 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 18:43:24.358 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:43:24.358 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:43:24.358 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:43:24.358 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:43:24.358 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:43:24.358 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:43:24.358 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 18:43:24.359 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:43:24.359 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:43:24.359 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:43:24.359 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:43:24.359 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:43:24.359 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:43:24.360 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 18:43:24.360 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:43:24.360 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:43:24.360 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:43:24.360 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:43:24.360 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:43:24.360 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:43:24.361 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 18:43:24.361 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:43:24.361 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:43:24.361 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:43:24.361 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:43:24.361 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:43:24.361 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:43:24.361 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 18:43:24.362 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:43:24.362 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:43:24.362 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:43:24.362 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:43:24.362 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:43:24.362 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:43:24.362 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 18:43:24.371 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:43:24.371 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:43:24.371 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:43:24.371 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:43:24.372 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:43:24.372 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:43:24.384 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:43:24.384 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:43:24.384 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 18:43:24.386 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 18:43:24.404 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 18:43:24.406 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 18:43:24.406 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 18:43:24.408 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 18:43:24.408 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 18:43:24.408 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 18:43:24.410 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 18:43:24.411 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 68444249-5dc8-496f-b2df-a76bc8f967f1 (<unnamed>)
☆ 2017-06-14 18:43:24.411 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 18:43:24.445 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 18:43:24.458 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 18:43:24.461 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 18:43:24.463 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:43:24.468 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:43:24.470 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:43:24.531 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 18:43:53.993 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-14 18:45:33.091 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 18:45:33.099 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:45:33.100 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:45:33.102 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:45:33.169 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 18:45:33.170 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 18:45:33.171 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 18:45:33.184 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 18:45:33.185 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 18:45:33.185 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 18:45:33.189 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 18:45:33.354 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:45:33.355 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:45:33.355 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:45:33.364 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 18:45:33.364 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 18:45:33.373 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 18:45:33.379 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 18:45:33.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:45:33.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:45:33.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:45:33.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 18:45:33.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 18:45:33.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 18:45:33.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:45:33.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:45:33.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:45:33.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:45:33.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:45:33.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:45:33.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:45:33.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:45:33.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:45:33.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:45:33.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:45:33.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:45:33.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:45:33.445 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:45:33.445 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:45:33.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:45:33.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:45:33.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:45:33.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:45:33.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:45:33.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:45:33.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:45:33.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:45:33.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:45:33.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:45:33.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:45:33.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:45:33.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 18:45:33.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 18:45:33.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:45:33.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:45:33.457 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:45:33.457 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:45:33.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:45:33.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:45:33.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:45:33.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:45:33.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:45:33.461 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 18:45:33.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:45:33.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:45:33.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:45:33.463 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 18:45:33.463 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:45:33.464 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:45:33.464 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:45:33.464 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:45:33.465 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:45:33.465 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:45:33.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:45:33.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:45:33.467 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:45:33.467 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:45:33.467 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 18:45:33.468 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:45:33.468 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:45:33.468 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:45:33.469 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:45:33.469 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:45:33.469 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:45:33.470 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 18:45:33.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:45:33.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:45:33.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:45:33.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:45:33.472 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:45:33.472 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:45:33.472 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 18:45:33.473 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 18:45:33.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:45:33.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:45:33.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 18:45:33.479 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:45:33.479 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:45:33.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:45:33.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:45:33.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 18:45:33.484 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 18:45:33.485 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 18:45:33.487 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:45:33.487 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:45:33.487 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 18:45:33.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 18:45:33.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 18:45:33.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 18:45:33.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 18:45:33.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 18:45:33.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 18:45:33.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 18:45:33.499 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 18:45:33.502 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:45:33.503 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 18:45:33.503 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 18:45:33.506 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 18:45:33.506 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 18:45:33.656 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:45:33.656 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:45:33.656 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 18:45:33.665 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 18:45:33.684 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 18:45:33.740 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 18:45:33.740 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 18:45:33.741 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:45:33.741 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:45:33.741 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 18:45:33.742 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 18:45:33.742 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 18:45:33.743 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:45:33.743 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 18:45:33.744 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 18:45:33.744 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 18:45:33.744 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 18:45:33.745 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:45:33.745 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 18:45:33.767 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 18:45:33.786 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:45:33.800 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 18:45:33.804 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 18:45:33.808 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 18:45:33.831 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 18:45:33.833 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 18:45:33.835 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 18:45:33.836 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 18:45:33.837 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 18:45:33.840 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:45:33.840 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 18:45:33.841 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 18:45:33.841 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 18:45:33.841 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 18:45:33.841 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:45:33.841 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 18:45:33.841 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 18:45:33.841 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 18:45:33.841 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 18:45:33.842 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 18:45:33.842 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 18:45:33.843 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 18:45:33.844 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 18:45:33.866 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 18:45:33.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 18:45:33.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 18:45:33.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 18:45:33.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 18:45:33.867 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 18:45:33.868 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 18:45:33.868 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 18:45:33.868 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 18:45:33.868 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 18:45:33.868 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 18:45:33.868 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 18:45:33.868 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 18:45:33.868 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 18:45:33.868 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 18:45:33.868 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 18:45:33.868 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 18:45:33.869 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 18:45:33.869 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 18:45:33.869 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 18:45:33.869 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 18:45:33.869 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 18:45:33.869 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 18:45:33.869 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 18:45:33.869 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 18:45:33.869 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 18:45:33.869 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 18:45:33.869 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 18:45:33.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 18:45:33.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 18:45:33.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 18:45:33.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 18:45:33.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 18:45:33.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 18:45:33.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 18:45:33.870 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 18:45:33.902 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 18:45:33.903 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 18:45:33.904 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 18:45:33.911 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 18:45:33.933 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:45:33.933 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:45:33.942 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:45:33.942 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:45:33.983 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:45:33.983 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 18:45:33.983 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 18:45:33.983 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 18:45:33.983 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 18:45:33.983 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 18:45:33.998 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 18:45:33.999 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:45:33.999 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:45:33.999 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:45:34.009 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:45:34.012 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:45:34.014 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:45:34.014 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 18:45:34.014 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:45:34.014 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:45:34.015 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:45:34.015 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:45:34.015 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:45:34.015 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:45:34.015 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 18:45:34.015 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:45:34.015 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:45:34.016 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:45:34.016 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:45:34.016 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:45:34.016 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:45:34.016 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 18:45:34.016 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:45:34.016 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:45:34.017 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:45:34.017 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:45:34.017 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:45:34.017 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:45:34.017 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 18:45:34.017 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:45:34.017 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:45:34.017 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:45:34.018 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:45:34.018 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:45:34.018 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:45:34.018 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 18:45:34.018 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:45:34.018 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:45:34.018 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:45:34.019 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:45:34.019 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:45:34.019 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:45:34.019 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 18:45:34.019 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:45:34.019 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:45:34.020 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:45:34.020 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:45:34.020 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:45:34.020 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:45:34.020 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 18:45:34.020 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:45:34.020 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:45:34.020 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:45:34.021 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:45:34.021 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:45:34.021 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:45:34.021 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 18:45:34.021 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:45:34.021 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:45:34.021 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:45:34.022 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:45:34.022 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:45:34.022 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:45:34.022 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 18:45:34.022 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:45:34.022 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:45:34.022 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:45:34.023 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:45:34.023 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:45:34.023 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:45:34.023 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 18:45:34.023 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:45:34.023 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:45:34.023 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:45:34.024 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:45:34.024 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:45:34.024 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:45:34.036 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:45:34.037 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:45:34.037 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 18:45:34.039 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 18:45:34.057 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 18:45:34.059 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 18:45:34.060 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 18:45:34.061 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 18:45:34.062 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 18:45:34.062 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 18:45:34.063 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 18:45:34.065 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 5ecaf192-259c-4993-80d3-951ecb03b096 (<unnamed>)
☆ 2017-06-14 18:45:34.065 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 18:45:34.099 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 18:45:34.112 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 18:45:34.115 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 18:45:34.117 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:45:34.122 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:45:34.124 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:45:34.186 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 18:46:28.494 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 18:46:28.502 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:46:28.503 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:46:28.505 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:46:28.568 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 18:46:28.569 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 18:46:28.571 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 18:46:28.583 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 18:46:28.585 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 18:46:28.585 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 18:46:28.589 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 18:46:28.733 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:46:28.733 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:46:28.733 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:46:28.742 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 18:46:28.742 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 18:46:28.751 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 18:46:28.757 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 18:46:28.771 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:46:28.771 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:46:28.771 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:46:28.772 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 18:46:28.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 18:46:28.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 18:46:28.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:46:28.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:46:28.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:46:28.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:46:28.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:46:28.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:46:28.817 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:46:28.818 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:46:28.818 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:46:28.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:46:28.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:46:28.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:46:28.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:46:28.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:46:28.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:46:28.823 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:46:28.823 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:46:28.823 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:46:28.824 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:46:28.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:46:28.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:46:28.826 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:46:28.827 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:46:28.828 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:46:28.828 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:46:28.829 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:46:28.829 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:46:28.830 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 18:46:28.831 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 18:46:28.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:46:28.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:46:28.834 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:46:28.834 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:46:28.836 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:46:28.836 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:46:28.837 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:46:28.838 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:46:28.838 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:46:28.839 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 18:46:28.840 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:46:28.840 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:46:28.840 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:46:28.841 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 18:46:28.842 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:46:28.842 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:46:28.843 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:46:28.843 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:46:28.843 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:46:28.844 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:46:28.844 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:46:28.844 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:46:28.845 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:46:28.845 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:46:28.846 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 18:46:28.847 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:46:28.847 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:46:28.847 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:46:28.848 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:46:28.848 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:46:28.848 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:46:28.849 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 18:46:28.849 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:46:28.849 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:46:28.849 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:46:28.850 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:46:28.850 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:46:28.851 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:46:28.851 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 18:46:28.852 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 18:46:28.854 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:46:28.854 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:46:28.855 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 18:46:28.857 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:46:28.857 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:46:28.859 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:46:28.860 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:46:28.860 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 18:46:28.860 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 18:46:28.861 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 18:46:28.863 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:46:28.863 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:46:28.864 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 18:46:28.864 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 18:46:28.864 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 18:46:28.864 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 18:46:28.864 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 18:46:28.864 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 18:46:28.864 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 18:46:28.865 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 18:46:28.872 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 18:46:28.874 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:46:28.875 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 18:46:28.875 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 18:46:28.877 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 18:46:28.877 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 18:46:29.019 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:46:29.020 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:46:29.020 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 18:46:29.028 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 18:46:29.048 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 18:46:29.103 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 18:46:29.104 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 18:46:29.104 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:46:29.104 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:46:29.105 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 18:46:29.105 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 18:46:29.106 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 18:46:29.106 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:46:29.107 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 18:46:29.107 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 18:46:29.108 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 18:46:29.108 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 18:46:29.108 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:46:29.109 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 18:46:29.130 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 18:46:29.151 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:46:29.286 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 18:46:29.290 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 18:46:29.295 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 18:46:29.318 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 18:46:29.320 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 18:46:29.322 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 18:46:29.323 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 18:46:29.324 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 18:46:29.327 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:46:29.327 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 18:46:29.328 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 18:46:29.328 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 18:46:29.328 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 18:46:29.328 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:46:29.328 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 18:46:29.328 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 18:46:29.328 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 18:46:29.329 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 18:46:29.329 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 18:46:29.330 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 18:46:29.330 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 18:46:29.331 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 18:46:29.353 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 18:46:29.354 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 18:46:29.354 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 18:46:29.354 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 18:46:29.354 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 18:46:29.354 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 18:46:29.354 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 18:46:29.355 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 18:46:29.355 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 18:46:29.355 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 18:46:29.355 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 18:46:29.355 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 18:46:29.355 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 18:46:29.355 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 18:46:29.355 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 18:46:29.355 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 18:46:29.355 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 18:46:29.355 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 18:46:29.356 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 18:46:29.356 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 18:46:29.356 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 18:46:29.356 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 18:46:29.356 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 18:46:29.356 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 18:46:29.356 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 18:46:29.356 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 18:46:29.356 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 18:46:29.356 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 18:46:29.356 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 18:46:29.357 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 18:46:29.357 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 18:46:29.357 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 18:46:29.357 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 18:46:29.357 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 18:46:29.357 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 18:46:29.357 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 18:46:29.389 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 18:46:29.390 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 18:46:29.390 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 18:46:29.400 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 18:46:29.422 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:46:29.422 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:46:29.431 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:46:29.431 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:46:29.472 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:46:29.472 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 18:46:29.472 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 18:46:29.472 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 18:46:29.472 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 18:46:29.472 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 18:46:29.486 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 18:46:29.487 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:46:29.487 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:46:29.488 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:46:29.497 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:46:29.501 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:46:29.502 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:46:29.502 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 18:46:29.502 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:46:29.503 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:46:29.503 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:46:29.503 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:46:29.503 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:46:29.503 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:46:29.503 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 18:46:29.504 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:46:29.504 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:46:29.504 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:46:29.504 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:46:29.504 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:46:29.504 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:46:29.504 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 18:46:29.504 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:46:29.505 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:46:29.505 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:46:29.505 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:46:29.505 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:46:29.505 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:46:29.505 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 18:46:29.505 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:46:29.506 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:46:29.506 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:46:29.506 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:46:29.506 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:46:29.506 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:46:29.506 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 18:46:29.506 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:46:29.506 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:46:29.507 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:46:29.507 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:46:29.507 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:46:29.507 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:46:29.507 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 18:46:29.507 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:46:29.508 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:46:29.508 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:46:29.508 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:46:29.508 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:46:29.508 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:46:29.508 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 18:46:29.509 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:46:29.509 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:46:29.509 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:46:29.509 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:46:29.509 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:46:29.509 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:46:29.509 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 18:46:29.510 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:46:29.510 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:46:29.510 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:46:29.510 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:46:29.510 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:46:29.510 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:46:29.511 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 18:46:29.511 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:46:29.511 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:46:29.511 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:46:29.511 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:46:29.511 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:46:29.511 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:46:29.511 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 18:46:29.512 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:46:29.512 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:46:29.512 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:46:29.512 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:46:29.512 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:46:29.512 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:46:29.524 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:46:29.524 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:46:29.524 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 18:46:29.526 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 18:46:29.543 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 18:46:29.546 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 18:46:29.546 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 18:46:29.547 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 18:46:29.548 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 18:46:29.548 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 18:46:29.549 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 18:46:29.551 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 0b927d53-e0a1-47c5-8815-8a3b62bde0df (<unnamed>)
☆ 2017-06-14 18:46:29.551 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 18:46:29.583 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 18:46:29.595 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 18:46:29.598 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 18:46:29.600 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:46:29.604 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:46:29.606 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:46:29.666 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 18:46:43.597 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 18:46:43.597 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 18:46:43.597 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:46:43.599 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 18:47:22.710 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 18:47:22.717 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:47:22.719 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:47:22.720 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:47:22.789 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 18:47:22.790 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 18:47:22.791 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 18:47:22.805 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 18:47:22.806 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 18:47:22.807 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 18:47:22.811 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 18:47:22.971 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:47:22.971 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:47:22.971 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:47:22.980 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 18:47:22.981 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 18:47:22.990 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 18:47:22.995 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 18:47:23.050 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:47:23.050 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:47:23.050 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:47:23.051 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 18:47:23.051 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 18:47:23.052 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 18:47:23.053 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:47:23.053 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:47:23.053 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:47:23.054 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:47:23.054 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:47:23.054 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:47:23.055 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:47:23.055 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:47:23.056 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:47:23.057 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:47:23.057 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:47:23.057 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:47:23.058 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:47:23.058 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:47:23.058 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:47:23.060 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:47:23.060 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:47:23.060 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:47:23.061 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:47:23.061 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:47:23.061 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:47:23.062 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:47:23.063 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:47:23.063 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:47:23.064 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:47:23.064 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:47:23.064 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:47:23.065 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 18:47:23.066 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 18:47:23.067 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:47:23.067 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:47:23.068 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:47:23.068 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:47:23.069 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:47:23.070 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:47:23.071 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:47:23.071 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:47:23.071 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:47:23.072 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 18:47:23.073 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:47:23.073 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:47:23.073 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:47:23.074 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 18:47:23.074 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:47:23.075 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:47:23.075 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:47:23.075 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:47:23.076 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:47:23.076 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:47:23.077 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:47:23.077 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:47:23.078 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:47:23.078 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:47:23.078 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 18:47:23.079 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:47:23.079 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:47:23.079 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:47:23.080 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:47:23.080 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:47:23.080 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:47:23.081 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 18:47:23.082 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:47:23.082 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:47:23.082 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:47:23.083 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:47:23.083 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:47:23.083 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:47:23.083 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 18:47:23.084 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 18:47:23.087 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:47:23.087 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:47:23.087 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 18:47:23.090 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:47:23.090 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:47:23.092 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:47:23.092 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:47:23.092 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 18:47:23.095 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 18:47:23.096 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 18:47:23.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:47:23.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:47:23.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 18:47:23.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 18:47:23.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 18:47:23.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 18:47:23.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 18:47:23.100 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 18:47:23.100 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 18:47:23.100 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 18:47:23.107 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 18:47:23.109 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:47:23.110 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 18:47:23.110 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 18:47:23.112 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 18:47:23.112 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 18:47:23.260 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:47:23.260 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:47:23.260 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 18:47:23.269 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 18:47:23.289 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 18:47:23.345 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 18:47:23.345 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 18:47:23.346 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:47:23.346 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:47:23.346 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 18:47:23.347 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 18:47:23.347 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 18:47:23.348 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:47:23.349 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 18:47:23.349 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 18:47:23.349 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 18:47:23.350 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 18:47:23.350 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:47:23.351 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 18:47:23.372 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 18:47:23.391 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:47:23.405 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 18:47:23.410 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 18:47:23.414 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 18:47:23.437 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 18:47:23.439 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 18:47:23.441 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 18:47:23.442 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 18:47:23.443 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 18:47:23.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:47:23.447 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 18:47:23.447 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 18:47:23.447 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 18:47:23.447 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 18:47:23.447 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:47:23.448 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 18:47:23.448 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 18:47:23.448 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 18:47:23.448 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 18:47:23.449 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 18:47:23.449 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 18:47:23.449 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 18:47:23.450 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 18:47:23.473 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 18:47:23.474 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 18:47:23.474 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 18:47:23.474 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 18:47:23.474 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 18:47:23.474 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 18:47:23.474 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 18:47:23.474 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 18:47:23.474 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 18:47:23.475 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 18:47:23.475 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 18:47:23.475 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 18:47:23.475 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 18:47:23.475 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 18:47:23.475 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 18:47:23.475 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 18:47:23.475 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 18:47:23.475 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 18:47:23.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 18:47:23.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 18:47:23.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 18:47:23.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 18:47:23.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 18:47:23.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 18:47:23.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 18:47:23.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 18:47:23.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 18:47:23.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 18:47:23.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 18:47:23.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 18:47:23.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 18:47:23.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 18:47:23.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 18:47:23.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 18:47:23.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 18:47:23.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 18:47:23.511 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 18:47:23.513 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 18:47:23.513 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 18:47:23.520 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 18:47:23.543 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:47:23.543 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:47:23.552 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:47:23.552 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:47:23.593 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:47:23.593 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 18:47:23.593 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 18:47:23.593 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 18:47:23.593 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 18:47:23.594 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 18:47:23.608 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 18:47:23.609 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:47:23.609 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:47:23.609 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:47:23.619 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:47:23.623 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:47:23.624 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:47:23.625 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 18:47:23.625 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:47:23.625 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:47:23.625 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:47:23.625 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:47:23.625 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:47:23.625 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:47:23.625 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 18:47:23.626 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:47:23.626 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:47:23.626 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:47:23.626 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:47:23.626 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:47:23.626 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:47:23.626 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 18:47:23.626 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:47:23.627 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:47:23.627 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:47:23.627 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:47:23.627 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:47:23.627 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:47:23.627 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 18:47:23.627 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:47:23.627 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:47:23.627 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:47:23.628 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:47:23.628 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:47:23.628 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:47:23.628 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 18:47:23.628 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:47:23.628 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:47:23.628 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:47:23.628 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:47:23.629 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:47:23.629 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:47:23.629 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 18:47:23.629 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:47:23.629 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:47:23.629 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:47:23.630 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:47:23.630 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:47:23.630 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:47:23.635 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 18:47:23.635 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:47:23.635 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:47:23.635 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:47:23.636 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:47:23.636 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:47:23.636 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:47:23.637 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 18:47:23.637 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:47:23.637 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:47:23.637 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:47:23.637 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:47:23.638 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:47:23.638 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:47:23.638 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 18:47:23.638 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:47:23.638 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:47:23.638 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:47:23.639 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:47:23.639 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:47:23.639 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:47:23.640 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 18:47:23.640 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:47:23.640 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:47:23.640 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:47:23.640 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:47:23.641 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:47:23.641 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:47:23.657 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:47:23.657 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:47:23.657 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 18:47:23.659 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 18:47:23.678 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 18:47:23.681 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 18:47:23.681 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 18:47:23.682 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 18:47:23.683 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 18:47:23.684 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 18:47:23.685 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 18:47:23.686 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 5a238fdb-399f-4874-bacc-0bc1fcd671c0 (<unnamed>)
☆ 2017-06-14 18:47:23.686 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 18:47:23.720 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 18:47:23.732 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 18:47:23.735 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 18:47:23.737 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:47:23.742 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:47:23.744 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:47:23.805 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 18:47:53.257 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-14 18:47:56.302 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 18:47:56.303 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 18:47:56.304 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:47:56.305 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 18:53:11.245 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 18:53:11.253 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:53:11.254 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:53:11.256 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:53:11.321 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 18:53:11.322 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 18:53:11.323 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 18:53:11.335 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 18:53:11.337 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 18:53:11.337 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 18:53:11.341 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 18:53:11.486 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:53:11.486 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:53:11.486 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:53:11.495 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 18:53:11.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 18:53:11.505 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 18:53:11.510 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 18:53:11.524 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:53:11.525 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:53:11.525 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:53:11.525 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 18:53:11.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 18:53:11.527 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 18:53:11.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:53:11.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:53:11.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:53:11.568 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:53:11.569 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:53:11.569 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:53:11.570 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:53:11.571 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:53:11.571 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:53:11.572 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:53:11.572 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:53:11.572 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:53:11.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:53:11.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:53:11.574 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:53:11.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:53:11.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:53:11.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:53:11.576 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:53:11.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:53:11.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:53:11.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:53:11.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:53:11.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:53:11.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:53:11.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:53:11.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:53:11.581 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 18:53:11.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 18:53:11.583 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:53:11.583 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:53:11.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:53:11.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:53:11.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:53:11.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:53:11.587 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:53:11.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:53:11.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:53:11.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 18:53:11.590 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:53:11.590 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:53:11.590 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:53:11.591 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 18:53:11.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:53:11.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:53:11.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:53:11.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:53:11.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:53:11.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:53:11.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:53:11.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:53:11.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:53:11.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:53:11.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 18:53:11.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:53:11.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:53:11.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:53:11.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:53:11.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:53:11.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:53:11.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 18:53:11.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:53:11.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:53:11.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:53:11.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:53:11.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:53:11.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:53:11.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 18:53:11.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 18:53:11.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:53:11.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:53:11.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 18:53:11.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:53:11.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:53:11.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:53:11.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:53:11.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 18:53:11.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 18:53:11.614 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 18:53:11.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:53:11.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:53:11.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 18:53:11.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 18:53:11.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 18:53:11.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 18:53:11.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 18:53:11.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 18:53:11.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 18:53:11.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 18:53:11.625 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 18:53:11.627 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:53:11.627 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 18:53:11.628 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 18:53:11.630 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 18:53:11.630 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 18:53:11.771 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:53:11.771 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:53:11.771 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 18:53:11.779 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 18:53:11.799 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 18:53:11.853 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 18:53:11.854 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 18:53:11.854 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:53:11.854 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:53:11.855 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 18:53:11.855 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 18:53:11.856 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 18:53:11.857 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:53:11.857 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 18:53:11.858 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 18:53:11.858 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 18:53:11.858 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 18:53:11.858 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:53:11.859 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 18:53:11.880 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 18:53:11.899 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:53:11.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 18:53:11.917 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 18:53:11.922 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 18:53:11.944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 18:53:11.947 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 18:53:11.948 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 18:53:11.949 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 18:53:11.951 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 18:53:11.954 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:53:11.954 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 18:53:11.954 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 18:53:11.954 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 18:53:11.955 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 18:53:11.955 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:53:11.955 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 18:53:11.955 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 18:53:11.955 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 18:53:11.955 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 18:53:11.956 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 18:53:11.956 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 18:53:11.956 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 18:53:11.957 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 18:53:11.979 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 18:53:11.980 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 18:53:11.980 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 18:53:11.980 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 18:53:11.980 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 18:53:11.981 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 18:53:11.981 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 18:53:11.981 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 18:53:11.981 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 18:53:11.981 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 18:53:11.981 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 18:53:11.981 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 18:53:11.981 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 18:53:11.981 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 18:53:11.981 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 18:53:11.982 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 18:53:11.982 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 18:53:11.982 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 18:53:11.982 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 18:53:11.982 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 18:53:11.982 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 18:53:11.982 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 18:53:11.982 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 18:53:11.982 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 18:53:11.982 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 18:53:11.982 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 18:53:11.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 18:53:11.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 18:53:11.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 18:53:11.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 18:53:11.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 18:53:11.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 18:53:11.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 18:53:11.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 18:53:11.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 18:53:11.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 18:53:12.015 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 18:53:12.016 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 18:53:12.016 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 18:53:12.023 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 18:53:12.045 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:53:12.045 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:53:12.054 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:53:12.054 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:53:12.095 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:53:12.095 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 18:53:12.095 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 18:53:12.095 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 18:53:12.095 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 18:53:12.095 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 18:53:12.110 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 18:53:12.111 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:53:12.111 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:53:12.111 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:53:12.121 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:53:12.124 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:53:12.126 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:53:12.126 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 18:53:12.126 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:53:12.126 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:53:12.126 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:53:12.126 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:53:12.127 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:53:12.127 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:53:12.127 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 18:53:12.127 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:53:12.127 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:53:12.127 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:53:12.127 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:53:12.128 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:53:12.128 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:53:12.128 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 18:53:12.128 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:53:12.128 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:53:12.128 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:53:12.128 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:53:12.129 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:53:12.129 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:53:12.129 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 18:53:12.129 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:53:12.129 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:53:12.129 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:53:12.129 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:53:12.130 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:53:12.130 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:53:12.130 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 18:53:12.130 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:53:12.130 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:53:12.130 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:53:12.130 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:53:12.131 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:53:12.131 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:53:12.131 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 18:53:12.131 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:53:12.131 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:53:12.131 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:53:12.131 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:53:12.132 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:53:12.132 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:53:12.132 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 18:53:12.132 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:53:12.132 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:53:12.132 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:53:12.132 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:53:12.133 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:53:12.133 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:53:12.133 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 18:53:12.133 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:53:12.133 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:53:12.133 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:53:12.133 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:53:12.134 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:53:12.134 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:53:12.134 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 18:53:12.134 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:53:12.134 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:53:12.134 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:53:12.134 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:53:12.135 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:53:12.135 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:53:12.135 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 18:53:12.135 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:53:12.135 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:53:12.135 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:53:12.135 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:53:12.136 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:53:12.136 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:53:12.148 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:53:12.148 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:53:12.148 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 18:53:12.150 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 18:53:12.167 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 18:53:12.169 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 18:53:12.169 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 18:53:12.171 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 18:53:12.172 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 18:53:12.172 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 18:53:12.173 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 18:53:12.174 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 47939a08-4262-49a5-a7a0-0b4c8c026166 (<unnamed>)
☆ 2017-06-14 18:53:12.174 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 18:53:12.207 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 18:53:12.219 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 18:53:12.222 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 18:53:12.223 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:53:12.228 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:53:12.230 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:53:12.291 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 18:54:46.852 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 18:54:46.860 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:54:46.861 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:54:46.863 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:54:46.928 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 18:54:46.929 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 18:54:46.930 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 18:54:46.943 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 18:54:46.944 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 18:54:46.944 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 18:54:46.948 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 18:54:47.091 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:54:47.092 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:54:47.092 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:54:47.100 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 18:54:47.101 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 18:54:47.110 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 18:54:47.116 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 18:54:47.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:54:47.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:54:47.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:54:47.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 18:54:47.169 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 18:54:47.169 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 18:54:47.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:54:47.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:54:47.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:54:47.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:54:47.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:54:47.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:54:47.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:54:47.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:54:47.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:54:47.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:54:47.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:54:47.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:54:47.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:54:47.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:54:47.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:54:47.177 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:54:47.177 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:54:47.178 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:54:47.179 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:54:47.179 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:54:47.179 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:54:47.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:54:47.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:54:47.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:54:47.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:54:47.182 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:54:47.182 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:54:47.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 18:54:47.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 18:54:47.184 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:54:47.184 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:54:47.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:54:47.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:54:47.187 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:54:47.187 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:54:47.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:54:47.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:54:47.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:54:47.189 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 18:54:47.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:54:47.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:54:47.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:54:47.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 18:54:47.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:54:47.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:54:47.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:54:47.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:54:47.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:54:47.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:54:47.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:54:47.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:54:47.195 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:54:47.195 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:54:47.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 18:54:47.197 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:54:47.197 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:54:47.197 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:54:47.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:54:47.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:54:47.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:54:47.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 18:54:47.199 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:54:47.199 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:54:47.199 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:54:47.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:54:47.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:54:47.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:54:47.201 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 18:54:47.201 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 18:54:47.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:54:47.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:54:47.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 18:54:47.207 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:54:47.207 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:54:47.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:54:47.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:54:47.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 18:54:47.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 18:54:47.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 18:54:47.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:54:47.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:54:47.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 18:54:47.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 18:54:47.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 18:54:47.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 18:54:47.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 18:54:47.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 18:54:47.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 18:54:47.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 18:54:47.224 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 18:54:47.226 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:54:47.226 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 18:54:47.227 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 18:54:47.229 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 18:54:47.229 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 18:54:47.374 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:54:47.374 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:54:47.374 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 18:54:47.382 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 18:54:47.402 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 18:54:47.458 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 18:54:47.458 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 18:54:47.459 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:54:47.459 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:54:47.459 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 18:54:47.460 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 18:54:47.460 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 18:54:47.461 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:54:47.461 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 18:54:47.462 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 18:54:47.462 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 18:54:47.462 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 18:54:47.463 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:54:47.463 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 18:54:47.484 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 18:54:47.503 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:54:47.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 18:54:47.521 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 18:54:47.525 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 18:54:47.548 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 18:54:47.550 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 18:54:47.552 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 18:54:47.553 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 18:54:47.554 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 18:54:47.557 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:54:47.557 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 18:54:47.558 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 18:54:47.558 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 18:54:47.558 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 18:54:47.558 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:54:47.558 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 18:54:47.558 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 18:54:47.558 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 18:54:47.558 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 18:54:47.559 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 18:54:47.559 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 18:54:47.560 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 18:54:47.561 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 18:54:47.583 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 18:54:47.584 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 18:54:47.584 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 18:54:47.584 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 18:54:47.584 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 18:54:47.584 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 18:54:47.584 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 18:54:47.584 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 18:54:47.584 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 18:54:47.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 18:54:47.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 18:54:47.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 18:54:47.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 18:54:47.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 18:54:47.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 18:54:47.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 18:54:47.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 18:54:47.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 18:54:47.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 18:54:47.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 18:54:47.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 18:54:47.586 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 18:54:47.586 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 18:54:47.586 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 18:54:47.586 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 18:54:47.586 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 18:54:47.586 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 18:54:47.586 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 18:54:47.586 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 18:54:47.586 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 18:54:47.586 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 18:54:47.586 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 18:54:47.587 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 18:54:47.587 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 18:54:47.587 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 18:54:47.587 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 18:54:47.618 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 18:54:47.619 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 18:54:47.620 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 18:54:47.627 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 18:54:47.649 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:54:47.649 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:54:47.658 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:54:47.658 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:54:47.698 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:54:47.698 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 18:54:47.698 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 18:54:47.698 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 18:54:47.698 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 18:54:47.698 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 18:54:47.713 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 18:54:47.714 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:54:47.714 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:54:47.714 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:54:47.724 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:54:47.727 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:54:47.729 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:54:47.729 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 18:54:47.729 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:54:47.729 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:54:47.729 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:54:47.729 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:54:47.729 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:54:47.730 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:54:47.730 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 18:54:47.730 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:54:47.730 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:54:47.730 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:54:47.730 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:54:47.730 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:54:47.730 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:54:47.731 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 18:54:47.731 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:54:47.731 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:54:47.731 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:54:47.731 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:54:47.731 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:54:47.731 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:54:47.731 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 18:54:47.732 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:54:47.732 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:54:47.732 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:54:47.732 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:54:47.732 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:54:47.732 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:54:47.732 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 18:54:47.732 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:54:47.732 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:54:47.733 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:54:47.733 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:54:47.733 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:54:47.733 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:54:47.733 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 18:54:47.733 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:54:47.734 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:54:47.734 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:54:47.734 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:54:47.734 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:54:47.734 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:54:47.734 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 18:54:47.735 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:54:47.735 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:54:47.735 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:54:47.735 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:54:47.735 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:54:47.735 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:54:47.735 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 18:54:47.735 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:54:47.735 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:54:47.736 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:54:47.736 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:54:47.736 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:54:47.736 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:54:47.736 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 18:54:47.736 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:54:47.736 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:54:47.736 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:54:47.736 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:54:47.737 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:54:47.737 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:54:47.737 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 18:54:47.737 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:54:47.737 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:54:47.737 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:54:47.737 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:54:47.738 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:54:47.738 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:54:47.749 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:54:47.750 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:54:47.750 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 18:54:47.752 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 18:54:47.769 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 18:54:47.771 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 18:54:47.772 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 18:54:47.773 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 18:54:47.774 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 18:54:47.774 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 18:54:47.775 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 18:54:47.776 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 32fb5cec-d34d-4e6b-ade1-cb760b8f5e33 (<unnamed>)
☆ 2017-06-14 18:54:47.776 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 18:54:47.809 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 18:54:47.822 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 18:54:47.824 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 18:54:47.826 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:54:47.831 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:54:47.833 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:54:47.894 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 18:57:41.083 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 18:57:41.090 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:57:41.092 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:57:41.093 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:57:41.160 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 18:57:41.161 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 18:57:41.162 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 18:57:41.175 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 18:57:41.176 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 18:57:41.176 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 18:57:41.180 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 18:57:41.324 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:57:41.324 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:57:41.324 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:57:41.333 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 18:57:41.334 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 18:57:41.343 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 18:57:41.348 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 18:57:41.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:57:41.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:57:41.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:57:41.363 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 18:57:41.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 18:57:41.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 18:57:41.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:57:41.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:57:41.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:57:41.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:57:41.405 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:57:41.405 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:57:41.406 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:57:41.407 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:57:41.407 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:57:41.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:57:41.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:57:41.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:57:41.409 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:57:41.409 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:57:41.409 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:57:41.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:57:41.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:57:41.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:57:41.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:57:41.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:57:41.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:57:41.414 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:57:41.414 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:57:41.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:57:41.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:57:41.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:57:41.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:57:41.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 18:57:41.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 18:57:41.418 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:57:41.418 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:57:41.419 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:57:41.419 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:57:41.420 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:57:41.420 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:57:41.421 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:57:41.422 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:57:41.422 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:57:41.423 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 18:57:41.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:57:41.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:57:41.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:57:41.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 18:57:41.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:57:41.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:57:41.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:57:41.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:57:41.427 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:57:41.427 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:57:41.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:57:41.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:57:41.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:57:41.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:57:41.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 18:57:41.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:57:41.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:57:41.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:57:41.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:57:41.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:57:41.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:57:41.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 18:57:41.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:57:41.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:57:41.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:57:41.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:57:41.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:57:41.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:57:41.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 18:57:41.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 18:57:41.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:57:41.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:57:41.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 18:57:41.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:57:41.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:57:41.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:57:41.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:57:41.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 18:57:41.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 18:57:41.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 18:57:41.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:57:41.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:57:41.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 18:57:41.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 18:57:41.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 18:57:41.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 18:57:41.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 18:57:41.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 18:57:41.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 18:57:41.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 18:57:41.460 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 18:57:41.462 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:57:41.462 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 18:57:41.462 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 18:57:41.465 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 18:57:41.465 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 18:57:41.605 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:57:41.606 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:57:41.606 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 18:57:41.614 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 18:57:41.634 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 18:57:41.688 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 18:57:41.689 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 18:57:41.689 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:57:41.690 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:57:41.690 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 18:57:41.691 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 18:57:41.691 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 18:57:41.692 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:57:41.692 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 18:57:41.693 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 18:57:41.693 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 18:57:41.693 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 18:57:41.694 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:57:41.694 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 18:57:41.715 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 18:57:41.734 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:57:41.748 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 18:57:41.752 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 18:57:41.756 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 18:57:41.779 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 18:57:41.781 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 18:57:41.783 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 18:57:41.783 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 18:57:41.785 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 18:57:41.788 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:57:41.788 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 18:57:41.788 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 18:57:41.788 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 18:57:41.789 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 18:57:41.789 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:57:41.789 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 18:57:41.789 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 18:57:41.789 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 18:57:41.789 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 18:57:41.790 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 18:57:41.790 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 18:57:41.790 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 18:57:41.791 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 18:57:41.813 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 18:57:41.814 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 18:57:41.815 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 18:57:41.815 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 18:57:41.815 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 18:57:41.815 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 18:57:41.815 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 18:57:41.815 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 18:57:41.815 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 18:57:41.815 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 18:57:41.815 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 18:57:41.816 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 18:57:41.816 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 18:57:41.816 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 18:57:41.816 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 18:57:41.816 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 18:57:41.816 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 18:57:41.816 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 18:57:41.816 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 18:57:41.816 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 18:57:41.816 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 18:57:41.816 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 18:57:41.817 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 18:57:41.817 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 18:57:41.817 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 18:57:41.817 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 18:57:41.817 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 18:57:41.817 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 18:57:41.817 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 18:57:41.817 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 18:57:41.817 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 18:57:41.817 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 18:57:41.818 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 18:57:41.818 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 18:57:41.818 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 18:57:41.818 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 18:57:41.849 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 18:57:41.851 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 18:57:41.851 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 18:57:41.858 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 18:57:41.879 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:57:41.880 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:57:41.888 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:57:41.888 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:57:41.928 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:57:41.928 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 18:57:41.928 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 18:57:41.928 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 18:57:41.928 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 18:57:41.928 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 18:57:41.943 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 18:57:41.944 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:57:41.945 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:57:41.945 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:57:41.956 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:57:41.959 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:57:41.961 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:57:41.961 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 18:57:41.961 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:57:41.961 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:57:41.961 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:57:41.961 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:57:41.962 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:57:41.962 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:57:41.962 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 18:57:41.962 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:57:41.962 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:57:41.962 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:57:41.962 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:57:41.963 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:57:41.963 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:57:41.963 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 18:57:41.963 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:57:41.963 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:57:41.963 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:57:41.963 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:57:41.963 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:57:41.964 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:57:41.964 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 18:57:41.964 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:57:41.964 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:57:41.964 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:57:41.964 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:57:41.964 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:57:41.964 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:57:41.965 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 18:57:41.965 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:57:41.965 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:57:41.965 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:57:41.965 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:57:41.965 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:57:41.965 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:57:41.965 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 18:57:41.966 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:57:41.966 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:57:41.966 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:57:41.966 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:57:41.966 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:57:41.966 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:57:41.966 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 18:57:41.967 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:57:41.967 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:57:41.967 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:57:41.967 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:57:41.967 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:57:41.967 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:57:41.967 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 18:57:41.967 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:57:41.968 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:57:41.968 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:57:41.968 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:57:41.968 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:57:41.968 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:57:41.968 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 18:57:41.968 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:57:41.968 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:57:41.968 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:57:41.969 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:57:41.969 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:57:41.969 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:57:41.969 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 18:57:41.969 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:57:41.969 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:57:41.969 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:57:41.969 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:57:41.970 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:57:41.970 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:57:41.982 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:57:41.982 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:57:41.982 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 18:57:41.984 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 18:57:42.001 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 18:57:42.003 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 18:57:42.003 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 18:57:42.005 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 18:57:42.006 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 18:57:42.006 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 18:57:42.007 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 18:57:42.008 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: bf98dbe5-7ab7-40f8-9170-0cb03c767012 (<unnamed>)
☆ 2017-06-14 18:57:42.008 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 18:57:42.040 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 18:57:42.052 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 18:57:42.055 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 18:57:42.057 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:57:42.062 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:57:42.064 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:57:42.124 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 18:58:11.336 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 18:58:11.344 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:58:11.345 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:58:11.347 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:58:11.416 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 18:58:11.417 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 18:58:11.418 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 18:58:11.431 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 18:58:11.433 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 18:58:11.433 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 18:58:11.437 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 18:58:11.606 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:58:11.606 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:58:11.606 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:58:11.616 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 18:58:11.617 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 18:58:11.626 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 18:58:11.631 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 18:58:11.645 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:58:11.646 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:58:11.646 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:58:11.647 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 18:58:11.647 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 18:58:11.648 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 18:58:11.685 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:58:11.685 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:58:11.685 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:58:11.686 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:58:11.686 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:58:11.686 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:58:11.687 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:58:11.688 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:58:11.688 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:58:11.689 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:58:11.689 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:58:11.689 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:58:11.690 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:58:11.690 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:58:11.690 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:58:11.692 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:58:11.692 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:58:11.692 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:58:11.693 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:58:11.693 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:58:11.693 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:58:11.694 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:58:11.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:58:11.696 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:58:11.696 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:58:11.696 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:58:11.697 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:58:11.697 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 18:58:11.698 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 18:58:11.699 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:58:11.699 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:58:11.700 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:58:11.701 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:58:11.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:58:11.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:58:11.703 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:58:11.703 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:58:11.703 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:58:11.704 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 18:58:11.705 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:58:11.705 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:58:11.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:58:11.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 18:58:11.707 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:58:11.707 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:58:11.708 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:58:11.708 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:58:11.709 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:58:11.709 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:58:11.709 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:58:11.709 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:58:11.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:58:11.711 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:58:11.711 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 18:58:11.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:58:11.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:58:11.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:58:11.713 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:58:11.713 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:58:11.713 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:58:11.714 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 18:58:11.714 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:58:11.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:58:11.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:58:11.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:58:11.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:58:11.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:58:11.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 18:58:11.717 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 18:58:11.719 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:58:11.720 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:58:11.720 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 18:58:11.722 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:58:11.723 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:58:11.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:58:11.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:58:11.725 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 18:58:11.728 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 18:58:11.729 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 18:58:11.731 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:58:11.731 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:58:11.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 18:58:11.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 18:58:11.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 18:58:11.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 18:58:11.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 18:58:11.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 18:58:11.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 18:58:11.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 18:58:11.740 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 18:58:11.742 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:58:11.742 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 18:58:11.743 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 18:58:11.745 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 18:58:11.745 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 18:58:11.889 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:58:11.889 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:58:11.890 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 18:58:11.899 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 18:58:11.918 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 18:58:11.982 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 18:58:11.982 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 18:58:11.983 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:58:11.983 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:58:11.983 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 18:58:11.984 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 18:58:11.984 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 18:58:11.985 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:58:11.986 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 18:58:11.986 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 18:58:11.986 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 18:58:11.987 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 18:58:11.987 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:58:11.988 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 18:58:12.011 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 18:58:12.031 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:58:12.045 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 18:58:12.049 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 18:58:12.055 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 18:58:12.080 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 18:58:12.083 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 18:58:12.085 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 18:58:12.086 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 18:58:12.088 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 18:58:12.093 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:58:12.094 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 18:58:12.094 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 18:58:12.094 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 18:58:12.094 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 18:58:12.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:58:12.095 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 18:58:12.095 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 18:58:12.095 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 18:58:12.095 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 18:58:12.096 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 18:58:12.097 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 18:58:12.097 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 18:58:12.098 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 18:58:12.129 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 18:58:12.131 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 18:58:12.131 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 18:58:12.131 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 18:58:12.131 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 18:58:12.131 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 18:58:12.131 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 18:58:12.131 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 18:58:12.131 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 18:58:12.132 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 18:58:12.132 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 18:58:12.132 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 18:58:12.132 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 18:58:12.132 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 18:58:12.132 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 18:58:12.132 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 18:58:12.132 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 18:58:12.133 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 18:58:12.133 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 18:58:12.133 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 18:58:12.133 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 18:58:12.133 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 18:58:12.133 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 18:58:12.133 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 18:58:12.133 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 18:58:12.133 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 18:58:12.133 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 18:58:12.134 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 18:58:12.134 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 18:58:12.134 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 18:58:12.134 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 18:58:12.134 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 18:58:12.134 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 18:58:12.134 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 18:58:12.134 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 18:58:12.135 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 18:58:12.171 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 18:58:12.173 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 18:58:12.173 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 18:58:12.180 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 18:58:12.201 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:58:12.201 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:58:12.210 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:58:12.210 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:58:12.250 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:58:12.250 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 18:58:12.250 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 18:58:12.250 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 18:58:12.250 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 18:58:12.250 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 18:58:12.265 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 18:58:12.266 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:58:12.266 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:58:12.266 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:58:12.276 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:58:12.279 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:58:12.281 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:58:12.281 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 18:58:12.281 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:58:12.281 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:58:12.281 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:58:12.281 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:58:12.282 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:58:12.282 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:58:12.282 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 18:58:12.282 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:58:12.282 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:58:12.282 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:58:12.282 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:58:12.282 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:58:12.283 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:58:12.283 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 18:58:12.283 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:58:12.283 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:58:12.283 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:58:12.283 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:58:12.283 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:58:12.283 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:58:12.283 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 18:58:12.284 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:58:12.284 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:58:12.284 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:58:12.284 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:58:12.284 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:58:12.284 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:58:12.284 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 18:58:12.284 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:58:12.285 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:58:12.285 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:58:12.285 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:58:12.285 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:58:12.285 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:58:12.285 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 18:58:12.285 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:58:12.286 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:58:12.286 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:58:12.286 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:58:12.286 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:58:12.287 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:58:12.287 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 18:58:12.287 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:58:12.287 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:58:12.287 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:58:12.287 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:58:12.287 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:58:12.287 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:58:12.288 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 18:58:12.288 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:58:12.288 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:58:12.288 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:58:12.288 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:58:12.288 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:58:12.288 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:58:12.289 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 18:58:12.289 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:58:12.289 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:58:12.289 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:58:12.289 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:58:12.289 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:58:12.289 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:58:12.289 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 18:58:12.289 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:58:12.290 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:58:12.290 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:58:12.290 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:58:12.290 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:58:12.290 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:58:12.305 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:58:12.305 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:58:12.305 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 18:58:12.308 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 18:58:12.327 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 18:58:12.330 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 18:58:12.330 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 18:58:12.332 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 18:58:12.333 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 18:58:12.333 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 18:58:12.334 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 18:58:12.336 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 5b4f5933-dc6f-421d-86e2-35ecbbad2710 (<unnamed>)
☆ 2017-06-14 18:58:12.336 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 18:58:12.370 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 18:58:12.383 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 18:58:12.386 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 18:58:12.387 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:58:12.393 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:58:12.394 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:58:12.467 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 18:59:06.951 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 18:59:06.959 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:59:06.960 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:59:06.962 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:59:07.028 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 18:59:07.029 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 18:59:07.031 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 18:59:07.043 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 18:59:07.045 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 18:59:07.045 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 18:59:07.049 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 18:59:07.195 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 18:59:07.195 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 18:59:07.195 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 18:59:07.204 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 18:59:07.205 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 18:59:07.214 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 18:59:07.219 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 18:59:07.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:59:07.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:59:07.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 18:59:07.277 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 18:59:07.278 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 18:59:07.278 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 18:59:07.279 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:59:07.280 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:59:07.280 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 18:59:07.280 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:59:07.281 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:59:07.281 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 18:59:07.282 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:59:07.282 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:59:07.282 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 18:59:07.283 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:59:07.283 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:59:07.283 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 18:59:07.284 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:59:07.285 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:59:07.285 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 18:59:07.286 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:59:07.286 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:59:07.286 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 18:59:07.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:59:07.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:59:07.288 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 18:59:07.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:59:07.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 18:59:07.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:59:07.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 18:59:07.291 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:59:07.291 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 18:59:07.291 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 18:59:07.292 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 18:59:07.293 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:59:07.293 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 18:59:07.294 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:59:07.295 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 18:59:07.296 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:59:07.296 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 18:59:07.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:59:07.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:59:07.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 18:59:07.298 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 18:59:07.299 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:59:07.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:59:07.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 18:59:07.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 18:59:07.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:59:07.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 18:59:07.302 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:59:07.302 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 18:59:07.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:59:07.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 18:59:07.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:59:07.304 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 18:59:07.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:59:07.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 18:59:07.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 18:59:07.306 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:59:07.306 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:59:07.306 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 18:59:07.307 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:59:07.307 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:59:07.307 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 18:59:07.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 18:59:07.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:59:07.309 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:59:07.309 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 18:59:07.310 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:59:07.310 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:59:07.310 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 18:59:07.310 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 18:59:07.311 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 18:59:07.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:59:07.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 18:59:07.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 18:59:07.316 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:59:07.317 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 18:59:07.319 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:59:07.319 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 18:59:07.319 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 18:59:07.322 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 18:59:07.323 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 18:59:07.325 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:59:07.325 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 18:59:07.326 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 18:59:07.326 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 18:59:07.326 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 18:59:07.326 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 18:59:07.326 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 18:59:07.326 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 18:59:07.326 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 18:59:07.326 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 18:59:07.334 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 18:59:07.336 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 18:59:07.336 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 18:59:07.337 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 18:59:07.339 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 18:59:07.339 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 18:59:07.483 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:59:07.484 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 18:59:07.484 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 18:59:07.492 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 18:59:07.512 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 18:59:07.568 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 18:59:07.568 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 18:59:07.568 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:59:07.569 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 18:59:07.569 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 18:59:07.570 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 18:59:07.570 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 18:59:07.571 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:59:07.571 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 18:59:07.572 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 18:59:07.572 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 18:59:07.572 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 18:59:07.572 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 18:59:07.573 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 18:59:07.595 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 18:59:07.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:59:07.627 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 18:59:07.631 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 18:59:07.635 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 18:59:07.658 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 18:59:07.660 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 18:59:07.662 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 18:59:07.663 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 18:59:07.664 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 18:59:07.667 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:59:07.668 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 18:59:07.668 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 18:59:07.668 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 18:59:07.668 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 18:59:07.668 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 18:59:07.668 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 18:59:07.669 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 18:59:07.669 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 18:59:07.669 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 18:59:07.670 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 18:59:07.670 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 18:59:07.670 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 18:59:07.671 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 18:59:07.693 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 18:59:07.694 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 18:59:07.694 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 18:59:07.694 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 18:59:07.695 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 18:59:07.695 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 18:59:07.695 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 18:59:07.695 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 18:59:07.695 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 18:59:07.695 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 18:59:07.695 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 18:59:07.695 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 18:59:07.695 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 18:59:07.696 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 18:59:07.696 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 18:59:07.696 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 18:59:07.696 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 18:59:07.696 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 18:59:07.696 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 18:59:07.696 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 18:59:07.696 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 18:59:07.696 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 18:59:07.696 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 18:59:07.696 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 18:59:07.697 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 18:59:07.697 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 18:59:07.697 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 18:59:07.697 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 18:59:07.697 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 18:59:07.697 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 18:59:07.697 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 18:59:07.697 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 18:59:07.697 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 18:59:07.697 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 18:59:07.698 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 18:59:07.698 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 18:59:07.728 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 18:59:07.729 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 18:59:07.729 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 18:59:07.736 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 18:59:07.758 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:59:07.758 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:59:07.767 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 18:59:07.767 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:59:07.807 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 18:59:07.808 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 18:59:07.808 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 18:59:07.808 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 18:59:07.808 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 18:59:07.808 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 18:59:07.823 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 18:59:07.824 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:59:07.824 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:59:07.824 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:59:07.834 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:59:07.837 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:59:07.839 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:59:07.839 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 18:59:07.839 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:59:07.839 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:59:07.839 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:59:07.839 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:59:07.840 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:59:07.840 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:59:07.840 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 18:59:07.840 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:59:07.840 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:59:07.840 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:59:07.841 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:59:07.841 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:59:07.841 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:59:07.841 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 18:59:07.841 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:59:07.841 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:59:07.841 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:59:07.841 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:59:07.842 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:59:07.842 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:59:07.842 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 18:59:07.842 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:59:07.842 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:59:07.842 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:59:07.843 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:59:07.843 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:59:07.843 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:59:07.843 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 18:59:07.843 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:59:07.843 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:59:07.843 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:59:07.844 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:59:07.844 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:59:07.844 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:59:07.844 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 18:59:07.844 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:59:07.844 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:59:07.845 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:59:07.845 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:59:07.845 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:59:07.845 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:59:07.845 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 18:59:07.845 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:59:07.845 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:59:07.846 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:59:07.846 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:59:07.846 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:59:07.846 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:59:07.846 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 18:59:07.846 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:59:07.846 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:59:07.847 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:59:07.847 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:59:07.847 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:59:07.847 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 18:59:07.847 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 18:59:07.847 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:59:07.848 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:59:07.848 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:59:07.848 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:59:07.848 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:59:07.848 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:59:07.848 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 18:59:07.848 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 18:59:07.848 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 18:59:07.849 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 18:59:07.849 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 18:59:07.849 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 18:59:07.849 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:59:07.861 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:59:07.862 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 18:59:07.862 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 18:59:07.864 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 18:59:07.882 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 18:59:07.884 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 18:59:07.885 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 18:59:07.886 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 18:59:07.887 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 18:59:07.887 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 18:59:07.888 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 18:59:07.890 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: d8f7095b-10a3-4808-85a1-47417fe31fd0 (<unnamed>)
☆ 2017-06-14 18:59:07.890 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 18:59:07.924 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 18:59:07.937 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 18:59:07.940 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 18:59:07.942 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:59:07.948 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:59:07.950 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 18:59:08.013 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:04:43.523 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:04:43.530 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:04:43.531 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:04:43.533 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:04:43.597 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:04:43.598 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:04:43.599 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:04:43.612 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:04:43.613 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:04:43.614 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:04:43.617 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:04:43.783 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:04:43.783 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:04:43.783 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:04:43.792 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:04:43.793 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:04:43.802 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:04:43.807 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:04:43.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:04:43.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:04:43.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:04:43.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:04:43.823 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:04:43.862 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:04:43.864 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:04:43.864 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:04:43.864 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:04:43.865 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:04:43.865 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:04:43.865 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:04:43.866 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:04:43.866 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:04:43.866 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:04:43.867 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:04:43.867 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:04:43.868 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:04:43.869 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:04:43.869 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:04:43.869 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:04:43.870 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:04:43.870 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:04:43.870 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:04:43.871 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:04:43.872 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:04:43.872 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:04:43.873 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:04:43.873 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:04:43.874 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:04:43.874 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:04:43.875 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:04:43.875 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:04:43.876 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:04:43.876 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:04:43.877 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:04:43.877 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:04:43.879 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:04:43.879 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:04:43.880 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:04:43.880 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:04:43.881 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:04:43.881 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:04:43.881 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:04:43.883 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:04:43.883 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:04:43.884 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:04:43.884 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:04:43.884 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:04:43.885 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:04:43.885 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:04:43.886 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:04:43.886 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:04:43.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:04:43.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:04:43.888 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:04:43.888 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:04:43.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:04:43.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:04:43.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:04:43.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:04:43.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:04:43.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:04:43.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:04:43.892 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:04:43.892 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:04:43.892 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:04:43.893 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:04:43.893 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:04:43.893 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:04:43.894 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:04:43.894 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:04:43.894 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:04:43.895 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:04:43.895 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:04:43.898 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:04:43.898 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:04:43.898 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:04:43.901 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:04:43.901 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:04:43.903 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:04:43.903 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:04:43.904 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:04:43.906 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:04:43.907 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:04:43.909 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:04:43.910 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:04:43.910 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:04:43.910 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:04:43.910 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:04:43.910 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:04:43.910 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:04:43.911 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:04:43.911 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:04:43.911 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:04:43.918 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:04:43.920 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:04:43.921 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:04:43.921 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:04:43.923 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:04:43.923 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:04:44.066 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:04:44.066 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:04:44.066 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:04:44.075 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:04:44.094 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:04:44.150 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:04:44.150 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:04:44.151 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:04:44.151 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:04:44.151 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:04:44.152 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:04:44.152 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:04:44.153 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:04:44.154 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:04:44.154 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:04:44.154 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:04:44.155 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:04:44.155 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:04:44.156 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:04:44.177 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:04:44.196 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:04:44.213 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:04:44.217 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:04:44.221 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:04:44.244 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:04:44.247 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:04:44.248 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:04:44.249 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:04:44.250 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:04:44.254 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:04:44.254 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:04:44.254 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:04:44.254 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:04:44.254 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:04:44.254 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:04:44.255 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:04:44.255 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:04:44.255 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:04:44.255 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:04:44.256 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:04:44.256 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:04:44.256 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:04:44.257 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:04:44.281 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:04:44.282 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:04:44.282 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:04:44.282 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:04:44.282 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:04:44.282 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:04:44.283 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:04:44.283 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:04:44.283 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:04:44.283 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:04:44.283 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:04:44.283 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:04:44.283 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:04:44.283 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:04:44.283 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:04:44.283 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:04:44.283 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:04:44.284 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:04:44.284 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:04:44.284 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:04:44.284 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:04:44.284 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:04:44.284 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:04:44.284 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:04:44.284 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:04:44.284 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:04:44.284 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:04:44.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:04:44.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:04:44.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:04:44.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:04:44.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:04:44.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:04:44.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:04:44.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:04:44.285 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:04:44.317 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:04:44.319 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:04:44.326 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:04:44.333 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:04:44.355 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:04:44.355 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:04:44.364 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:04:44.364 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:04:44.405 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:04:44.405 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:04:44.405 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:04:44.405 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:04:44.405 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:04:44.405 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:04:44.420 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:04:44.420 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:04:44.421 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:04:44.421 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:04:44.430 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:04:44.433 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:04:44.435 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:04:44.435 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:04:44.435 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:04:44.435 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:04:44.435 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:04:44.436 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:04:44.436 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:04:44.436 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:04:44.436 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:04:44.436 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:04:44.436 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:04:44.436 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:04:44.437 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:04:44.437 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:04:44.437 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:04:44.437 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:04:44.437 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:04:44.437 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:04:44.437 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:04:44.437 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:04:44.438 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:04:44.438 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:04:44.438 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:04:44.438 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:04:44.438 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:04:44.438 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:04:44.438 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:04:44.439 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:04:44.439 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:04:44.439 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:04:44.439 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:04:44.439 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:04:44.439 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:04:44.439 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:04:44.440 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:04:44.440 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:04:44.440 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:04:44.440 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:04:44.440 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:04:44.440 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:04:44.441 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:04:44.441 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:04:44.441 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:04:44.441 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:04:44.441 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:04:44.441 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:04:44.441 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:04:44.441 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:04:44.442 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:04:44.442 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:04:44.442 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:04:44.442 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:04:44.442 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:04:44.442 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:04:44.442 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:04:44.443 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:04:44.443 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:04:44.443 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:04:44.443 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:04:44.443 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:04:44.443 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:04:44.443 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:04:44.444 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:04:44.444 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:04:44.444 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:04:44.444 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:04:44.444 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:04:44.444 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:04:44.444 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:04:44.445 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:04:44.445 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:04:44.457 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:04:44.457 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:04:44.457 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:04:44.460 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:04:44.477 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:04:44.479 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:04:44.479 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:04:44.481 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:04:44.482 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:04:44.482 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:04:44.483 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:04:44.484 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 682616bb-5b0a-40bb-868e-9e3bd00089c9 (<unnamed>)
☆ 2017-06-14 19:04:44.484 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:04:44.517 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:04:44.530 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:04:44.532 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:04:44.534 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:04:44.539 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:04:44.541 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:04:44.601 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:07:16.542 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:07:16.550 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:07:16.551 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:07:16.553 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:07:16.619 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:07:16.620 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:07:16.621 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:07:16.634 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:07:16.636 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:07:16.636 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:07:16.640 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:07:16.786 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:07:16.786 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:07:16.786 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:07:16.795 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:07:16.796 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:07:16.805 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:07:16.811 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:07:16.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:07:16.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:07:16.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:07:16.826 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:07:16.827 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:07:16.865 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:07:16.867 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:07:16.867 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:07:16.867 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:07:16.868 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:07:16.868 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:07:16.868 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:07:16.869 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:07:16.869 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:07:16.870 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:07:16.871 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:07:16.871 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:07:16.871 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:07:16.872 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:07:16.872 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:07:16.872 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:07:16.873 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:07:16.873 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:07:16.874 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:07:16.875 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:07:16.875 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:07:16.875 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:07:16.876 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:07:16.877 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:07:16.877 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:07:16.877 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:07:16.878 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:07:16.878 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:07:16.879 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:07:16.880 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:07:16.880 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:07:16.880 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:07:16.882 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:07:16.882 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:07:16.883 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:07:16.883 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:07:16.884 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:07:16.884 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:07:16.885 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:07:16.886 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:07:16.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:07:16.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:07:16.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:07:16.888 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:07:16.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:07:16.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:07:16.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:07:16.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:07:16.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:07:16.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:07:16.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:07:16.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:07:16.892 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:07:16.892 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:07:16.893 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:07:16.894 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:07:16.894 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:07:16.894 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:07:16.895 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:07:16.895 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:07:16.895 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:07:16.895 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:07:16.896 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:07:16.896 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:07:16.896 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:07:16.897 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:07:16.897 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:07:16.897 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:07:16.898 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:07:16.898 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:07:16.901 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:07:16.901 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:07:16.901 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:07:16.904 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:07:16.904 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:07:16.906 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:07:16.906 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:07:16.907 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:07:16.909 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:07:16.911 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:07:16.913 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:07:16.913 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:07:16.913 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:07:16.913 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:07:16.913 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:07:16.914 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:07:16.914 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:07:16.914 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:07:16.914 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:07:16.914 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:07:16.921 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:07:16.924 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:07:16.924 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:07:16.924 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:07:16.926 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:07:16.927 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:07:17.069 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:07:17.070 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:07:17.070 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:07:17.078 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:07:17.098 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:07:17.153 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:07:17.154 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:07:17.154 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:07:17.154 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:07:17.155 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:07:17.155 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:07:17.155 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:07:17.156 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:07:17.157 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:07:17.157 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:07:17.157 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:07:17.158 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:07:17.158 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:07:17.159 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:07:17.180 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:07:17.198 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:07:17.212 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:07:17.216 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:07:17.257 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:07:17.281 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:07:17.284 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:07:17.285 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:07:17.286 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:07:17.288 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:07:17.291 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:07:17.291 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:07:17.291 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:07:17.291 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:07:17.292 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:07:17.292 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:07:17.292 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:07:17.292 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:07:17.292 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:07:17.292 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:07:17.293 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:07:17.293 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:07:17.293 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:07:17.294 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:07:17.316 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:07:17.317 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:07:17.317 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:07:17.317 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:07:17.317 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:07:17.317 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:07:17.317 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:07:17.317 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:07:17.318 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:07:17.318 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:07:17.318 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:07:17.318 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:07:17.318 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:07:17.318 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:07:17.318 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:07:17.318 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:07:17.318 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:07:17.318 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:07:17.318 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:07:17.319 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:07:17.319 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:07:17.319 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:07:17.319 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:07:17.319 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:07:17.319 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:07:17.319 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:07:17.319 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:07:17.319 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:07:17.319 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:07:17.319 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:07:17.319 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:07:17.320 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:07:17.320 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:07:17.320 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:07:17.320 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:07:17.320 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:07:17.352 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:07:17.353 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:07:17.353 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:07:17.360 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:07:17.383 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:07:17.383 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:07:17.392 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:07:17.392 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:07:17.433 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:07:17.433 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:07:17.433 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:07:17.433 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:07:17.433 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:07:17.433 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:07:17.449 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:07:17.450 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:07:17.451 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:07:17.451 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:07:17.460 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:07:17.464 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:07:17.465 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:07:17.466 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:07:17.466 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:07:17.466 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:07:17.466 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:07:17.466 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:07:17.466 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:07:17.466 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:07:17.466 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:07:17.467 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:07:17.467 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:07:17.467 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:07:17.467 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:07:17.467 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:07:17.467 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:07:17.467 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:07:17.467 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:07:17.467 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:07:17.468 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:07:17.468 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:07:17.468 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:07:17.468 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:07:17.468 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:07:17.468 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:07:17.468 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:07:17.468 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:07:17.469 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:07:17.469 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:07:17.469 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:07:17.469 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:07:17.469 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:07:17.469 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:07:17.469 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:07:17.469 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:07:17.470 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:07:17.470 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:07:17.470 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:07:17.470 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:07:17.471 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:07:17.471 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:07:17.471 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:07:17.471 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:07:17.471 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:07:17.471 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:07:17.471 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:07:17.472 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:07:17.472 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:07:17.472 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:07:17.472 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:07:17.472 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:07:17.472 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:07:17.472 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:07:17.472 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:07:17.473 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:07:17.473 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:07:17.473 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:07:17.473 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:07:17.473 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:07:17.473 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:07:17.473 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:07:17.473 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:07:17.474 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:07:17.474 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:07:17.474 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:07:17.474 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:07:17.474 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:07:17.474 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:07:17.474 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:07:17.474 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:07:17.475 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:07:17.475 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:07:17.487 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:07:17.487 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:07:17.487 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:07:17.489 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:07:17.507 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:07:17.509 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:07:17.509 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:07:17.511 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:07:17.512 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:07:17.512 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:07:17.513 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:07:17.514 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: f74c7891-22ef-4c86-bbae-7fd49ab09dbf (<unnamed>)
☆ 2017-06-14 19:07:17.514 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:07:17.546 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:07:17.559 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:07:17.562 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:07:17.563 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:07:17.568 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:07:17.570 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:07:17.631 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:12:35.961 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:12:35.969 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:12:35.970 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:12:35.972 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:12:36.039 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:12:36.040 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:12:36.145 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:12:36.161 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:12:36.162 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:12:36.162 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:12:36.166 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:12:36.327 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:12:36.328 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:12:36.328 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:12:36.337 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:12:36.337 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:12:36.348 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:12:36.353 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:12:36.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:12:36.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:12:36.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:12:36.405 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:12:36.405 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:12:36.406 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:12:36.407 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:12:36.407 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:12:36.407 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:12:36.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:12:36.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:12:36.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:12:36.409 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:12:36.409 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:12:36.410 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:12:36.410 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:12:36.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:12:36.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:12:36.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:12:36.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:12:36.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:12:36.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:12:36.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:12:36.414 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:12:36.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:12:36.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:12:36.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:12:36.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:12:36.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:12:36.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:12:36.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:12:36.418 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:12:36.418 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:12:36.419 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:12:36.419 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:12:36.420 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:12:36.420 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:12:36.422 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:12:36.422 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:12:36.423 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:12:36.423 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:12:36.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:12:36.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:12:36.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:12:36.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:12:36.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:12:36.427 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:12:36.427 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:12:36.427 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:12:36.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:12:36.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:12:36.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:12:36.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:12:36.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:12:36.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:12:36.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:12:36.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:12:36.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:12:36.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:12:36.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:12:36.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:12:36.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:12:36.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:12:36.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:12:36.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:12:36.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:12:36.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:12:36.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:12:36.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:12:36.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:12:36.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:12:36.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:12:36.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:12:36.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:12:36.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:12:36.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:12:36.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:12:36.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:12:36.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:12:36.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:12:36.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:12:36.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:12:36.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:12:36.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:12:36.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:12:36.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:12:36.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:12:36.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:12:36.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:12:36.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:12:36.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:12:36.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:12:36.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:12:36.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:12:36.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:12:36.462 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:12:36.464 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:12:36.465 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:12:36.465 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:12:36.467 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:12:36.467 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:12:36.611 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:12:36.611 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:12:36.611 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:12:36.620 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:12:36.640 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:12:36.695 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:12:36.695 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:12:36.696 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:12:36.696 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:12:36.697 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:12:36.697 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:12:36.698 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:12:36.698 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:12:36.699 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:12:36.700 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:12:36.700 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:12:36.700 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:12:36.700 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:12:36.701 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:12:36.722 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:12:36.741 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:12:36.755 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:12:36.759 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:12:36.763 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:12:36.786 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:12:36.788 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:12:36.790 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:12:36.791 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:12:36.792 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:12:36.796 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:12:36.796 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:12:36.796 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:12:36.796 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:12:36.796 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:12:36.796 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:12:36.796 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:12:36.797 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:12:36.797 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:12:36.797 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:12:36.798 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:12:36.798 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:12:36.798 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:12:36.799 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:12:36.821 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:12:36.822 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:12:36.822 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:12:36.822 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:12:36.823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:12:36.823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:12:36.823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:12:36.823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:12:36.823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:12:36.823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:12:36.823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:12:36.823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:12:36.823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:12:36.823 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:12:36.824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:12:36.824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:12:36.824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:12:36.824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:12:36.824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:12:36.824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:12:36.824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:12:36.824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:12:36.824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:12:36.824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:12:36.824 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:12:36.825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:12:36.825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:12:36.825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:12:36.825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:12:36.825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:12:36.825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:12:36.825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:12:36.825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:12:36.825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:12:36.825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:12:36.825 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:12:36.856 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:12:36.858 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:12:36.858 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:12:36.865 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:12:36.887 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:12:36.887 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:12:36.896 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:12:36.896 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:12:36.935 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:12:36.935 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:12:36.935 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:12:36.935 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:12:36.936 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:12:36.936 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:12:36.950 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:12:36.951 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:12:36.951 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:12:36.952 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:12:36.962 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:12:36.965 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:12:36.967 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:12:36.967 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:12:36.967 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:12:36.967 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:12:36.967 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:12:36.967 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:12:36.968 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:12:36.968 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:12:36.968 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:12:36.968 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:12:36.968 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:12:36.968 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:12:36.968 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:12:36.969 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:12:36.969 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:12:36.969 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:12:36.969 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:12:36.969 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:12:36.969 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:12:36.969 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:12:36.970 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:12:36.970 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:12:36.970 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:12:36.970 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:12:36.970 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:12:36.970 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:12:36.970 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:12:36.971 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:12:36.971 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:12:36.971 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:12:36.971 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:12:36.971 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:12:36.971 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:12:36.971 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:12:36.972 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:12:36.972 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:12:36.972 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:12:36.972 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:12:36.972 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:12:36.973 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:12:36.973 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:12:36.973 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:12:36.973 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:12:36.973 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:12:36.973 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:12:36.973 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:12:36.973 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:12:36.974 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:12:36.974 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:12:36.974 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:12:36.974 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:12:36.974 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:12:36.974 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:12:36.974 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:12:36.975 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:12:36.975 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:12:36.975 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:12:36.975 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:12:36.975 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:12:36.975 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:12:36.976 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:12:36.976 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:12:36.976 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:12:36.976 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:12:36.976 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:12:36.976 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:12:36.976 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:12:36.977 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:12:36.977 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:12:36.977 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:12:36.977 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:12:36.989 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:12:36.990 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:12:36.990 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:12:36.992 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:12:37.010 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:12:37.012 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:12:37.012 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:12:37.014 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:12:37.015 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:12:37.015 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:12:37.016 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:12:37.017 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 4aa3c040-92c3-4270-9fa1-7ded65256901 (<unnamed>)
☆ 2017-06-14 19:12:37.018 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:12:37.052 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:12:37.064 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:12:37.067 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:12:37.069 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:12:37.074 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:12:37.076 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:12:37.139 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:14:13.965 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:14:13.973 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:14:13.975 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:14:13.976 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:14:14.040 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:14:14.041 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:14:14.043 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:14:14.055 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:14:14.057 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:14:14.057 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:14:14.061 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:14:14.204 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:14:14.205 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:14:14.205 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:14:14.214 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:14:14.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:14:14.223 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:14:14.229 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:14:14.243 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:14:14.243 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:14:14.243 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:14:14.244 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:14:14.245 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:14:14.245 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:14:14.286 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:14:14.286 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:14:14.286 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:14:14.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:14:14.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:14:14.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:14:14.288 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:14:14.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:14:14.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:14:14.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:14:14.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:14:14.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:14:14.291 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:14:14.291 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:14:14.291 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:14:14.292 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:14:14.293 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:14:14.293 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:14:14.294 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:14:14.294 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:14:14.294 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:14:14.295 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:14:14.296 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:14:14.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:14:14.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:14:14.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:14:14.298 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:14:14.298 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:14:14.299 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:14:14.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:14:14.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:14:14.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:14:14.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:14:14.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:14:14.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:14:14.304 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:14:14.304 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:14:14.304 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:14:14.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:14:14.306 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:14:14.307 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:14:14.307 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:14:14.307 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:14:14.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:14:14.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:14:14.309 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:14:14.309 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:14:14.310 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:14:14.310 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:14:14.311 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:14:14.311 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:14:14.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:14:14.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:14:14.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:14:14.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:14:14.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:14:14.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:14:14.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:14:14.315 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:14:14.315 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:14:14.315 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:14:14.316 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:14:14.316 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:14:14.316 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:14:14.317 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:14:14.317 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:14:14.317 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:14:14.318 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:14:14.318 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:14:14.321 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:14:14.321 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:14:14.322 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:14:14.324 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:14:14.324 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:14:14.327 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:14:14.327 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:14:14.327 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:14:14.330 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:14:14.331 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:14:14.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:14:14.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:14:14.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:14:14.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:14:14.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:14:14.335 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:14:14.335 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:14:14.335 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:14:14.335 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:14:14.335 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:14:14.342 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:14:14.344 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:14:14.345 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:14:14.345 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:14:14.347 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:14:14.347 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:14:14.491 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:14:14.491 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:14:14.491 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:14:14.500 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:14:14.520 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:14:14.577 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:14:14.613 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:14:14.614 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:14:14.614 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:14:14.614 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:14:14.615 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:14:14.615 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:14:14.616 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:14:14.617 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:14:14.617 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:14:14.618 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:14:14.618 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:14:14.618 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:14:14.619 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:14:14.642 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:14:14.668 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:14:14.684 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:14:14.688 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:14:14.693 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:14:14.721 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:14:14.724 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:14:14.725 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:14:14.726 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:14:14.727 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:14:14.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:14:14.731 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:14:14.731 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:14:14.731 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:14:14.731 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:14:14.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:14:14.732 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:14:14.732 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:14:14.732 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:14:14.732 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:14:14.733 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:14:14.733 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:14:14.733 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:14:14.734 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:14:14.757 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:14:14.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:14:14.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:14:14.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:14:14.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:14:14.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:14:14.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:14:14.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:14:14.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:14:14.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:14:14.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:14:14.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:14:14.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:14:14.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:14:14.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:14:14.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:14:14.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:14:14.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:14:14.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:14:14.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:14:14.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:14:14.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:14:14.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:14:14.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:14:14.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:14:14.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:14:14.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:14:14.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:14:14.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:14:14.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:14:14.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:14:14.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:14:14.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:14:14.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:14:14.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:14:14.761 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:14:14.796 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:14:14.798 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:14:14.798 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:14:14.805 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:14:14.826 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:14:14.827 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:14:14.835 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:14:14.835 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:14:14.875 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:14:14.875 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:14:14.875 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:14:14.875 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:14:14.875 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:14:14.875 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:14:14.896 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:14:14.897 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:14.897 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:14.897 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:14.911 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:14.916 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:14.918 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:14:14.918 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:14:14.918 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:14.918 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:14.918 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:14.919 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:14.919 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:14.919 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:14:14.919 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:14:14.919 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:14.920 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:14.920 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:14.920 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:14.920 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:14.920 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:14.920 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:14:14.921 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:14.921 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:14.921 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:14.921 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:14.921 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:14.922 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:14.922 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:14:14.922 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:14.922 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:14.922 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:14.922 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:14.923 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:14.923 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:14.923 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:14:14.923 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:14.923 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:14.923 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:14.924 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:14.924 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:14.924 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:14.924 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:14:14.924 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:14.925 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:14.925 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:14.925 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:14.925 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:14.926 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:14.926 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:14:14.926 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:14.926 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:14.926 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:14.926 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:14.927 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:14.927 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:14.927 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:14:14.927 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:14.927 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:14.927 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:14.928 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:14.928 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:14.928 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:14.928 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:14:14.928 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:14.929 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:14.929 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:14.929 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:14.929 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:14.929 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:14:14.930 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:14:14.930 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:14.930 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:14.930 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:14.930 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:14.930 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:14.931 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:14:14.948 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:14:14.948 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:14:14.949 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:14:14.952 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:14:14.976 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:14:14.979 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:14:14.979 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:14:14.981 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:14:14.983 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:14:14.983 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:14:14.984 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:14:14.986 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: fe7598b9-f688-424e-a1fd-d7fa1f12b4c0 (<unnamed>)
☆ 2017-06-14 19:14:14.987 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:14:15.034 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:14:15.052 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:14:15.056 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:14:15.059 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:14:15.066 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:14:15.068 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:14:15.155 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:14:20.375 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 19:14:20.376 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 19:14:20.376 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:14:20.377 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 19:14:36.680 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:14:36.687 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:14:36.689 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:14:36.690 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:14:36.757 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:14:36.758 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:14:36.759 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:14:36.772 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:14:36.774 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:14:36.774 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:14:36.777 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:14:36.921 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:14:36.921 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:14:36.921 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:14:36.930 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:14:36.931 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:14:36.940 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:14:36.945 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:14:36.959 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:14:36.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:14:36.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:14:36.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:14:36.998 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:14:36.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:14:37.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:14:37.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:14:37.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:14:37.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:14:37.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:14:37.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:14:37.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:14:37.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:14:37.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:14:37.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:14:37.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:14:37.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:14:37.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:14:37.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:14:37.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:14:37.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:14:37.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:14:37.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:14:37.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:14:37.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:14:37.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:14:37.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:14:37.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:14:37.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:14:37.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:14:37.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:14:37.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:14:37.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:14:37.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:14:37.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:14:37.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:14:37.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:14:37.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:14:37.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:14:37.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:14:37.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:14:37.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:14:37.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:14:37.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:14:37.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:14:37.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:14:37.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:14:37.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:14:37.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:14:37.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:14:37.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:14:37.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:14:37.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:14:37.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:14:37.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:14:37.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:14:37.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:14:37.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:14:37.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:14:37.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:14:37.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:14:37.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:14:37.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:14:37.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:14:37.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:14:37.029 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:14:37.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:14:37.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:14:37.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:14:37.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:14:37.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:14:37.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:14:37.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:14:37.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:14:37.035 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:14:37.035 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:14:37.035 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:14:37.038 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:14:37.038 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:14:37.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:14:37.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:14:37.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:14:37.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:14:37.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:14:37.046 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:14:37.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:14:37.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:14:37.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:14:37.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:14:37.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:14:37.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:14:37.048 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:14:37.048 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:14:37.048 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:14:37.055 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:14:37.057 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:14:37.058 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:14:37.058 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:14:37.060 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:14:37.060 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:14:37.205 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:14:37.206 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:14:37.206 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:14:37.214 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:14:37.234 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:14:37.289 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:14:37.289 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:14:37.290 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:14:37.290 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:14:37.290 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:14:37.291 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:14:37.291 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:14:37.292 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:14:37.292 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:14:37.293 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:14:37.293 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:14:37.293 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:14:37.294 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:14:37.294 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:14:37.316 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:14:37.334 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:14:37.348 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:14:37.352 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:14:37.357 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:14:37.379 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:14:37.382 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:14:37.383 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:14:37.384 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:14:37.385 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:14:37.389 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:14:37.389 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:14:37.389 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:14:37.389 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:14:37.389 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:14:37.390 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:14:37.390 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:14:37.390 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:14:37.390 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:14:37.390 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:14:37.391 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:14:37.391 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:14:37.391 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:14:37.392 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:14:37.415 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:14:37.416 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:14:37.416 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:14:37.416 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:14:37.416 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:14:37.416 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:14:37.416 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:14:37.416 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:14:37.416 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:14:37.416 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:14:37.417 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:14:37.417 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:14:37.417 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:14:37.417 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:14:37.417 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:14:37.417 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:14:37.417 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:14:37.417 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:14:37.417 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:14:37.417 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:14:37.417 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:14:37.418 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:14:37.418 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:14:37.418 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:14:37.418 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:14:37.418 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:14:37.418 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:14:37.418 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:14:37.418 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:14:37.418 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:14:37.418 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:14:37.419 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:14:37.419 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:14:37.419 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:14:37.419 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:14:37.419 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:14:37.451 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:14:37.452 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:14:37.452 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:14:37.460 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:14:37.482 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:14:37.488 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:14:37.497 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:14:37.497 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:14:37.537 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:14:37.537 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:14:37.537 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:14:37.537 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:14:37.537 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:14:37.537 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:14:37.552 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:14:37.553 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:37.553 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:37.553 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:37.563 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:37.566 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:37.568 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:14:37.568 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:14:37.568 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:37.569 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:37.569 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:37.569 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:37.569 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:37.569 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:14:37.569 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:14:37.569 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:37.570 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:37.570 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:37.570 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:37.570 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:37.570 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:37.570 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:14:37.570 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:37.570 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:37.571 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:37.571 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:37.571 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:37.571 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:37.571 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:14:37.571 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:37.571 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:37.572 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:37.572 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:37.572 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:37.572 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:37.572 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:14:37.572 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:37.572 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:37.572 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:37.573 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:37.573 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:37.573 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:37.573 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:14:37.573 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:37.573 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:37.574 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:37.574 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:37.574 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:37.574 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:37.574 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:14:37.574 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:37.575 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:37.575 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:37.575 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:37.575 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:37.575 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:37.575 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:14:37.575 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:37.575 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:37.576 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:37.576 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:37.576 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:37.576 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:14:37.576 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:14:37.576 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:37.576 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:37.577 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:37.577 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:37.577 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:37.577 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:14:37.577 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:14:37.577 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:14:37.577 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:14:37.578 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:14:37.578 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:14:37.578 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:14:37.578 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:14:37.590 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:14:37.591 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:14:37.591 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:14:37.593 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:14:37.611 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:14:37.613 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:14:37.614 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:14:37.615 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:14:37.616 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:14:37.616 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:14:37.617 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:14:37.619 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: a1409e95-5ebf-4d5d-95d3-a0bfe5794f7e (<unnamed>)
☆ 2017-06-14 19:14:37.619 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:14:37.654 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:14:37.667 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:14:37.674 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:14:37.676 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:14:37.682 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:14:37.683 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:14:37.756 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:19:47.963 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:19:47.970 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:19:47.972 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:19:47.973 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:19:48.038 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:19:48.039 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:19:48.040 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:19:48.054 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:19:48.055 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:19:48.055 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:19:48.059 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:19:48.205 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:19:48.205 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:19:48.205 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:19:48.214 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:19:48.215 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:19:48.224 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:19:48.229 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:19:48.283 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:19:48.284 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:19:48.284 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:19:48.284 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:19:48.285 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:19:48.286 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:19:48.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:19:48.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:19:48.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:19:48.288 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:19:48.288 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:19:48.288 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:19:48.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:19:48.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:19:48.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:19:48.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:19:48.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:19:48.291 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:19:48.292 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:19:48.292 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:19:48.292 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:19:48.293 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:19:48.294 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:19:48.294 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:19:48.295 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:19:48.295 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:19:48.295 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:19:48.296 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:19:48.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:19:48.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:19:48.298 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:19:48.298 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:19:48.299 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:19:48.299 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:19:48.300 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:19:48.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:19:48.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:19:48.302 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:19:48.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:19:48.304 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:19:48.304 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:19:48.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:19:48.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:19:48.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:19:48.307 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:19:48.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:19:48.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:19:48.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:19:48.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:19:48.309 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:19:48.309 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:19:48.310 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:19:48.310 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:19:48.311 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:19:48.311 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:19:48.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:19:48.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:19:48.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:19:48.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:19:48.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:19:48.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:19:48.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:19:48.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:19:48.315 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:19:48.315 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:19:48.315 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:19:48.316 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:19:48.317 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:19:48.317 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:19:48.317 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:19:48.318 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:19:48.318 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:19:48.318 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:19:48.318 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:19:48.319 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:19:48.321 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:19:48.322 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:19:48.322 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:19:48.324 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:19:48.325 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:19:48.327 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:19:48.327 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:19:48.327 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:19:48.330 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:19:48.331 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:19:48.333 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:19:48.333 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:19:48.333 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:19:48.333 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:19:48.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:19:48.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:19:48.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:19:48.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:19:48.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:19:48.334 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:19:48.342 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:19:48.344 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:19:48.344 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:19:48.344 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:19:48.346 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:19:48.347 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:19:48.491 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:19:48.491 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:19:48.491 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:19:48.500 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:19:48.520 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:19:48.575 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:19:48.576 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:19:48.576 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:19:48.576 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:19:48.576 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:19:48.577 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:19:48.577 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:19:48.578 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:19:48.579 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:19:48.579 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:19:48.580 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:19:48.580 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:19:48.580 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:19:48.581 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:19:48.602 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:19:48.620 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:19:48.634 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:19:48.638 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:19:48.642 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:19:48.665 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:19:48.668 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:19:48.669 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:19:48.670 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:19:48.672 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:19:48.675 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:19:48.675 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:19:48.675 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:19:48.676 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:19:48.676 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:19:48.676 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:19:48.676 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:19:48.676 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:19:48.676 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:19:48.676 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:19:48.677 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:19:48.677 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:19:48.677 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:19:48.679 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:19:48.701 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:19:48.702 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:19:48.702 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:19:48.702 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:19:48.702 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:19:48.702 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:19:48.702 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:19:48.702 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:19:48.702 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:19:48.702 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:19:48.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:19:48.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:19:48.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:19:48.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:19:48.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:19:48.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:19:48.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:19:48.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:19:48.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:19:48.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:19:48.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:19:48.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:19:48.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:19:48.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:19:48.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:19:48.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:19:48.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:19:48.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:19:48.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:19:48.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:19:48.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:19:48.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:19:48.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:19:48.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:19:48.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:19:48.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:19:48.736 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:19:48.738 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:19:48.762 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:19:48.772 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:19:48.794 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:19:48.795 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:19:48.803 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:19:48.803 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:19:48.844 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:19:48.844 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:19:48.844 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:19:48.844 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:19:48.844 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:19:48.844 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:19:48.858 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:19:48.859 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:19:48.859 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:19:48.859 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:19:48.869 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:19:48.872 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:19:48.874 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:19:48.874 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:19:48.874 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:19:48.874 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:19:48.874 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:19:48.874 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:19:48.874 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:19:48.875 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:19:48.875 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:19:48.875 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:19:48.875 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:19:48.875 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:19:48.875 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:19:48.875 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:19:48.875 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:19:48.876 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:19:48.876 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:19:48.876 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:19:48.876 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:19:48.876 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:19:48.876 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:19:48.876 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:19:48.876 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:19:48.877 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:19:48.877 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:19:48.877 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:19:48.877 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:19:48.877 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:19:48.877 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:19:48.877 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:19:48.877 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:19:48.877 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:19:48.878 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:19:48.878 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:19:48.878 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:19:48.878 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:19:48.878 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:19:48.878 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:19:48.879 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:19:48.879 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:19:48.879 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:19:48.879 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:19:48.879 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:19:48.880 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:19:48.880 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:19:48.880 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:19:48.880 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:19:48.880 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:19:48.880 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:19:48.880 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:19:48.880 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:19:48.881 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:19:48.881 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:19:48.881 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:19:48.881 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:19:48.881 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:19:48.881 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:19:48.881 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:19:48.881 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:19:48.881 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:19:48.882 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:19:48.882 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:19:48.882 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:19:48.882 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:19:48.882 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:19:48.882 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:19:48.882 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:19:48.882 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:19:48.883 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:19:48.883 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:19:48.883 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:19:48.895 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:19:48.895 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:19:48.895 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:19:48.897 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:19:48.915 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:19:48.917 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:19:48.917 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:19:48.919 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:19:48.920 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:19:48.920 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:19:48.921 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:19:48.922 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 5b56b265-973c-449e-baf1-68033f605a7f (<unnamed>)
☆ 2017-06-14 19:19:48.922 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:19:48.955 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:19:48.967 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:19:48.970 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:19:48.972 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:19:48.977 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:19:48.979 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:19:49.040 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:21:42.413 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:21:42.420 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:21:42.422 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:21:42.423 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:21:42.494 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:21:42.495 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:21:42.496 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:21:42.509 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:21:42.510 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:21:42.510 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:21:42.514 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:21:42.657 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:21:42.657 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:21:42.657 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:21:42.665 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:21:42.666 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:21:42.675 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:21:42.681 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:21:42.694 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:21:42.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:21:42.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:21:42.696 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:21:42.696 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:21:42.697 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:21:42.698 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:21:42.698 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:21:42.698 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:21:42.737 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:21:42.738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:21:42.738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:21:42.739 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:21:42.739 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:21:42.739 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:21:42.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:21:42.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:21:42.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:21:42.741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:21:42.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:21:42.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:21:42.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:21:42.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:21:42.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:21:42.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:21:42.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:21:42.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:21:42.746 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:21:42.746 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:21:42.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:21:42.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:21:42.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:21:42.748 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:21:42.748 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:21:42.749 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:21:42.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:21:42.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:21:42.751 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:21:42.751 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:21:42.752 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:21:42.753 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:21:42.754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:21:42.754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:21:42.754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:21:42.755 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:21:42.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:21:42.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:21:42.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:21:42.757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:21:42.758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:21:42.758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:21:42.759 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:21:42.759 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:21:42.760 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:21:42.760 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:21:42.760 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:21:42.760 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:21:42.761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:21:42.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:21:42.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:21:42.763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:21:42.763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:21:42.763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:21:42.764 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:21:42.764 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:21:42.764 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:21:42.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:21:42.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:21:42.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:21:42.766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:21:42.766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:21:42.766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:21:42.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:21:42.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:21:42.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:21:42.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:21:42.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:21:42.771 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:21:42.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:21:42.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:21:42.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:21:42.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:21:42.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:21:42.779 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:21:42.780 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:21:42.782 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:21:42.782 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:21:42.783 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:21:42.783 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:21:42.783 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:21:42.783 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:21:42.783 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:21:42.783 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:21:42.783 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:21:42.784 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:21:42.791 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:21:42.793 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:21:42.793 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:21:42.794 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:21:42.796 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:21:42.796 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:21:42.947 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:21:42.948 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:21:42.948 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:21:42.960 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:21:42.985 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:21:43.041 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:21:43.042 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:21:43.042 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:21:43.042 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:21:43.042 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:21:43.043 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:21:43.043 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:21:43.044 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:21:43.045 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:21:43.045 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:21:43.045 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:21:43.046 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:21:43.046 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:21:43.047 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:21:43.071 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:21:43.092 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:21:43.109 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:21:43.113 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:21:43.118 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:21:43.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:21:43.148 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:21:43.180 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:21:43.181 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:21:43.182 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:21:43.185 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:21:43.186 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:21:43.186 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:21:43.186 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:21:43.186 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:21:43.186 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:21:43.186 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:21:43.186 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:21:43.186 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:21:43.187 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:21:43.187 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:21:43.188 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:21:43.188 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:21:43.189 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:21:43.211 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:21:43.212 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:21:43.212 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:21:43.212 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:21:43.212 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:21:43.212 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:21:43.212 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:21:43.212 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:21:43.213 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:21:43.213 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:21:43.213 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:21:43.213 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:21:43.213 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:21:43.213 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:21:43.213 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:21:43.213 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:21:43.213 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:21:43.213 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:21:43.213 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:21:43.213 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:21:43.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:21:43.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:21:43.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:21:43.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:21:43.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:21:43.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:21:43.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:21:43.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:21:43.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:21:43.214 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:21:43.215 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:21:43.215 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:21:43.215 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:21:43.215 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:21:43.215 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:21:43.215 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:21:43.251 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:21:43.252 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:21:43.252 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:21:43.259 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:21:43.281 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:21:43.281 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:21:43.290 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:21:43.290 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:21:43.340 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:21:43.340 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:21:43.340 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:21:43.340 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:21:43.341 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:21:43.341 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:21:43.361 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:21:43.362 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:21:43.362 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:21:43.363 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:21:43.375 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:21:43.378 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:21:43.380 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:21:43.380 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:21:43.380 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:21:43.381 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:21:43.381 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:21:43.381 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:21:43.381 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:21:43.381 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:21:43.382 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:21:43.382 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:21:43.382 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:21:43.382 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:21:43.382 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:21:43.382 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:21:43.382 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:21:43.383 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:21:43.383 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:21:43.383 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:21:43.383 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:21:43.383 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:21:43.383 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:21:43.383 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:21:43.383 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:21:43.384 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:21:43.384 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:21:43.384 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:21:43.384 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:21:43.384 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:21:43.384 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:21:43.384 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:21:43.384 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:21:43.384 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:21:43.385 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:21:43.385 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:21:43.385 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:21:43.385 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:21:43.385 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:21:43.385 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:21:43.386 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:21:43.386 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:21:43.386 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:21:43.386 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:21:43.386 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:21:43.386 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:21:43.386 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:21:43.388 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:21:43.388 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:21:43.388 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:21:43.388 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:21:43.388 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:21:43.389 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:21:43.389 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:21:43.389 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:21:43.389 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:21:43.389 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:21:43.389 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:21:43.390 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:21:43.390 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:21:43.390 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:21:43.390 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:21:43.390 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:21:43.390 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:21:43.390 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:21:43.391 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:21:43.391 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:21:43.391 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:21:43.391 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:21:43.391 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:21:43.391 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:21:43.392 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:21:43.392 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:21:43.405 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:21:43.405 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:21:43.405 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:21:43.407 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:21:43.425 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:21:43.427 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:21:43.428 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:21:43.429 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:21:43.430 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:21:43.430 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:21:43.431 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:21:43.432 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 2cda4b2f-27bd-4e1b-aa8a-bcca6d1b31d2 (<unnamed>)
☆ 2017-06-14 19:21:43.432 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:21:43.465 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:21:43.477 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:21:43.480 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:21:43.482 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:21:43.487 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:21:43.488 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:21:43.553 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:22:53.958 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:22:53.966 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:22:53.967 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:22:53.969 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:22:54.036 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:22:54.037 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:22:54.038 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:22:54.051 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:22:54.053 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:22:54.053 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:22:54.056 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:22:54.199 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:22:54.199 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:22:54.200 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:22:54.208 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:22:54.209 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:22:54.218 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:22:54.223 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:22:54.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:22:54.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:22:54.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:22:54.239 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:22:54.240 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:22:54.284 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:22:54.285 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:22:54.285 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:22:54.286 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:22:54.286 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:22:54.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:22:54.287 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:22:54.288 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:22:54.288 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:22:54.288 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:22:54.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:22:54.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:22:54.289 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:22:54.290 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:22:54.291 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:22:54.291 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:22:54.292 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:22:54.292 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:22:54.292 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:22:54.293 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:22:54.294 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:22:54.294 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:22:54.295 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:22:54.295 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:22:54.296 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:22:54.296 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:22:54.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:22:54.297 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:22:54.298 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:22:54.298 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:22:54.299 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:22:54.299 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:22:54.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:22:54.301 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:22:54.302 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:22:54.302 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:22:54.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:22:54.303 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:22:54.304 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:22:54.305 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:22:54.306 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:22:54.306 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:22:54.306 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:22:54.307 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:22:54.307 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:22:54.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:22:54.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:22:54.308 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:22:54.309 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:22:54.309 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:22:54.310 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:22:54.310 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:22:54.311 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:22:54.311 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:22:54.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:22:54.312 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:22:54.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:22:54.313 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:22:54.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:22:54.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:22:54.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:22:54.314 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:22:54.315 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:22:54.315 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:22:54.315 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:22:54.316 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:22:54.316 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:22:54.316 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:22:54.317 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:22:54.317 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:22:54.320 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:22:54.320 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:22:54.320 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:22:54.323 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:22:54.323 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:22:54.325 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:22:54.325 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:22:54.325 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:22:54.328 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:22:54.329 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:22:54.331 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:22:54.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:22:54.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:22:54.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:22:54.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:22:54.332 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:22:54.333 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:22:54.333 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:22:54.333 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:22:54.333 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:22:54.341 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:22:54.343 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:22:54.343 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:22:54.343 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:22:54.345 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:22:54.346 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:22:54.491 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:22:54.491 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:22:54.492 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:22:54.500 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:22:54.520 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:22:54.576 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:22:54.576 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:22:54.576 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:22:54.577 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:22:54.577 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:22:54.578 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:22:54.578 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:22:54.579 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:22:54.579 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:22:54.580 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:22:54.580 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:22:54.581 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:22:54.581 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:22:54.581 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:22:54.603 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:22:54.621 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:22:54.636 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:22:54.640 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:22:54.644 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:22:54.667 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:22:54.669 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:22:54.671 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:22:54.672 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:22:54.673 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:22:54.676 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:22:54.677 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:22:54.677 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:22:54.677 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:22:54.677 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:22:54.677 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:22:54.677 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:22:54.678 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:22:54.678 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:22:54.678 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:22:54.679 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:22:54.679 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:22:54.679 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:22:54.680 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:22:54.702 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:22:54.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:22:54.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:22:54.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:22:54.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:22:54.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:22:54.703 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:22:54.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:22:54.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:22:54.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:22:54.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:22:54.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:22:54.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:22:54.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:22:54.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:22:54.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:22:54.704 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:22:54.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:22:54.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:22:54.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:22:54.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:22:54.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:22:54.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:22:54.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:22:54.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:22:54.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:22:54.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:22:54.705 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:22:54.706 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:22:54.706 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:22:54.706 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:22:54.706 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:22:54.706 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:22:54.706 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:22:54.706 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:22:54.706 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:22:54.737 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:22:54.739 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:22:54.739 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:22:54.746 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:22:54.768 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:22:54.768 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:22:54.777 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:22:54.777 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:22:54.818 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:22:54.818 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:22:54.818 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:22:54.818 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:22:54.818 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:22:54.818 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:22:54.833 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:22:54.834 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:22:54.834 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:22:54.834 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:22:54.844 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:22:54.848 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:22:54.850 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:22:54.850 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:22:54.850 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:22:54.850 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:22:54.850 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:22:54.850 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:22:54.851 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:22:54.851 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:22:54.851 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:22:54.851 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:22:54.851 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:22:54.851 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:22:54.851 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:22:54.852 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:22:54.852 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:22:54.852 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:22:54.852 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:22:54.852 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:22:54.852 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:22:54.852 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:22:54.852 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:22:54.853 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:22:54.853 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:22:54.853 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:22:54.853 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:22:54.853 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:22:54.853 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:22:54.853 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:22:54.853 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:22:54.854 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:22:54.854 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:22:54.854 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:22:54.854 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:22:54.854 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:22:54.854 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:22:54.854 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:22:54.855 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:22:54.855 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:22:54.855 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:22:54.855 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:22:54.855 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:22:54.855 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:22:54.856 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:22:54.856 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:22:54.856 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:22:54.856 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:22:54.856 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:22:54.856 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:22:54.856 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:22:54.857 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:22:54.857 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:22:54.857 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:22:54.857 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:22:54.857 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:22:54.857 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:22:54.857 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:22:54.858 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:22:54.858 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:22:54.858 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:22:54.858 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:22:54.858 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:22:54.858 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:22:54.858 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:22:54.859 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:22:54.859 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:22:54.859 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:22:54.859 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:22:54.859 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:22:54.859 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:22:54.859 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:22:54.860 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:22:54.872 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:22:54.872 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:22:54.872 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:22:54.874 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:22:54.892 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:22:54.894 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:22:54.895 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:22:54.896 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:22:54.897 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:22:54.897 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:22:54.898 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:22:54.900 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: cf00a35e-65cd-44f4-b9f5-f3db29327b7d (<unnamed>)
☆ 2017-06-14 19:22:54.900 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:22:54.934 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:22:54.947 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:22:54.950 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:22:54.952 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:22:54.958 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:22:54.959 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:22:55.023 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:22:59.284 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 19:22:59.285 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 19:22:59.285 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:22:59.286 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 19:27:29.776 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:27:29.784 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:27:29.785 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:27:29.787 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:27:29.853 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:27:29.854 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:27:29.855 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:27:29.868 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:27:29.869 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:27:29.870 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:27:29.873 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:27:30.026 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:27:30.026 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:27:30.026 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:27:30.035 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:27:30.036 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:27:30.045 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:27:30.051 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:27:30.066 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:27:30.066 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:27:30.066 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:27:30.067 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:27:30.068 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:27:30.068 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:27:30.106 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:27:30.106 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:27:30.106 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:27:30.107 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:27:30.108 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:27:30.108 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:27:30.109 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:27:30.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:27:30.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:27:30.111 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:27:30.111 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:27:30.111 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:27:30.113 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:27:30.113 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:27:30.113 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:27:30.114 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:27:30.114 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:27:30.115 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:27:30.116 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:27:30.116 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:27:30.116 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:27:30.117 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:27:30.117 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:27:30.118 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:27:30.118 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:27:30.119 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:27:30.119 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:27:30.120 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:27:30.120 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:27:30.121 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:27:30.121 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:27:30.122 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:27:30.123 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:27:30.124 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:27:30.124 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:27:30.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:27:30.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:27:30.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:27:30.127 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:27:30.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:27:30.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:27:30.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:27:30.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:27:30.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:27:30.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:27:30.130 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:27:30.130 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:27:30.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:27:30.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:27:30.132 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:27:30.132 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:27:30.133 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:27:30.133 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:27:30.133 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:27:30.134 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:27:30.135 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:27:30.135 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:27:30.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:27:30.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:27:30.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:27:30.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:27:30.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:27:30.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:27:30.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:27:30.138 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:27:30.138 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:27:30.138 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:27:30.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:27:30.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:27:30.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:27:30.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:27:30.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:27:30.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:27:30.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:27:30.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:27:30.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:27:30.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:27:30.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:27:30.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:27:30.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:27:30.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:27:30.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:27:30.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:27:30.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:27:30.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:27:30.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:27:30.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:27:30.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:27:30.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:27:30.164 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:27:30.166 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:27:30.166 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:27:30.166 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:27:30.169 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:27:30.169 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:27:30.317 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:27:30.317 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:27:30.317 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:27:30.325 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:27:30.345 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:27:30.401 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:27:30.401 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:27:30.402 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:27:30.402 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:27:30.402 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:27:30.403 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:27:30.403 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:27:30.404 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:27:30.405 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:27:30.405 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:27:30.406 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:27:30.406 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:27:30.406 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:27:30.407 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:27:30.428 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:27:30.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:27:30.463 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:27:30.468 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:27:30.472 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:27:30.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:27:30.498 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:27:30.499 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:27:30.500 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:27:30.501 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:27:30.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:27:30.505 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:27:30.505 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:27:30.505 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:27:30.505 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:27:30.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:27:30.506 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:27:30.506 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:27:30.506 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:27:30.506 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:27:30.507 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:27:30.507 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:27:30.507 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:27:30.508 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:27:30.531 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:27:30.532 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:27:30.532 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:27:30.532 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:27:30.532 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:27:30.532 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:27:30.532 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:27:30.532 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:27:30.532 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:27:30.533 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:27:30.533 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:27:30.533 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:27:30.533 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:27:30.533 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:27:30.533 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:27:30.533 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:27:30.533 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:27:30.533 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:27:30.533 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:27:30.534 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:27:30.534 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:27:30.534 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:27:30.534 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:27:30.534 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:27:30.534 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:27:30.534 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:27:30.534 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:27:30.534 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:27:30.534 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:27:30.535 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:27:30.535 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:27:30.535 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:27:30.535 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:27:30.535 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:27:30.535 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:27:30.535 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:27:30.567 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:27:30.569 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:27:30.569 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:27:30.576 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:27:30.599 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:27:30.599 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:27:30.608 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:27:30.608 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:27:30.649 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:27:30.649 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:27:30.649 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:27:30.649 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:27:30.649 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:27:30.649 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:27:30.664 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:27:30.665 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:27:30.665 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:27:30.665 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:27:30.676 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:27:30.679 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:27:30.681 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:27:30.682 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:27:30.682 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:27:30.682 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:27:30.682 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:27:30.682 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:27:30.683 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:27:30.683 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:27:30.683 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:27:30.683 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:27:30.683 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:27:30.683 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:27:30.683 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:27:30.684 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:27:30.684 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:27:30.684 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:27:30.684 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:27:30.684 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:27:30.685 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:27:30.685 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:27:30.685 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:27:30.685 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:27:30.685 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:27:30.686 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:27:30.686 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:27:30.686 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:27:30.686 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:27:30.686 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:27:30.687 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:27:30.687 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:27:30.687 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:27:30.687 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:27:30.687 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:27:30.687 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:27:30.688 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:27:30.688 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:27:30.688 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:27:30.688 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:27:30.689 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:27:30.689 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:27:30.689 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:27:30.689 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:27:30.690 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:27:30.690 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:27:30.690 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:27:30.690 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:27:30.690 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:27:30.690 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:27:30.691 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:27:30.691 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:27:30.691 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:27:30.691 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:27:30.691 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:27:30.691 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:27:30.692 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:27:30.692 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:27:30.692 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:27:30.692 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:27:30.692 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:27:30.692 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:27:30.693 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:27:30.693 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:27:30.693 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:27:30.693 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:27:30.693 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:27:30.694 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:27:30.694 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:27:30.694 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:27:30.694 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:27:30.694 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:27:30.695 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:27:30.708 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:27:30.708 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:27:30.708 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:27:30.711 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:27:30.729 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:27:30.732 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:27:30.733 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:27:30.735 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:27:30.736 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:27:30.736 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:27:30.737 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:27:30.739 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 16e7ce41-8aa2-41a0-9ac7-fe79a09841d0 (<unnamed>)
☆ 2017-06-14 19:27:30.739 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:27:30.775 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:27:30.789 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:27:30.792 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:27:30.794 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:27:30.800 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:27:30.802 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:27:30.868 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:32:15.218 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:32:15.225 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:32:15.227 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:32:15.228 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:32:15.296 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:32:15.297 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:32:15.298 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:32:15.312 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:32:15.313 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:32:15.313 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:32:15.318 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:32:15.477 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:32:15.477 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:32:15.477 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:32:15.485 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:32:15.486 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:32:15.495 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:32:15.501 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:32:15.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:32:15.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:32:15.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:32:15.554 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:32:15.555 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:32:15.556 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:32:15.557 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:32:15.557 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:32:15.557 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:32:15.558 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:32:15.558 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:32:15.558 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:32:15.559 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:32:15.560 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:32:15.560 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:32:15.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:32:15.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:32:15.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:32:15.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:32:15.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:32:15.563 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:32:15.564 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:32:15.564 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:32:15.565 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:32:15.566 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:32:15.566 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:32:15.566 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:32:15.567 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:32:15.567 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:32:15.568 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:32:15.568 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:32:15.569 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:32:15.569 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:32:15.570 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:32:15.570 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:32:15.571 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:32:15.571 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:32:15.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:32:15.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:32:15.574 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:32:15.574 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:32:15.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:32:15.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:32:15.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:32:15.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:32:15.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:32:15.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:32:15.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:32:15.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:32:15.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:32:15.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:32:15.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:32:15.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:32:15.581 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:32:15.581 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:32:15.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:32:15.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:32:15.583 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:32:15.583 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:32:15.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:32:15.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:32:15.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:32:15.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:32:15.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:32:15.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:32:15.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:32:15.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:32:15.587 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:32:15.587 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:32:15.587 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:32:15.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:32:15.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:32:15.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:32:15.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:32:15.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:32:15.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:32:15.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:32:15.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:32:15.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:32:15.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:32:15.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:32:15.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:32:15.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:32:15.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:32:15.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:32:15.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:32:15.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:32:15.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:32:15.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:32:15.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:32:15.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:32:15.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:32:15.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:32:15.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:32:15.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:32:15.613 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:32:15.616 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:32:15.616 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:32:15.616 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:32:15.618 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:32:15.618 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:32:15.763 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:32:15.763 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:32:15.763 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:32:15.772 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:32:15.791 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:32:15.847 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:32:15.847 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:32:15.848 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:32:15.848 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:32:15.848 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:32:15.849 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:32:15.849 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:32:15.850 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:32:15.851 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:32:15.851 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:32:15.851 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:32:15.852 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:32:15.852 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:32:15.852 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:32:15.874 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:32:15.893 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:32:15.907 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:32:15.912 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:32:15.916 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:32:15.939 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:32:15.941 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:32:15.943 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:32:15.944 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:32:15.945 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:32:15.948 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:32:15.949 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:32:15.949 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:32:15.949 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:32:15.949 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:32:15.949 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:32:15.950 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:32:15.950 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:32:15.950 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:32:15.950 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:32:15.951 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:32:15.951 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:32:15.951 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:32:15.952 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:32:15.975 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:32:15.976 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:32:15.976 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:32:15.976 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:32:15.976 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:32:15.976 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:32:15.976 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:32:15.976 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:32:15.976 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:32:15.976 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:32:15.976 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:32:15.977 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:32:15.977 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:32:15.977 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:32:15.977 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:32:15.977 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:32:15.977 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:32:15.977 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:32:15.977 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:32:15.977 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:32:15.977 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:32:15.977 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:32:15.978 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:32:15.978 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:32:15.978 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:32:15.978 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:32:15.978 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:32:15.978 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:32:15.978 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:32:15.978 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:32:15.978 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:32:15.978 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:32:15.979 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:32:15.979 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:32:15.979 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:32:15.979 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:32:16.010 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:32:16.012 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:32:16.012 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:32:16.019 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:32:16.042 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:32:16.042 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:32:16.050 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:32:16.051 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:32:16.091 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:32:16.091 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:32:16.091 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:32:16.091 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:32:16.091 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:32:16.091 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:32:16.106 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:32:16.107 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:32:16.107 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:32:16.107 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:32:16.117 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:32:16.120 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:32:16.122 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:32:16.122 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:32:16.122 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:32:16.122 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:32:16.123 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:32:16.123 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:32:16.123 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:32:16.123 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:32:16.123 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:32:16.123 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:32:16.124 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:32:16.124 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:32:16.124 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:32:16.124 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:32:16.124 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:32:16.124 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:32:16.124 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:32:16.125 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:32:16.125 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:32:16.125 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:32:16.125 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:32:16.125 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:32:16.125 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:32:16.125 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:32:16.126 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:32:16.126 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:32:16.126 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:32:16.126 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:32:16.126 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:32:16.126 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:32:16.126 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:32:16.126 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:32:16.127 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:32:16.127 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:32:16.127 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:32:16.127 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:32:16.127 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:32:16.127 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:32:16.128 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:32:16.128 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:32:16.128 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:32:16.128 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:32:16.128 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:32:16.129 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:32:16.129 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:32:16.129 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:32:16.129 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:32:16.129 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:32:16.129 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:32:16.129 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:32:16.130 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:32:16.130 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:32:16.130 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:32:16.130 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:32:16.130 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:32:16.130 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:32:16.130 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:32:16.131 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:32:16.131 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:32:16.131 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:32:16.131 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:32:16.131 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:32:16.132 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:32:16.132 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:32:16.132 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:32:16.132 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:32:16.132 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:32:16.132 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:32:16.132 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:32:16.133 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:32:16.133 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:32:16.145 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:32:16.145 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:32:16.146 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:32:16.148 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:32:16.166 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:32:16.168 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:32:16.169 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:32:16.170 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:32:16.171 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:32:16.171 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:32:16.173 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:32:16.174 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 80c7f58e-6623-4675-9240-beeeb8519baa (<unnamed>)
☆ 2017-06-14 19:32:16.174 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:32:16.209 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:32:16.222 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:32:16.225 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:32:16.227 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:32:16.232 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:32:16.234 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:32:16.296 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:33:54.693 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:33:54.700 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:33:54.702 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:33:54.703 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:33:54.769 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:33:54.770 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:33:54.771 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:33:54.785 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:33:54.786 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:33:54.787 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:33:54.790 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:33:54.934 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:33:54.934 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:33:54.935 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:33:54.943 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:33:54.944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:33:54.953 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:33:54.959 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:33:54.972 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@37b124db
☆ 2017-06-14 19:33:54.973 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@37b124db
☆ 2017-06-14 19:33:55.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@37b124db
☆ 2017-06-14 19:33:55.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d87c7fd
☆ 2017-06-14 19:33:55.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@537477c0
☆ 2017-06-14 19:33:55.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@742f9670
☆ 2017-06-14 19:33:55.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@17853ebc
☆ 2017-06-14 19:33:55.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@17853ebc
☆ 2017-06-14 19:33:55.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17853ebc
☆ 2017-06-14 19:33:55.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@25e98757
☆ 2017-06-14 19:33:55.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@25e98757
☆ 2017-06-14 19:33:55.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@25e98757
☆ 2017-06-14 19:33:55.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@2aa19f30
☆ 2017-06-14 19:33:55.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@2aa19f30
☆ 2017-06-14 19:33:55.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2aa19f30
☆ 2017-06-14 19:33:55.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@75ebbe66
☆ 2017-06-14 19:33:55.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@75ebbe66
☆ 2017-06-14 19:33:55.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@75ebbe66
☆ 2017-06-14 19:33:55.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@753ebd7c
☆ 2017-06-14 19:33:55.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@753ebd7c
☆ 2017-06-14 19:33:55.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@753ebd7c
☆ 2017-06-14 19:33:55.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@3d21b3e0
☆ 2017-06-14 19:33:55.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@3d21b3e0
☆ 2017-06-14 19:33:55.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3d21b3e0
☆ 2017-06-14 19:33:55.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@50dc0344
☆ 2017-06-14 19:33:55.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@50dc0344
☆ 2017-06-14 19:33:55.029 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@50dc0344
☆ 2017-06-14 19:33:55.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1ddbbc5e
☆ 2017-06-14 19:33:55.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1ddbbc5e
☆ 2017-06-14 19:33:55.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1719d4be
☆ 2017-06-14 19:33:55.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1719d4be
☆ 2017-06-14 19:33:55.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@505990ca
☆ 2017-06-14 19:33:55.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@505990ca
☆ 2017-06-14 19:33:55.033 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2fb336e6
☆ 2017-06-14 19:33:55.034 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@16443b3a
☆ 2017-06-14 19:33:55.035 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@463029ed
☆ 2017-06-14 19:33:55.035 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@463029ed
☆ 2017-06-14 19:33:55.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@18aa6bd9
☆ 2017-06-14 19:33:55.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@18aa6bd9
☆ 2017-06-14 19:33:55.039 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@76cebc0d
☆ 2017-06-14 19:33:55.039 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76cebc0d
☆ 2017-06-14 19:33:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@1342e455
☆ 2017-06-14 19:33:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1342e455
☆ 2017-06-14 19:33:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1342e455
☆ 2017-06-14 19:33:55.042 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@79381875
☆ 2017-06-14 19:33:55.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@6665b6e3
☆ 2017-06-14 19:33:55.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6665b6e3
☆ 2017-06-14 19:33:55.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6665b6e3
☆ 2017-06-14 19:33:55.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@759ec358
☆ 2017-06-14 19:33:55.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@4a941528
☆ 2017-06-14 19:33:55.045 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4a941528
☆ 2017-06-14 19:33:55.046 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@35d40fa1
☆ 2017-06-14 19:33:55.046 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@35d40fa1
☆ 2017-06-14 19:33:55.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@25609f67
☆ 2017-06-14 19:33:55.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@25609f67
☆ 2017-06-14 19:33:55.048 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@56fe8ae1
☆ 2017-06-14 19:33:55.048 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@56fe8ae1
☆ 2017-06-14 19:33:55.049 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d49f45c
☆ 2017-06-14 19:33:55.049 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d49f45c
☆ 2017-06-14 19:33:55.050 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5392971c
☆ 2017-06-14 19:33:55.051 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4b7284a0
☆ 2017-06-14 19:33:55.051 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4b7284a0
☆ 2017-06-14 19:33:55.051 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4b7284a0
☆ 2017-06-14 19:33:55.052 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7084a9cb
☆ 2017-06-14 19:33:55.052 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7084a9cb
☆ 2017-06-14 19:33:55.052 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7084a9cb
☆ 2017-06-14 19:33:55.053 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@561237a0
☆ 2017-06-14 19:33:55.053 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@10d52902
☆ 2017-06-14 19:33:55.054 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@10d52902
☆ 2017-06-14 19:33:55.054 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@10d52902
☆ 2017-06-14 19:33:55.055 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@708b3cc1
☆ 2017-06-14 19:33:55.055 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@708b3cc1
☆ 2017-06-14 19:33:55.055 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@708b3cc1
☆ 2017-06-14 19:33:55.056 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@711c7b32
☆ 2017-06-14 19:33:55.057 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@381db86d
☆ 2017-06-14 19:33:55.060 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@1abaec32
☆ 2017-06-14 19:33:55.060 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1abaec32
☆ 2017-06-14 19:33:55.060 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c251c80
☆ 2017-06-14 19:33:55.063 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6f1b0143
☆ 2017-06-14 19:33:55.063 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f1b0143
☆ 2017-06-14 19:33:55.065 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@118d8395
☆ 2017-06-14 19:33:55.066 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@118d8395
☆ 2017-06-14 19:33:55.066 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7648b921
☆ 2017-06-14 19:33:55.069 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4c91037d
☆ 2017-06-14 19:33:55.070 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@2b662516
☆ 2017-06-14 19:33:55.072 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@1eaa4e3d
☆ 2017-06-14 19:33:55.072 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1eaa4e3d
☆ 2017-06-14 19:33:55.073 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2afefbdf
☆ 2017-06-14 19:33:55.073 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@66e9831b
☆ 2017-06-14 19:33:55.073 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@49892ea2
☆ 2017-06-14 19:33:55.073 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e72b5d8
☆ 2017-06-14 19:33:55.073 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@738f93ca
☆ 2017-06-14 19:33:55.073 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@59d427fb
☆ 2017-06-14 19:33:55.073 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@59a8ee5d
☆ 2017-06-14 19:33:55.074 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62cf5cc5
☆ 2017-06-14 19:33:55.081 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:33:55.083 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:33:55.084 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:33:55.084 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:33:55.086 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:33:55.086 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:33:55.235 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:33:55.235 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:33:55.235 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:33:55.244 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:33:55.264 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:33:55.334 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:33:55.335 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:33:55.336 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:33:55.336 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:33:55.336 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:33:55.337 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:33:55.338 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:33:55.339 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:33:55.339 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:33:55.340 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:33:55.340 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:33:55.341 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:33:55.341 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:33:55.342 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:33:55.363 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:33:55.382 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:33:55.397 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:33:55.401 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:33:55.406 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:33:55.436 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:33:55.439 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:33:55.441 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:33:55.442 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:33:55.443 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:33:55.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:33:55.448 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:33:55.448 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:33:55.448 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:33:55.448 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:33:55.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:33:55.449 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:33:55.449 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:33:55.449 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:33:55.449 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:33:55.450 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:33:55.450 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:33:55.450 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:33:55.451 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:33:55.475 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:33:55.475 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:33:55.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:33:55.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:33:55.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:33:55.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:33:55.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:33:55.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:33:55.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:33:55.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:33:55.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:33:55.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:33:55.476 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:33:55.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:33:55.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:33:55.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:33:55.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:33:55.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:33:55.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:33:55.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:33:55.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:33:55.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:33:55.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@47ec3bc1
☆ 2017-06-14 19:33:55.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:33:55.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:33:55.478 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:33:55.478 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:33:55.478 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:33:55.478 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:33:55.478 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:33:55.478 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:33:55.478 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:33:55.478 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:33:55.478 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:33:55.478 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:33:55.479 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:33:55.516 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:33:55.518 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:33:55.542 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@11af018f, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:33:55.550 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:33:55.571 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:33:55.571 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:33:55.580 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:33:55.580 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:33:55.620 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:33:55.620 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:33:55.620 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:33:55.620 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:33:55.620 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:33:55.620 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:33:55.635 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@578ad6c9]
☆ 2017-06-14 19:33:55.635 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:33:55.635 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:33:55.636 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:33:55.645 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:33:55.648 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:33:55.650 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:33:55.650 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63fd1015]
☆ 2017-06-14 19:33:55.650 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:33:55.650 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:33:55.651 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:33:55.651 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:33:55.651 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:33:55.651 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:33:55.651 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6035ff5b]
☆ 2017-06-14 19:33:55.651 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:33:55.651 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:33:55.651 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:33:55.652 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:33:55.652 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:33:55.652 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:33:55.652 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac6a43b]
☆ 2017-06-14 19:33:55.652 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:33:55.652 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:33:55.652 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:33:55.652 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:33:55.653 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:33:55.653 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:33:55.653 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1366e7b6]
☆ 2017-06-14 19:33:55.653 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:33:55.653 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:33:55.653 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:33:55.653 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:33:55.654 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:33:55.654 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:33:55.654 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ee1d07b]
☆ 2017-06-14 19:33:55.654 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:33:55.654 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:33:55.654 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:33:55.654 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:33:55.654 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:33:55.655 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:33:55.655 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b6217d]
☆ 2017-06-14 19:33:55.655 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:33:55.655 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:33:55.655 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:33:55.655 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:33:55.655 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:33:55.656 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:33:55.656 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dbe508d]
☆ 2017-06-14 19:33:55.656 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:33:55.656 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:33:55.656 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:33:55.656 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:33:55.656 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:33:55.656 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:33:55.657 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2138cf8c]
☆ 2017-06-14 19:33:55.657 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:33:55.657 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:33:55.657 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:33:55.657 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:33:55.657 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:33:55.657 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:33:55.657 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12479558]
☆ 2017-06-14 19:33:55.658 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:33:55.658 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:33:55.658 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:33:55.658 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:33:55.658 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:33:55.658 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:33:55.658 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16fa3adf]
☆ 2017-06-14 19:33:55.659 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:33:55.659 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:33:55.659 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:33:55.659 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:33:55.659 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:33:55.659 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:33:55.671 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:33:55.671 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:33:55.671 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:33:55.673 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:33:55.691 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:33:55.693 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:33:55.693 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:33:55.695 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:33:55.695 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:33:55.696 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:33:55.697 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ac36d3c
☆ 2017-06-14 19:33:55.698 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 4f7e7c54-a42d-46dc-822b-fb8e3b8ca2f4 (<unnamed>)
☆ 2017-06-14 19:33:55.698 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:33:55.730 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:33:55.742 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:33:55.744 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:33:55.746 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:33:55.751 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:33:55.753 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:33:55.813 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:34:02.014 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 19:34:02.014 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 19:34:02.014 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:34:02.015 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 19:36:09.136 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:36:09.144 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:36:09.145 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:36:09.147 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:36:09.213 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:36:09.214 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:36:09.215 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:36:09.228 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:36:09.230 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:36:09.230 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:36:09.234 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:36:09.380 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:36:09.380 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:36:09.380 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:36:09.393 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:36:09.394 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:36:09.404 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:36:09.409 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:36:09.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:36:09.467 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:36:09.467 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:36:09.468 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:36:09.469 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:36:09.469 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:36:09.470 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:36:09.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:36:09.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:36:09.472 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:36:09.472 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:36:09.472 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:36:09.473 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:36:09.473 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:36:09.473 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:36:09.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:36:09.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:36:09.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:36:09.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:36:09.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:36:09.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:36:09.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:36:09.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:36:09.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:36:09.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:36:09.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:36:09.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:36:09.479 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:36:09.480 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:36:09.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:36:09.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:36:09.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:36:09.482 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:36:09.482 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:36:09.483 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:36:09.484 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:36:09.484 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:36:09.485 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:36:09.485 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:36:09.486 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:36:09.487 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:36:09.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:36:09.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:36:09.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:36:09.489 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:36:09.490 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:36:09.490 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:36:09.491 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:36:09.491 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:36:09.492 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:36:09.492 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:36:09.493 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:36:09.493 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:36:09.494 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:36:09.494 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:36:09.494 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:36:09.494 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:36:09.495 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:36:09.496 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:36:09.496 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:36:09.497 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:36:09.497 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:36:09.497 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:36:09.498 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:36:09.498 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:36:09.498 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:36:09.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:36:09.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:36:09.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:36:09.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:36:09.501 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:36:09.501 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:36:09.501 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:36:09.501 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:36:09.502 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:36:09.505 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:36:09.505 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:36:09.505 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:36:09.508 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:36:09.508 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:36:09.510 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:36:09.510 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:36:09.510 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:36:09.513 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:36:09.514 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:36:09.516 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:36:09.516 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:36:09.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:36:09.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:36:09.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:36:09.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:36:09.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:36:09.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:36:09.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:36:09.518 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:36:09.525 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:36:09.527 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:36:09.527 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:36:09.528 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:36:09.530 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:36:09.530 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:36:09.675 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:36:09.676 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:36:09.676 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:36:09.688 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:36:09.718 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:36:09.799 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:36:09.799 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:36:09.800 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:36:09.800 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:36:09.801 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:36:09.802 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:36:09.802 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:36:09.803 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:36:09.804 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:36:09.805 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:36:09.805 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:36:09.805 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:36:09.806 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:36:09.807 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:36:09.837 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:36:09.864 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:36:09.885 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:36:09.891 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:36:09.897 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:36:09.930 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:36:09.934 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:36:09.936 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:36:09.937 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:36:09.939 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:36:09.944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:36:09.945 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:36:09.945 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:36:09.945 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:36:09.945 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:36:09.945 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:36:09.946 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:36:09.946 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:36:09.946 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:36:09.946 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:36:09.947 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:36:09.948 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:36:09.948 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:36:09.949 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:36:09.982 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:36:09.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:36:09.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:36:09.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:36:09.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:36:09.983 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:36:09.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:36:09.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:36:09.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:36:09.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:36:09.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:36:09.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:36:09.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:36:09.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:36:09.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:36:09.984 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:36:09.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:36:09.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:36:09.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:36:09.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:36:09.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:36:09.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:36:09.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:36:09.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:36:09.985 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:36:09.986 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:36:09.986 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:36:09.986 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:36:09.986 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:36:09.986 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:36:09.986 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:36:09.986 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:36:09.986 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:36:09.987 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:36:09.987 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:36:09.987 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:36:10.031 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:36:10.033 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:36:10.033 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:36:10.043 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:36:10.075 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:36:10.075 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:36:10.087 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:36:10.087 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:36:10.146 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:36:10.146 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:36:10.146 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:36:10.146 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:36:10.146 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:36:10.147 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:36:10.167 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:36:10.168 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:36:10.168 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:36:10.168 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:36:10.182 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:36:10.186 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:36:10.188 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:36:10.189 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:36:10.189 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:36:10.189 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:36:10.189 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:36:10.189 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:36:10.189 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:36:10.190 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:36:10.190 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:36:10.190 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:36:10.190 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:36:10.190 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:36:10.190 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:36:10.191 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:36:10.191 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:36:10.191 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:36:10.191 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:36:10.191 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:36:10.191 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:36:10.191 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:36:10.192 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:36:10.192 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:36:10.192 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:36:10.192 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:36:10.192 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:36:10.192 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:36:10.193 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:36:10.193 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:36:10.193 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:36:10.193 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:36:10.193 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:36:10.193 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:36:10.193 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:36:10.194 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:36:10.194 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:36:10.194 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:36:10.194 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:36:10.195 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:36:10.195 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:36:10.195 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:36:10.195 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:36:10.195 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:36:10.196 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:36:10.196 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:36:10.196 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:36:10.196 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:36:10.196 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:36:10.196 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:36:10.197 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:36:10.197 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:36:10.197 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:36:10.197 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:36:10.197 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:36:10.197 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:36:10.198 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:36:10.198 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:36:10.198 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:36:10.198 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:36:10.198 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:36:10.198 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:36:10.199 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:36:10.199 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:36:10.199 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:36:10.199 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:36:10.199 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:36:10.200 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:36:10.200 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:36:10.200 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:36:10.200 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:36:10.200 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:36:10.200 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:36:10.217 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:36:10.217 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:36:10.217 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:36:10.220 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:36:10.245 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:36:10.247 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:36:10.248 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:36:10.249 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:36:10.250 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:36:10.250 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:36:10.251 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:36:10.253 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 0919620c-0acc-49fe-851b-d6fc09dca1c5 (<unnamed>)
☆ 2017-06-14 19:36:10.253 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:36:10.284 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:36:10.297 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:36:10.300 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:36:10.302 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:36:10.307 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:36:10.308 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:36:10.372 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:36:16.283 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 19:36:16.629 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 19:36:16.630 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:36:16.631 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 19:39:08.472 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:39:08.480 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:39:08.481 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:39:08.483 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:39:08.548 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:39:08.549 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:39:08.550 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:39:08.563 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:39:08.564 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:39:08.565 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:39:08.568 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:39:08.713 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:39:08.713 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:39:08.713 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:39:08.721 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:39:08.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:39:08.731 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:39:08.736 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:39:08.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:39:08.751 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:39:08.751 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:39:08.752 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:39:08.795 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:39:08.796 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:39:08.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:39:08.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:39:08.798 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:39:08.799 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:39:08.799 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:39:08.799 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:39:08.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:39:08.801 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:39:08.801 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:39:08.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:39:08.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:39:08.803 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:39:08.804 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:39:08.804 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:39:08.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:39:08.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:39:08.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:39:08.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:39:08.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:39:08.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:39:08.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:39:08.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:39:08.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:39:08.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:39:08.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:39:08.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:39:08.811 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:39:08.811 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:39:08.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:39:08.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:39:08.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:39:08.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:39:08.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:39:08.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:39:08.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:39:08.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:39:08.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:39:08.817 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:39:08.818 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:39:08.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:39:08.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:39:08.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:39:08.820 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:39:08.820 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:39:08.820 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:39:08.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:39:08.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:39:08.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:39:08.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:39:08.823 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:39:08.823 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:39:08.824 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:39:08.824 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:39:08.824 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:39:08.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:39:08.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:39:08.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:39:08.826 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:39:08.826 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:39:08.827 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:39:08.827 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:39:08.828 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:39:08.828 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:39:08.828 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:39:08.829 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:39:08.829 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:39:08.829 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:39:08.830 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:39:08.830 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:39:08.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:39:08.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:39:08.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:39:08.836 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:39:08.836 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:39:08.839 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:39:08.839 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:39:08.839 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:39:08.842 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:39:08.844 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:39:08.846 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:39:08.846 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:39:08.847 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:39:08.847 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:39:08.847 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:39:08.847 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:39:08.847 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:39:08.847 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:39:08.848 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:39:08.848 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:39:08.855 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:39:08.858 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:39:08.859 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:39:08.859 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:39:08.861 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:39:08.862 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:39:09.008 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:39:09.009 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:39:09.009 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:39:09.017 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:39:09.038 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:39:09.094 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:39:09.094 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:39:09.094 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:39:09.095 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:39:09.095 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:39:09.096 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:39:09.096 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:39:09.097 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:39:09.097 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:39:09.098 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:39:09.098 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:39:09.098 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:39:09.098 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:39:09.099 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:39:09.120 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:39:09.139 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:39:09.153 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:39:09.157 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:39:09.161 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:39:09.184 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:39:09.186 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:39:09.188 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:39:09.189 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:39:09.190 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:39:09.193 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:39:09.194 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:39:09.194 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:39:09.194 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:39:09.194 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:39:09.194 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:39:09.194 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:39:09.194 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:39:09.194 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:39:09.194 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:39:09.195 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:39:09.195 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:39:09.196 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:39:09.197 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:39:09.219 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:39:09.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:39:09.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:39:09.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:39:09.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:39:09.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:39:09.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:39:09.220 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:39:09.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:39:09.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:39:09.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:39:09.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:39:09.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:39:09.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:39:09.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:39:09.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:39:09.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:39:09.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:39:09.221 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:39:09.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:39:09.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:39:09.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:39:09.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:39:09.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:39:09.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:39:09.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:39:09.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:39:09.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:39:09.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:39:09.222 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:39:09.223 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:39:09.223 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:39:09.223 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:39:09.223 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:39:09.223 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:39:09.223 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:39:09.255 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:39:09.256 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:39:09.256 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:39:09.263 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:39:09.285 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:39:09.286 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:39:09.294 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:39:09.294 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:39:09.334 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:39:09.334 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:39:09.334 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:39:09.335 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:39:09.335 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:39:09.335 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:39:09.349 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:39:09.350 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:39:09.350 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:39:09.350 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:39:09.360 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:39:09.363 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:39:09.365 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:39:09.365 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:39:09.365 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:39:09.365 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:39:09.365 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:39:09.365 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:39:09.366 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:39:09.366 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:39:09.366 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:39:09.366 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:39:09.366 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:39:09.366 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:39:09.366 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:39:09.367 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:39:09.367 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:39:09.367 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:39:09.367 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:39:09.367 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:39:09.367 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:39:09.367 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:39:09.367 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:39:09.367 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:39:09.368 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:39:09.368 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:39:09.368 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:39:09.368 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:39:09.368 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:39:09.368 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:39:09.368 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:39:09.368 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:39:09.369 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:39:09.369 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:39:09.369 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:39:09.369 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:39:09.369 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:39:09.369 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:39:09.369 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:39:09.369 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:39:09.370 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:39:09.370 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:39:09.370 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:39:09.370 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:39:09.370 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:39:09.370 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:39:09.371 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:39:09.371 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:39:09.371 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:39:09.371 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:39:09.371 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:39:09.371 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:39:09.371 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:39:09.371 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:39:09.371 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:39:09.372 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:39:09.372 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:39:09.372 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:39:09.372 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:39:09.372 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:39:09.372 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:39:09.372 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:39:09.372 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:39:09.373 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:39:09.373 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:39:09.373 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:39:09.373 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:39:09.373 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:39:09.373 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:39:09.373 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:39:09.373 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:39:09.374 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:39:09.374 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:39:09.386 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:39:09.386 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:39:09.386 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:39:09.388 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:39:09.405 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:39:09.407 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:39:09.408 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:39:09.409 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:39:09.410 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:39:09.410 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:39:09.411 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:39:09.412 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 53778b5e-89cc-445b-a503-e93ded3a1b41 (<unnamed>)
☆ 2017-06-14 19:39:09.413 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:39:09.445 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:39:09.458 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:39:09.461 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:39:09.462 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:39:09.467 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:39:09.469 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:39:09.530 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:40:33.206 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:40:33.213 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:40:33.214 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:40:33.216 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:40:33.281 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:40:33.282 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:40:33.283 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:40:33.296 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:40:33.297 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:40:33.298 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:40:33.301 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:40:33.468 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:40:33.468 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:40:33.468 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:40:33.481 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:40:33.482 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:40:33.492 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:40:33.499 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:40:33.513 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 19:40:33.513 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 19:40:33.513 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4ec9a593
☆ 2017-06-14 19:40:33.514 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45406ad9
☆ 2017-06-14 19:40:33.515 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@d203453
☆ 2017-06-14 19:40:33.515 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@1ddddd9e
☆ 2017-06-14 19:40:33.525 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 19:40:33.525 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 19:40:33.525 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23c7f558
☆ 2017-06-14 19:40:33.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 19:40:33.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 19:40:33.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2adc2b68
☆ 2017-06-14 19:40:33.527 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 19:40:33.527 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 19:40:33.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3aa6429
☆ 2017-06-14 19:40:33.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 19:40:33.529 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 19:40:33.529 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@79b7b050
☆ 2017-06-14 19:40:33.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 19:40:33.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 19:40:33.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@c5c6834
☆ 2017-06-14 19:40:33.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 19:40:33.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 19:40:33.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ae81ca
☆ 2017-06-14 19:40:33.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 19:40:33.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 19:40:33.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5437561b
☆ 2017-06-14 19:40:33.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 19:40:33.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33ccbe01
☆ 2017-06-14 19:40:33.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 19:40:33.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4c14e8e1
☆ 2017-06-14 19:40:33.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 19:40:33.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b3bb6ec
☆ 2017-06-14 19:40:33.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@603f7723
☆ 2017-06-14 19:40:33.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11d57dc3
☆ 2017-06-14 19:40:33.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 19:40:33.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@50bd8473
☆ 2017-06-14 19:40:33.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 19:40:33.541 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@26e0aa8
☆ 2017-06-14 19:40:33.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 19:40:33.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4345a320
☆ 2017-06-14 19:40:33.543 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 19:40:33.543 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 19:40:33.543 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a72a013
☆ 2017-06-14 19:40:33.545 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9cc13a
☆ 2017-06-14 19:40:33.545 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 19:40:33.546 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 19:40:33.546 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fd78f29
☆ 2017-06-14 19:40:33.546 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30a8cfff
☆ 2017-06-14 19:40:33.547 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 19:40:33.547 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@69860be2
☆ 2017-06-14 19:40:33.548 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 19:40:33.548 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70148365
☆ 2017-06-14 19:40:33.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 19:40:33.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64cbd764
☆ 2017-06-14 19:40:33.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 19:40:33.550 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@563fbcf
☆ 2017-06-14 19:40:33.551 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 19:40:33.551 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c77035b
☆ 2017-06-14 19:40:33.551 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@14cd5c87
☆ 2017-06-14 19:40:33.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 19:40:33.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 19:40:33.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@13c92009
☆ 2017-06-14 19:40:33.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 19:40:33.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 19:40:33.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@56b4e2ba
☆ 2017-06-14 19:40:33.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@f3cd9c4
☆ 2017-06-14 19:40:33.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 19:40:33.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 19:40:33.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@23151941
☆ 2017-06-14 19:40:33.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 19:40:33.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 19:40:33.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a82c4dd
☆ 2017-06-14 19:40:33.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@60e92abf
☆ 2017-06-14 19:40:33.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@2c376fa2
☆ 2017-06-14 19:40:33.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 19:40:33.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3519da05
☆ 2017-06-14 19:40:33.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11b52292
☆ 2017-06-14 19:40:33.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 19:40:33.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7cbbab59
☆ 2017-06-14 19:40:33.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 19:40:33.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3a846e18
☆ 2017-06-14 19:40:33.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5013cc27
☆ 2017-06-14 19:40:33.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f98d316
☆ 2017-06-14 19:40:33.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@4f1eec54
☆ 2017-06-14 19:40:33.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 19:40:33.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1118d2ef
☆ 2017-06-14 19:40:33.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@23250633
☆ 2017-06-14 19:40:33.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74fd2712
☆ 2017-06-14 19:40:33.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48456cd3
☆ 2017-06-14 19:40:33.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@798472b8
☆ 2017-06-14 19:40:33.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@729be725
☆ 2017-06-14 19:40:33.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6fc38bd3
☆ 2017-06-14 19:40:33.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c03510c
☆ 2017-06-14 19:40:33.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56c8e386
☆ 2017-06-14 19:40:33.620 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:40:33.622 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:40:33.622 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:40:33.622 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:40:33.624 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:40:33.624 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:40:33.778 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:40:33.778 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:40:33.778 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:40:33.790 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:40:33.816 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:40:33.871 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:40:33.871 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:40:33.872 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:40:33.872 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:40:33.872 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:40:33.873 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:40:33.873 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:40:33.874 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:40:33.875 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:40:33.875 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:40:33.875 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:40:33.876 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:40:33.876 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:40:33.877 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:40:33.902 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:40:33.922 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:40:33.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:40:33.940 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:40:33.946 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:40:33.976 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:40:33.979 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:40:33.981 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:40:33.982 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:40:33.983 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:40:33.987 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:40:33.987 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:40:33.987 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:40:33.987 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:40:33.988 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:40:33.988 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:40:33.988 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:40:33.988 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:40:33.988 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:40:33.988 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:40:33.989 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:40:33.989 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:40:33.989 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:40:33.990 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:40:34.012 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:40:34.013 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:40:34.013 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:40:34.013 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:40:34.013 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:40:34.013 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:40:34.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:40:34.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:40:34.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:40:34.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:40:34.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:40:34.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:40:34.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:40:34.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:40:34.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:40:34.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:40:34.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:40:34.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:40:34.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:40:34.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:40:34.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:40:34.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:40:34.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3e4bae75
☆ 2017-06-14 19:40:34.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:40:34.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:40:34.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:40:34.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:40:34.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:40:34.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:40:34.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:40:34.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:40:34.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:40:34.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:40:34.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:40:34.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:40:34.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:40:34.053 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:40:34.055 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:40:34.055 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e2ffdd4, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:40:34.062 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:40:34.084 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:40:34.084 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:40:34.092 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:40:34.093 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:40:34.132 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:40:34.133 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:40:34.133 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:40:34.133 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:40:34.133 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:40:34.133 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:40:34.148 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68705d2f]
☆ 2017-06-14 19:40:34.149 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:40:34.149 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:40:34.150 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:40:34.159 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:40:34.163 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:40:34.164 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:40:34.165 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27c1bd81]
☆ 2017-06-14 19:40:34.165 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:40:34.165 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:40:34.165 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:40:34.165 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:40:34.165 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:40:34.166 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:40:34.166 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bbd1231]
☆ 2017-06-14 19:40:34.166 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:40:34.166 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:40:34.166 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:40:34.166 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:40:34.166 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:40:34.166 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:40:34.166 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22e9e3d5]
☆ 2017-06-14 19:40:34.167 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:40:34.167 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:40:34.167 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:40:34.167 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:40:34.167 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:40:34.167 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:40:34.167 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420f12c7]
☆ 2017-06-14 19:40:34.167 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:40:34.168 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:40:34.168 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:40:34.168 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:40:34.168 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:40:34.168 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:40:34.168 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54578247]
☆ 2017-06-14 19:40:34.169 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:40:34.169 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:40:34.169 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:40:34.169 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:40:34.169 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:40:34.169 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:40:34.170 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a02f760]
☆ 2017-06-14 19:40:34.170 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:40:34.170 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:40:34.170 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:40:34.171 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:40:34.171 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:40:34.171 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:40:34.171 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62fd39ce]
☆ 2017-06-14 19:40:34.171 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:40:34.171 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:40:34.172 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:40:34.172 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:40:34.172 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:40:34.172 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:40:34.172 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45861f91]
☆ 2017-06-14 19:40:34.173 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:40:34.173 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:40:34.173 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:40:34.173 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:40:34.173 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:40:34.174 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:40:34.174 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d9906c]
☆ 2017-06-14 19:40:34.174 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:40:34.174 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:40:34.174 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:40:34.174 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:40:34.175 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:40:34.175 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:40:34.175 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d3e0caf]
☆ 2017-06-14 19:40:34.175 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:40:34.175 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:40:34.175 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:40:34.176 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:40:34.176 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:40:34.176 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:40:34.189 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:40:34.189 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:40:34.190 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:40:34.192 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:40:34.212 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:40:34.214 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:40:34.215 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:40:34.216 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:40:34.217 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:40:34.217 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:40:34.218 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36898aa1
☆ 2017-06-14 19:40:34.219 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: deb27489-0679-4bb3-989e-19d1d3b626e6 (<unnamed>)
☆ 2017-06-14 19:40:34.220 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:40:34.260 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:40:34.273 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:40:34.276 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:40:34.277 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:40:34.283 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:40:34.284 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:40:34.349 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:42:09.496 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:42:09.504 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:42:09.505 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:42:09.507 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:42:09.574 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:42:09.576 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:42:09.577 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:42:09.590 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:42:09.591 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:42:09.592 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:42:09.595 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:42:09.741 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:42:09.741 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:42:09.741 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:42:09.750 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:42:09.751 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:42:09.760 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:42:09.766 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:42:09.818 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:42:09.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:42:09.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:42:09.820 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:42:09.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:42:09.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:42:09.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:42:09.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:42:09.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:42:09.823 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:42:09.823 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:42:09.823 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:42:09.824 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:42:09.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:42:09.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:42:09.826 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:42:09.826 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:42:09.826 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:42:09.827 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:42:09.827 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:42:09.827 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:42:09.828 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:42:09.829 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:42:09.829 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:42:09.830 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:42:09.830 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:42:09.830 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:42:09.831 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:42:09.831 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:42:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:42:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:42:09.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:42:09.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:42:09.834 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:42:09.834 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:42:09.835 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:42:09.835 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:42:09.837 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:42:09.837 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:42:09.838 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:42:09.838 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:42:09.839 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:42:09.839 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:42:09.839 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:42:09.840 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:42:09.841 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:42:09.842 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:42:09.842 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:42:09.842 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:42:09.843 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:42:09.843 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:42:09.844 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:42:09.844 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:42:09.845 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:42:09.845 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:42:09.845 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:42:09.845 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:42:09.846 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:42:09.847 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:42:09.847 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:42:09.848 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:42:09.848 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:42:09.848 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:42:09.849 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:42:09.849 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:42:09.849 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:42:09.850 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:42:09.850 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:42:09.850 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:42:09.851 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:42:09.851 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:42:09.851 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:42:09.852 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:42:09.852 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:42:09.853 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:42:09.855 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:42:09.856 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:42:09.856 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:42:09.858 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:42:09.859 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:42:09.861 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:42:09.861 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:42:09.861 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:42:09.864 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:42:09.865 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:42:09.867 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:42:09.868 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:42:09.868 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:42:09.868 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:42:09.868 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:42:09.868 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:42:09.868 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:42:09.869 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:42:09.869 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:42:09.869 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:42:09.876 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:42:09.878 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:42:09.879 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:42:09.879 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:42:09.881 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:42:09.882 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:42:10.028 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:42:10.028 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:42:10.029 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:42:10.037 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:42:10.057 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:42:10.113 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:42:10.113 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:42:10.114 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:42:10.114 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:42:10.114 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:42:10.115 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:42:10.115 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:42:10.116 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:42:10.117 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:42:10.117 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:42:10.117 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:42:10.118 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:42:10.118 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:42:10.119 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:42:10.139 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:42:10.158 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:42:10.173 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:42:10.177 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:42:10.181 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:42:10.204 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:42:10.206 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:42:10.230 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:42:10.232 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:42:10.234 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:42:10.237 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:42:10.237 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:42:10.238 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:42:10.238 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:42:10.238 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:42:10.238 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:42:10.238 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:42:10.238 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:42:10.238 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:42:10.238 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:42:10.239 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:42:10.239 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:42:10.239 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:42:10.240 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:42:10.262 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:42:10.263 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:42:10.263 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:42:10.263 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:42:10.264 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:42:10.264 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:42:10.264 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:42:10.264 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:42:10.264 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:42:10.264 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:42:10.264 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:42:10.264 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:42:10.264 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:42:10.264 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:42:10.264 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:42:10.264 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:42:10.265 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:42:10.265 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:42:10.265 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:42:10.265 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:42:10.265 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:42:10.265 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:42:10.265 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:42:10.265 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:42:10.265 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:42:10.265 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:42:10.265 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:42:10.265 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:42:10.266 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:42:10.266 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:42:10.266 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:42:10.266 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:42:10.266 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:42:10.266 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:42:10.266 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:42:10.266 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:42:10.298 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:42:10.299 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:42:10.299 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:42:10.306 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:42:10.328 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:42:10.328 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:42:10.337 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:42:10.337 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:42:10.377 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:42:10.377 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:42:10.378 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:42:10.378 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:42:10.378 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:42:10.378 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:42:10.393 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:42:10.393 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:42:10.394 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:42:10.394 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:42:10.404 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:42:10.407 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:42:10.409 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:42:10.409 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:42:10.409 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:42:10.409 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:42:10.409 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:42:10.409 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:42:10.410 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:42:10.410 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:42:10.410 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:42:10.410 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:42:10.410 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:42:10.410 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:42:10.410 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:42:10.411 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:42:10.411 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:42:10.411 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:42:10.411 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:42:10.411 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:42:10.411 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:42:10.411 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:42:10.411 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:42:10.412 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:42:10.412 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:42:10.412 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:42:10.412 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:42:10.412 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:42:10.412 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:42:10.412 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:42:10.412 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:42:10.413 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:42:10.413 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:42:10.413 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:42:10.413 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:42:10.413 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:42:10.413 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:42:10.413 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:42:10.413 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:42:10.414 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:42:10.414 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:42:10.414 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:42:10.414 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:42:10.414 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:42:10.414 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:42:10.415 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:42:10.415 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:42:10.415 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:42:10.415 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:42:10.415 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:42:10.415 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:42:10.415 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:42:10.415 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:42:10.415 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:42:10.416 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:42:10.416 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:42:10.416 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:42:10.416 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:42:10.416 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:42:10.416 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:42:10.416 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:42:10.416 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:42:10.417 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:42:10.417 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:42:10.417 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:42:10.417 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:42:10.417 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:42:10.417 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:42:10.417 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:42:10.417 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:42:10.418 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:42:10.418 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:42:10.418 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:42:10.430 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:42:10.431 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:42:10.431 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:42:10.433 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:42:10.453 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:42:10.456 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:42:10.457 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:42:10.458 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:42:10.459 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:42:10.459 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:42:10.461 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:42:10.462 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 5e314af4-1e89-4249-b02f-d1f208a1254e (<unnamed>)
☆ 2017-06-14 19:42:10.462 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:42:10.496 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:42:10.509 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:42:10.512 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:42:10.514 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:42:10.519 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:42:10.521 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:42:10.585 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:42:16.839 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 19:42:16.839 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 19:42:16.839 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:42:16.840 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-14 19:43:44.728 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-14 19:43:44.736 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:43:44.737 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:43:44.739 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:43:44.809 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-14 19:43:44.810 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-14 19:43:44.811 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-14 19:43:44.824 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-14 19:43:44.825 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-14 19:43:44.825 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-14 19:43:44.829 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-14 19:43:44.972 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-14 19:43:44.973 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-14 19:43:44.973 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-14 19:43:44.981 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-14 19:43:44.982 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-14 19:43:44.991 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-14 19:43:44.996 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-14 19:43:45.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:43:45.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:43:45.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ae068d3
☆ 2017-06-14 19:43:45.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33c59a6e
☆ 2017-06-14 19:43:45.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b7929d4
☆ 2017-06-14 19:43:45.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc84425
☆ 2017-06-14 19:43:45.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:43:45.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:43:45.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b44a5e4
☆ 2017-06-14 19:43:45.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:43:45.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:43:45.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4885c0e
☆ 2017-06-14 19:43:45.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:43:45.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:43:45.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15d061fc
☆ 2017-06-14 19:43:45.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:43:45.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:43:45.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e32e88
☆ 2017-06-14 19:43:45.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:43:45.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:43:45.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d18bca
☆ 2017-06-14 19:43:45.029 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:43:45.029 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:43:45.029 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50790d
☆ 2017-06-14 19:43:45.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:43:45.030 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:43:45.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1b24cdeb
☆ 2017-06-14 19:43:45.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:43:45.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1176a35d
☆ 2017-06-14 19:43:45.033 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:43:45.033 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68cc8b49
☆ 2017-06-14 19:43:45.034 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:43:45.034 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2b716cc1
☆ 2017-06-14 19:43:45.035 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@23fb46e8
☆ 2017-06-14 19:43:45.036 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@524e6024
☆ 2017-06-14 19:43:45.038 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:43:45.038 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@400017c
☆ 2017-06-14 19:43:45.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:43:45.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6bd3207f
☆ 2017-06-14 19:43:45.041 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:43:45.042 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6743490a
☆ 2017-06-14 19:43:45.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:43:45.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:43:45.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3936141e
☆ 2017-06-14 19:43:45.045 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5024e6
☆ 2017-06-14 19:43:45.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:43:45.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:43:45.047 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4605e50b
☆ 2017-06-14 19:43:45.048 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@254c6488
☆ 2017-06-14 19:43:45.049 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:43:45.049 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29f06b3b
☆ 2017-06-14 19:43:45.050 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:43:45.050 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46ae4543
☆ 2017-06-14 19:43:45.088 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:43:45.089 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d5483c4
☆ 2017-06-14 19:43:45.090 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:43:45.090 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7bf70dee
☆ 2017-06-14 19:43:45.091 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:43:45.091 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3cdb3bbc
☆ 2017-06-14 19:43:45.092 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2db4a1c6
☆ 2017-06-14 19:43:45.093 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:43:45.093 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:43:45.093 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1d7aa0f8
☆ 2017-06-14 19:43:45.094 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:43:45.094 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:43:45.094 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e6bac5c
☆ 2017-06-14 19:43:45.094 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@69dd100f
☆ 2017-06-14 19:43:45.095 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:43:45.096 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:43:45.096 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@4b8fac9b
☆ 2017-06-14 19:43:45.097 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:43:45.097 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:43:45.097 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b962d96
☆ 2017-06-14 19:43:45.098 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1e427f3d
☆ 2017-06-14 19:43:45.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c4b0657
☆ 2017-06-14 19:43:45.103 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:43:45.103 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32f7c048
☆ 2017-06-14 19:43:45.104 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abb712f
☆ 2017-06-14 19:43:45.107 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:43:45.107 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d213e40
☆ 2017-06-14 19:43:45.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:43:45.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3515a2b1
☆ 2017-06-14 19:43:45.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ee3253f
☆ 2017-06-14 19:43:45.113 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77dc5f56
☆ 2017-06-14 19:43:45.114 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@49dbf584
☆ 2017-06-14 19:43:45.116 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:43:45.116 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@177dd09c
☆ 2017-06-14 19:43:45.117 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12a01519
☆ 2017-06-14 19:43:45.117 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ba0dee1
☆ 2017-06-14 19:43:45.117 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ddbc98
☆ 2017-06-14 19:43:45.117 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@773f51ac
☆ 2017-06-14 19:43:45.117 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65259a8f
☆ 2017-06-14 19:43:45.117 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@89f071c
☆ 2017-06-14 19:43:45.117 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@476943eb
☆ 2017-06-14 19:43:45.117 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ad6d89b
☆ 2017-06-14 19:43:45.125 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-14 19:43:45.126 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:43:45.127 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-14 19:43:45.127 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-14 19:43:45.129 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-14 19:43:45.129 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-14 19:43:45.275 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:43:45.276 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-14 19:43:45.276 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-14 19:43:45.288 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-14 19:43:45.313 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-14 19:43:45.369 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-14 19:43:45.369 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-14 19:43:45.370 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:43:45.370 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-14 19:43:45.370 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-14 19:43:45.371 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-14 19:43:45.371 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-14 19:43:45.372 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:43:45.373 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-14 19:43:45.373 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-14 19:43:45.373 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-14 19:43:45.374 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-14 19:43:45.374 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-14 19:43:45.375 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-14 19:43:45.400 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-14 19:43:45.421 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:43:45.437 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-14 19:43:45.441 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-14 19:43:45.445 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-14 19:43:45.468 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-14 19:43:45.470 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-14 19:43:45.472 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-14 19:43:45.473 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-14 19:43:45.474 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-14 19:43:45.477 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:43:45.478 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-14 19:43:45.478 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-14 19:43:45.478 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-14 19:43:45.478 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-14 19:43:45.478 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-14 19:43:45.478 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-14 19:43:45.479 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-14 19:43:45.479 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-14 19:43:45.479 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-14 19:43:45.480 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-14 19:43:45.480 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-14 19:43:45.480 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-14 19:43:45.481 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-14 19:43:45.504 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-14 19:43:45.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-14 19:43:45.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-14 19:43:45.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-14 19:43:45.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-14 19:43:45.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-14 19:43:45.505 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-14 19:43:45.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-14 19:43:45.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-14 19:43:45.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-14 19:43:45.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-14 19:43:45.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-14 19:43:45.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-14 19:43:45.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-14 19:43:45.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-14 19:43:45.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-14 19:43:45.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-14 19:43:45.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-14 19:43:45.507 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-14 19:43:45.507 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-14 19:43:45.507 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-14 19:43:45.507 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-14 19:43:45.507 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@22f850af
☆ 2017-06-14 19:43:45.507 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-14 19:43:45.507 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-14 19:43:45.507 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-14 19:43:45.507 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-14 19:43:45.507 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-14 19:43:45.507 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-14 19:43:45.507 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-14 19:43:45.508 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-14 19:43:45.508 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-14 19:43:45.508 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-14 19:43:45.508 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-14 19:43:45.508 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-14 19:43:45.508 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-14 19:43:45.540 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-14 19:43:45.541 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-14 19:43:45.541 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d6f66b1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-14 19:43:45.548 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-14 19:43:45.570 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:43:45.571 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:43:45.579 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-14 19:43:45.579 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:43:45.619 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-14 19:43:45.619 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-14 19:43:45.619 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-14 19:43:45.619 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-14 19:43:45.619 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-14 19:43:45.620 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-14 19:43:45.634 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5843286c]
☆ 2017-06-14 19:43:45.635 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:43:45.635 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:43:45.635 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:43:45.644 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:43:45.648 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:43:45.649 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:43:45.649 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74ce68e3]
☆ 2017-06-14 19:43:45.649 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:43:45.650 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:43:45.650 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:43:45.650 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:43:45.650 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:43:45.650 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:43:45.650 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32c05e94]
☆ 2017-06-14 19:43:45.650 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:43:45.651 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:43:45.651 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:43:45.651 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:43:45.651 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:43:45.651 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:43:45.651 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fc29d32]
☆ 2017-06-14 19:43:45.651 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:43:45.651 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:43:45.651 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:43:45.652 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:43:45.652 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:43:45.652 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:43:45.652 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9fa9c0]
☆ 2017-06-14 19:43:45.652 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:43:45.652 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:43:45.652 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:43:45.652 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:43:45.653 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:43:45.653 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:43:45.653 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c751609]
☆ 2017-06-14 19:43:45.653 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:43:45.653 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:43:45.653 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:43:45.653 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:43:45.654 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:43:45.654 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:43:45.654 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab8d488]
☆ 2017-06-14 19:43:45.654 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:43:45.654 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:43:45.654 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:43:45.654 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:43:45.655 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:43:45.655 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:43:45.655 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1024d9cc]
☆ 2017-06-14 19:43:45.655 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:43:45.655 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:43:45.655 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:43:45.655 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:43:45.656 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:43:45.656 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:43:45.656 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52ae819a]
☆ 2017-06-14 19:43:45.656 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:43:45.656 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:43:45.656 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:43:45.656 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:43:45.656 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:43:45.657 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-14 19:43:45.657 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a49a8b7]
☆ 2017-06-14 19:43:45.657 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:43:45.657 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:43:45.657 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:43:45.657 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:43:45.657 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:43:45.657 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:43:45.658 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@225f6865]
☆ 2017-06-14 19:43:45.658 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-14 19:43:45.658 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-14 19:43:45.658 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-14 19:43:45.658 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-14 19:43:45.658 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-14 19:43:45.658 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:43:45.670 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:43:45.682 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-14 19:43:45.682 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-14 19:43:45.685 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-14 19:43:45.704 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-14 19:43:45.707 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-14 19:43:45.707 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-14 19:43:45.708 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-14 19:43:45.709 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-14 19:43:45.709 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-14 19:43:45.711 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@89540e9
☆ 2017-06-14 19:43:45.712 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: b827d702-7768-4072-a553-f96320a88450 (<unnamed>)
☆ 2017-06-14 19:43:45.712 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-14 19:43:45.744 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-14 19:43:45.756 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-14 19:43:45.758 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-14 19:43:45.760 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:43:45.765 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:43:45.766 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-14 19:43:45.827 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-14 19:43:57.134 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-14 19:43:57.134 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-14 19:43:57.134 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-14 19:43:57.135 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
