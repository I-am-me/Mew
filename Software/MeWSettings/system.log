☆ 2017-06-13 11:39:04.674 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 11:39:04.683 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:39:04.685 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:39:04.687 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:39:04.758 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 11:39:04.759 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 11:39:04.760 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 11:39:04.794 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 11:39:04.795 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 11:39:04.796 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 11:39:04.800 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 11:39:05.083 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:39:05.083 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:39:05.083 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:39:05.092 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 11:39:05.093 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 11:39:05.102 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 11:39:05.107 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 11:39:05.121 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@163c0e64
☆ 2017-06-13 11:39:05.122 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@163c0e64
☆ 2017-06-13 11:39:05.122 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@163c0e64
☆ 2017-06-13 11:39:05.123 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@a8eb85f
☆ 2017-06-13 11:39:05.123 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@7906dc19
☆ 2017-06-13 11:39:05.124 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@66641330
☆ 2017-06-13 11:39:05.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@22dce55a
☆ 2017-06-13 11:39:05.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@22dce55a
☆ 2017-06-13 11:39:05.125 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22dce55a
☆ 2017-06-13 11:39:05.126 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@5bbf47b
☆ 2017-06-13 11:39:05.127 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@5bbf47b
☆ 2017-06-13 11:39:05.127 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5bbf47b
☆ 2017-06-13 11:39:05.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@4f9b81a5
☆ 2017-06-13 11:39:05.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@4f9b81a5
☆ 2017-06-13 11:39:05.128 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4f9b81a5
☆ 2017-06-13 11:39:05.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@6ca6de1f
☆ 2017-06-13 11:39:05.129 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@6ca6de1f
☆ 2017-06-13 11:39:05.130 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6ca6de1f
☆ 2017-06-13 11:39:05.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@244a2976
☆ 2017-06-13 11:39:05.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@244a2976
☆ 2017-06-13 11:39:05.131 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@244a2976
☆ 2017-06-13 11:39:05.132 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@547e1923
☆ 2017-06-13 11:39:05.132 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@547e1923
☆ 2017-06-13 11:39:05.132 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@547e1923
☆ 2017-06-13 11:39:05.133 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@21fe5f39
☆ 2017-06-13 11:39:05.134 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@21fe5f39
☆ 2017-06-13 11:39:05.134 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21fe5f39
☆ 2017-06-13 11:39:05.135 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26788c15
☆ 2017-06-13 11:39:05.135 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26788c15
☆ 2017-06-13 11:39:05.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@11dcb91e
☆ 2017-06-13 11:39:05.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@11dcb91e
☆ 2017-06-13 11:39:05.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@537b7f88
☆ 2017-06-13 11:39:05.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@537b7f88
☆ 2017-06-13 11:39:05.138 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1af904f0
☆ 2017-06-13 11:39:05.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@8ae5b74
☆ 2017-06-13 11:39:05.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@5c46be8f
☆ 2017-06-13 11:39:05.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c46be8f
☆ 2017-06-13 11:39:05.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@672a37a1
☆ 2017-06-13 11:39:05.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@672a37a1
☆ 2017-06-13 11:39:05.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@2ec8b28c
☆ 2017-06-13 11:39:05.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2ec8b28c
☆ 2017-06-13 11:39:05.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@5ad29e8d
☆ 2017-06-13 11:39:05.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ad29e8d
☆ 2017-06-13 11:39:05.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ad29e8d
☆ 2017-06-13 11:39:05.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@72fd8323
☆ 2017-06-13 11:39:05.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@44e977d3
☆ 2017-06-13 11:39:05.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@44e977d3
☆ 2017-06-13 11:39:05.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@44e977d3
☆ 2017-06-13 11:39:05.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@40c7fea0
☆ 2017-06-13 11:39:05.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@7bbafc7a
☆ 2017-06-13 11:39:05.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7bbafc7a
☆ 2017-06-13 11:39:05.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@6f8be86d
☆ 2017-06-13 11:39:05.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6f8be86d
☆ 2017-06-13 11:39:05.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@732e4798
☆ 2017-06-13 11:39:05.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@732e4798
☆ 2017-06-13 11:39:05.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@64ca5e5b
☆ 2017-06-13 11:39:05.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@64ca5e5b
☆ 2017-06-13 11:39:05.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6bc5d8bd
☆ 2017-06-13 11:39:05.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6bc5d8bd
☆ 2017-06-13 11:39:05.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a2d971a
☆ 2017-06-13 11:39:05.153 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@3829e34e
☆ 2017-06-13 11:39:05.153 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@3829e34e
☆ 2017-06-13 11:39:05.153 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@3829e34e
☆ 2017-06-13 11:39:05.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@430b3f63
☆ 2017-06-13 11:39:05.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@430b3f63
☆ 2017-06-13 11:39:05.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@430b3f63
☆ 2017-06-13 11:39:05.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@269f8e2e
☆ 2017-06-13 11:39:05.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@68c60f11
☆ 2017-06-13 11:39:05.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@68c60f11
☆ 2017-06-13 11:39:05.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@68c60f11
☆ 2017-06-13 11:39:05.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@54863bf7
☆ 2017-06-13 11:39:05.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@54863bf7
☆ 2017-06-13 11:39:05.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@54863bf7
☆ 2017-06-13 11:39:05.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@5ac84ea7
☆ 2017-06-13 11:39:05.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@83a79a9
☆ 2017-06-13 11:39:05.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3d77456e
☆ 2017-06-13 11:39:05.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3d77456e
☆ 2017-06-13 11:39:05.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@470f4194
☆ 2017-06-13 11:39:05.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@36deb76c
☆ 2017-06-13 11:39:05.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@36deb76c
☆ 2017-06-13 11:39:05.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@cc2f96
☆ 2017-06-13 11:39:05.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@cc2f96
☆ 2017-06-13 11:39:05.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@16cfb543
☆ 2017-06-13 11:39:05.169 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24a0ebe0
☆ 2017-06-13 11:39:05.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@554db86c
☆ 2017-06-13 11:39:05.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@4d407a18
☆ 2017-06-13 11:39:05.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4d407a18
☆ 2017-06-13 11:39:05.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1c517307
☆ 2017-06-13 11:39:05.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@528f4a2f
☆ 2017-06-13 11:39:05.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a8a2c08
☆ 2017-06-13 11:39:05.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1df53d9a
☆ 2017-06-13 11:39:05.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@a2bac68
☆ 2017-06-13 11:39:05.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@225d5130
☆ 2017-06-13 11:39:05.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@392cd31f
☆ 2017-06-13 11:39:05.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d01304d
☆ 2017-06-13 11:39:05.185 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 11:39:05.188 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:39:05.189 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 11:39:05.189 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 11:39:05.192 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 11:39:05.192 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 11:39:05.373 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:39:05.373 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:39:05.373 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 11:39:05.381 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 11:39:05.402 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 11:39:05.458 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 11:39:05.459 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 11:39:05.459 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:39:05.460 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:39:05.460 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 11:39:05.461 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 11:39:05.461 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 11:39:05.462 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:39:05.462 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 11:39:05.463 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 11:39:05.463 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 11:39:05.463 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 11:39:05.463 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:39:05.464 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 11:39:05.486 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 11:39:05.514 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 11:39:05.515 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 11:39:05.515 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 11:39:05.515 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 11:39:05.515 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 11:39:05.515 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 11:39:05.516 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4f89b64a
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 11:39:05.517 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 11:39:05.518 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 11:39:05.548 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 11:39:05.550 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 11:39:05.550 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2bdfd4d2, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 11:39:05.557 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 11:39:05.560 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 11:39:05.562 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 11:39:05.569 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 11:39:05.569 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 11:39:05.571 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 11:39:05.572 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 11:39:05.572 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 11:39:05.573 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ace906a
☆ 2017-06-13 11:39:05.575 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: b785e800-8416-433f-a93f-bc205b6b9d18 (<unnamed>)
☆ 2017-06-13 11:39:05.575 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 11:39:05.610 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 11:39:14.569 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 11:39:14.570 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:39:14.571 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:39:14.575 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:44:48.077 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 11:44:48.085 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:44:48.086 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:44:48.088 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:44:48.138 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 11:44:48.139 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 11:44:48.140 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 11:44:48.154 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 11:44:48.155 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 11:44:48.156 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 11:44:48.159 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 11:44:48.342 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:44:48.342 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:44:48.343 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:44:48.354 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 11:44:48.354 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 11:44:48.363 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 11:44:48.369 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 11:44:48.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@540573cc
☆ 2017-06-13 11:44:48.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@540573cc
☆ 2017-06-13 11:44:48.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@540573cc
☆ 2017-06-13 11:44:48.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4bbd6881
☆ 2017-06-13 11:44:48.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5a96730e
☆ 2017-06-13 11:44:48.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@562e2723
☆ 2017-06-13 11:44:48.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@126a071a
☆ 2017-06-13 11:44:48.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@126a071a
☆ 2017-06-13 11:44:48.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@126a071a
☆ 2017-06-13 11:44:48.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2765c220
☆ 2017-06-13 11:44:48.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2765c220
☆ 2017-06-13 11:44:48.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2765c220
☆ 2017-06-13 11:44:48.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@4e04040c
☆ 2017-06-13 11:44:48.390 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@4e04040c
☆ 2017-06-13 11:44:48.390 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4e04040c
☆ 2017-06-13 11:44:48.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@54fc133a
☆ 2017-06-13 11:44:48.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@54fc133a
☆ 2017-06-13 11:44:48.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@54fc133a
☆ 2017-06-13 11:44:48.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@3920c810
☆ 2017-06-13 11:44:48.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@3920c810
☆ 2017-06-13 11:44:48.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@3920c810
☆ 2017-06-13 11:44:48.393 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@16288e41
☆ 2017-06-13 11:44:48.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@16288e41
☆ 2017-06-13 11:44:48.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16288e41
☆ 2017-06-13 11:44:48.395 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@14f4882
☆ 2017-06-13 11:44:48.395 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@14f4882
☆ 2017-06-13 11:44:48.395 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@14f4882
☆ 2017-06-13 11:44:48.396 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4dd52b4c
☆ 2017-06-13 11:44:48.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4dd52b4c
☆ 2017-06-13 11:44:48.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@702b38d6
☆ 2017-06-13 11:44:48.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@702b38d6
☆ 2017-06-13 11:44:48.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@7891cb9f
☆ 2017-06-13 11:44:48.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@7891cb9f
☆ 2017-06-13 11:44:48.399 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15e6bbf0
☆ 2017-06-13 11:44:48.400 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28a2ea61
☆ 2017-06-13 11:44:48.400 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@5d1c2b19
☆ 2017-06-13 11:44:48.400 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d1c2b19
☆ 2017-06-13 11:44:48.402 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@4175c458
☆ 2017-06-13 11:44:48.402 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@4175c458
☆ 2017-06-13 11:44:48.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@5c8f176e
☆ 2017-06-13 11:44:48.403 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5c8f176e
☆ 2017-06-13 11:44:48.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@11d89c9f
☆ 2017-06-13 11:44:48.404 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11d89c9f
☆ 2017-06-13 11:44:48.405 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11d89c9f
☆ 2017-06-13 11:44:48.406 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@40e9d52e
☆ 2017-06-13 11:44:48.407 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4c06dcee
☆ 2017-06-13 11:44:48.407 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c06dcee
☆ 2017-06-13 11:44:48.407 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c06dcee
☆ 2017-06-13 11:44:48.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6997ee0f
☆ 2017-06-13 11:44:48.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@67fcc6d0
☆ 2017-06-13 11:44:48.408 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@67fcc6d0
☆ 2017-06-13 11:44:48.409 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@2c59cd4f
☆ 2017-06-13 11:44:48.409 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2c59cd4f
☆ 2017-06-13 11:44:48.410 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@78118108
☆ 2017-06-13 11:44:48.410 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78118108
☆ 2017-06-13 11:44:48.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@1a9525e2
☆ 2017-06-13 11:44:48.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1a9525e2
☆ 2017-06-13 11:44:48.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@48794bdc
☆ 2017-06-13 11:44:48.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@48794bdc
☆ 2017-06-13 11:44:48.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@67912b9c
☆ 2017-06-13 11:44:48.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@638dee89
☆ 2017-06-13 11:44:48.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@638dee89
☆ 2017-06-13 11:44:48.414 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@638dee89
☆ 2017-06-13 11:44:48.414 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3249a669
☆ 2017-06-13 11:44:48.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3249a669
☆ 2017-06-13 11:44:48.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3249a669
☆ 2017-06-13 11:44:48.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@51ac332d
☆ 2017-06-13 11:44:48.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@485b4212
☆ 2017-06-13 11:44:48.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@485b4212
☆ 2017-06-13 11:44:48.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@485b4212
☆ 2017-06-13 11:44:48.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@26f77f6a
☆ 2017-06-13 11:44:48.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@26f77f6a
☆ 2017-06-13 11:44:48.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@26f77f6a
☆ 2017-06-13 11:44:48.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@4546bbc3
☆ 2017-06-13 11:44:48.418 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@77e0ba0a
☆ 2017-06-13 11:44:48.421 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3a8d395f
☆ 2017-06-13 11:44:48.421 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a8d395f
☆ 2017-06-13 11:44:48.421 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ca95d70
☆ 2017-06-13 11:44:48.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@611a08c1
☆ 2017-06-13 11:44:48.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@611a08c1
☆ 2017-06-13 11:44:48.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@2e69a044
☆ 2017-06-13 11:44:48.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2e69a044
☆ 2017-06-13 11:44:48.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29e54691
☆ 2017-06-13 11:44:48.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@394f0b8a
☆ 2017-06-13 11:44:48.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@3e85d5e2
☆ 2017-06-13 11:44:48.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@da6efc8
☆ 2017-06-13 11:44:48.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@da6efc8
☆ 2017-06-13 11:44:48.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a428b1
☆ 2017-06-13 11:44:48.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3fc64f62
☆ 2017-06-13 11:44:48.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c1105bb
☆ 2017-06-13 11:44:48.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@deea9cf
☆ 2017-06-13 11:44:48.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@29abf963
☆ 2017-06-13 11:44:48.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@241b1e6b
☆ 2017-06-13 11:44:48.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@70f3fb8e
☆ 2017-06-13 11:44:48.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@8ab948e
☆ 2017-06-13 11:44:48.442 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 11:44:48.444 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:44:48.445 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 11:44:48.445 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 11:44:48.447 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 11:44:48.447 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 11:44:48.636 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:44:48.636 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:44:48.636 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 11:44:48.645 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 11:44:48.664 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 11:44:48.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 11:44:48.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 11:44:48.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:44:48.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:44:48.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 11:44:48.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 11:44:48.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 11:44:48.724 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:44:48.725 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 11:44:48.725 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 11:44:48.726 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 11:44:48.726 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 11:44:48.726 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:44:48.727 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 11:44:48.748 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 11:44:48.774 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 11:44:48.775 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 11:44:48.775 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 11:44:48.775 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 11:44:48.775 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 11:44:48.776 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4b79a6ac
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 11:44:48.777 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 11:44:48.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 11:44:48.807 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 11:44:48.809 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 11:44:48.809 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4294ee89, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 11:44:48.816 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 11:44:48.819 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 11:44:48.820 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 11:44:48.827 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 11:44:48.828 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 11:44:48.829 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 11:44:48.830 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 11:44:48.830 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 11:44:48.831 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5427b553
☆ 2017-06-13 11:44:48.832 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 61d47822-d367-4fde-9136-470faa2d7919 (<unnamed>)
☆ 2017-06-13 11:44:48.833 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 11:44:48.866 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 11:45:18.633 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 11:45:23.179 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 11:45:23.179 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:45:23.180 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:45:23.184 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:45:50.072 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 11:45:50.079 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:45:50.081 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:45:50.082 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:45:50.132 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 11:45:50.133 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 11:45:50.134 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 11:45:50.148 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 11:45:50.149 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 11:45:50.149 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 11:45:50.153 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 11:45:50.314 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:45:50.314 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:45:50.314 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:45:50.323 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 11:45:50.324 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 11:45:50.333 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 11:45:50.338 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 11:45:50.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@702f5334
☆ 2017-06-13 11:45:50.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@702f5334
☆ 2017-06-13 11:45:50.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@702f5334
☆ 2017-06-13 11:45:50.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6b5cfcf3
☆ 2017-06-13 11:45:50.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c449fde
☆ 2017-06-13 11:45:50.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@1a1130a1
☆ 2017-06-13 11:45:50.355 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@35508f6c
☆ 2017-06-13 11:45:50.355 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@35508f6c
☆ 2017-06-13 11:45:50.356 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@35508f6c
☆ 2017-06-13 11:45:50.357 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@3e79c2b0
☆ 2017-06-13 11:45:50.357 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@3e79c2b0
☆ 2017-06-13 11:45:50.357 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e79c2b0
☆ 2017-06-13 11:45:50.358 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@71aef2cc
☆ 2017-06-13 11:45:50.358 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@71aef2cc
☆ 2017-06-13 11:45:50.358 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@71aef2cc
☆ 2017-06-13 11:45:50.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@653fe33a
☆ 2017-06-13 11:45:50.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@653fe33a
☆ 2017-06-13 11:45:50.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@653fe33a
☆ 2017-06-13 11:45:50.360 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@b364988
☆ 2017-06-13 11:45:50.360 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@b364988
☆ 2017-06-13 11:45:50.361 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@b364988
☆ 2017-06-13 11:45:50.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@51496b0f
☆ 2017-06-13 11:45:50.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@51496b0f
☆ 2017-06-13 11:45:50.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51496b0f
☆ 2017-06-13 11:45:50.363 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@2bee1213
☆ 2017-06-13 11:45:50.363 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@2bee1213
☆ 2017-06-13 11:45:50.363 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2bee1213
☆ 2017-06-13 11:45:50.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@210acc29
☆ 2017-06-13 11:45:50.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@210acc29
☆ 2017-06-13 11:45:50.365 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@188c4188
☆ 2017-06-13 11:45:50.365 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@188c4188
☆ 2017-06-13 11:45:50.366 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@595c3b99
☆ 2017-06-13 11:45:50.366 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@595c3b99
☆ 2017-06-13 11:45:50.367 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3a589833
☆ 2017-06-13 11:45:50.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@25a76d2
☆ 2017-06-13 11:45:50.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@3ab7e854
☆ 2017-06-13 11:45:50.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ab7e854
☆ 2017-06-13 11:45:50.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@5326942f
☆ 2017-06-13 11:45:50.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@5326942f
☆ 2017-06-13 11:45:50.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@1d15b301
☆ 2017-06-13 11:45:50.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1d15b301
☆ 2017-06-13 11:45:50.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@7505567c
☆ 2017-06-13 11:45:50.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7505567c
☆ 2017-06-13 11:45:50.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7505567c
☆ 2017-06-13 11:45:50.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@43917dd0
☆ 2017-06-13 11:45:50.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@1efffc7d
☆ 2017-06-13 11:45:50.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1efffc7d
☆ 2017-06-13 11:45:50.375 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1efffc7d
☆ 2017-06-13 11:45:50.376 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7700e2aa
☆ 2017-06-13 11:45:50.376 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@3a50f38f
☆ 2017-06-13 11:45:50.377 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3a50f38f
☆ 2017-06-13 11:45:50.377 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@3143c350
☆ 2017-06-13 11:45:50.377 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3143c350
☆ 2017-06-13 11:45:50.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@2d5cebce
☆ 2017-06-13 11:45:50.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2d5cebce
☆ 2017-06-13 11:45:50.379 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@9a420e7
☆ 2017-06-13 11:45:50.379 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@9a420e7
☆ 2017-06-13 11:45:50.380 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6565363e
☆ 2017-06-13 11:45:50.380 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6565363e
☆ 2017-06-13 11:45:50.381 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@53c52327
☆ 2017-06-13 11:45:50.381 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@60291d54
☆ 2017-06-13 11:45:50.382 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@60291d54
☆ 2017-06-13 11:45:50.382 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@60291d54
☆ 2017-06-13 11:45:50.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@446811d5
☆ 2017-06-13 11:45:50.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@446811d5
☆ 2017-06-13 11:45:50.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@446811d5
☆ 2017-06-13 11:45:50.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@37eb274e
☆ 2017-06-13 11:45:50.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@1e80010c
☆ 2017-06-13 11:45:50.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@1e80010c
☆ 2017-06-13 11:45:50.384 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@1e80010c
☆ 2017-06-13 11:45:50.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6321b6ff
☆ 2017-06-13 11:45:50.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6321b6ff
☆ 2017-06-13 11:45:50.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6321b6ff
☆ 2017-06-13 11:45:50.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1bff4f3b
☆ 2017-06-13 11:45:50.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@66ffbd77
☆ 2017-06-13 11:45:50.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@e0a9855
☆ 2017-06-13 11:45:50.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e0a9855
☆ 2017-06-13 11:45:50.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@337392be
☆ 2017-06-13 11:45:50.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@531deada
☆ 2017-06-13 11:45:50.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@531deada
☆ 2017-06-13 11:45:50.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@1bd8a9a6
☆ 2017-06-13 11:45:50.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1bd8a9a6
☆ 2017-06-13 11:45:50.395 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9df5076
☆ 2017-06-13 11:45:50.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2e8a97a1
☆ 2017-06-13 11:45:50.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@48afbc7e
☆ 2017-06-13 11:45:50.400 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@34d1f44
☆ 2017-06-13 11:45:50.401 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34d1f44
☆ 2017-06-13 11:45:50.401 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@148cdfe6
☆ 2017-06-13 11:45:50.401 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f50550c
☆ 2017-06-13 11:45:50.401 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@23ee2d99
☆ 2017-06-13 11:45:50.401 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6f2c3500
☆ 2017-06-13 11:45:50.401 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d2da4ec
☆ 2017-06-13 11:45:50.402 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60286a70
☆ 2017-06-13 11:45:50.402 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@32f81109
☆ 2017-06-13 11:45:50.402 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c72b663
☆ 2017-06-13 11:45:50.409 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 11:45:50.411 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:45:50.412 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 11:45:50.412 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 11:45:50.414 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 11:45:50.414 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 11:45:50.591 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:45:50.592 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:45:50.592 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 11:45:50.600 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 11:45:50.619 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 11:45:50.674 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 11:45:50.674 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 11:45:50.675 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:45:50.675 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:45:50.675 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 11:45:50.676 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 11:45:50.676 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 11:45:50.677 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:45:50.677 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 11:45:50.678 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 11:45:50.678 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 11:45:50.678 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 11:45:50.678 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:45:50.679 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 11:45:50.699 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 11:45:50.727 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 11:45:50.728 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 11:45:50.728 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 11:45:50.728 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 11:45:50.728 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 11:45:50.729 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3c878889
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 11:45:50.730 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 11:45:50.731 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 11:45:50.766 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 11:45:50.767 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 11:45:50.768 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ac7e81b, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 11:45:50.775 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 11:45:50.778 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 11:45:50.779 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 11:45:50.786 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 11:45:50.787 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 11:45:50.789 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 11:45:50.790 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 11:45:50.790 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 11:45:50.792 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2831fb73
☆ 2017-06-13 11:45:50.794 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: ef08e9da-fbe1-49f0-8b74-87fbd2bfc880 (<unnamed>)
☆ 2017-06-13 11:45:50.794 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 11:45:50.832 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 11:45:57.824 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 11:45:57.825 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:45:57.825 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:45:57.829 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:46:21.068 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 11:46:21.076 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:46:21.077 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:46:21.079 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:46:21.128 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 11:46:21.129 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 11:46:21.130 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 11:46:21.143 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 11:46:21.145 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 11:46:21.145 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 11:46:21.149 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 11:46:21.304 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 11:46:21.304 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 11:46:21.304 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 11:46:21.313 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 11:46:21.314 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 11:46:21.323 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 11:46:21.328 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 11:46:21.341 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@61765a1d
☆ 2017-06-13 11:46:21.342 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@61765a1d
☆ 2017-06-13 11:46:21.342 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@61765a1d
☆ 2017-06-13 11:46:21.343 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@789647f5
☆ 2017-06-13 11:46:21.343 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@4d1036b9
☆ 2017-06-13 11:46:21.344 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@267f8a9f
☆ 2017-06-13 11:46:21.345 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@6f0ec003
☆ 2017-06-13 11:46:21.345 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@6f0ec003
☆ 2017-06-13 11:46:21.345 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6f0ec003
☆ 2017-06-13 11:46:21.346 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@6419797
☆ 2017-06-13 11:46:21.346 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@6419797
☆ 2017-06-13 11:46:21.346 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6419797
☆ 2017-06-13 11:46:21.347 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@7de22255
☆ 2017-06-13 11:46:21.347 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@7de22255
☆ 2017-06-13 11:46:21.347 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7de22255
☆ 2017-06-13 11:46:21.348 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@7eded09e
☆ 2017-06-13 11:46:21.348 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@7eded09e
☆ 2017-06-13 11:46:21.348 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7eded09e
☆ 2017-06-13 11:46:21.349 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@529db04
☆ 2017-06-13 11:46:21.349 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@529db04
☆ 2017-06-13 11:46:21.350 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@529db04
☆ 2017-06-13 11:46:21.351 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4bb8a302
☆ 2017-06-13 11:46:21.351 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4bb8a302
☆ 2017-06-13 11:46:21.351 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4bb8a302
☆ 2017-06-13 11:46:21.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@66d34a3d
☆ 2017-06-13 11:46:21.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@66d34a3d
☆ 2017-06-13 11:46:21.352 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66d34a3d
☆ 2017-06-13 11:46:21.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3d870228
☆ 2017-06-13 11:46:21.353 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3d870228
☆ 2017-06-13 11:46:21.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b79e214
☆ 2017-06-13 11:46:21.354 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b79e214
☆ 2017-06-13 11:46:21.355 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@192ac3af
☆ 2017-06-13 11:46:21.355 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@192ac3af
☆ 2017-06-13 11:46:21.356 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2f164faf
☆ 2017-06-13 11:46:21.356 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@87d9bb1
☆ 2017-06-13 11:46:21.357 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@743e087
☆ 2017-06-13 11:46:21.357 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@743e087
☆ 2017-06-13 11:46:21.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@173779bd
☆ 2017-06-13 11:46:21.359 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@173779bd
☆ 2017-06-13 11:46:21.360 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@36b9bf6a
☆ 2017-06-13 11:46:21.360 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@36b9bf6a
☆ 2017-06-13 11:46:21.361 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3ee7fe81
☆ 2017-06-13 11:46:21.361 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3ee7fe81
☆ 2017-06-13 11:46:21.361 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3ee7fe81
☆ 2017-06-13 11:46:21.362 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@32cf591e
☆ 2017-06-13 11:46:21.363 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@7f53f3e9
☆ 2017-06-13 11:46:21.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f53f3e9
☆ 2017-06-13 11:46:21.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f53f3e9
☆ 2017-06-13 11:46:21.364 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@43b59b08
☆ 2017-06-13 11:46:21.365 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@28c1c845
☆ 2017-06-13 11:46:21.365 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@28c1c845
☆ 2017-06-13 11:46:21.366 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@74b2ef83
☆ 2017-06-13 11:46:21.366 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@74b2ef83
☆ 2017-06-13 11:46:21.367 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@90d9a12
☆ 2017-06-13 11:46:21.367 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@90d9a12
☆ 2017-06-13 11:46:21.367 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@68ea7a68
☆ 2017-06-13 11:46:21.367 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@68ea7a68
☆ 2017-06-13 11:46:21.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@f20cc82
☆ 2017-06-13 11:46:21.369 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@f20cc82
☆ 2017-06-13 11:46:21.369 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13e0a609
☆ 2017-06-13 11:46:21.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4744053
☆ 2017-06-13 11:46:21.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4744053
☆ 2017-06-13 11:46:21.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4744053
☆ 2017-06-13 11:46:21.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3f31b7f
☆ 2017-06-13 11:46:21.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3f31b7f
☆ 2017-06-13 11:46:21.371 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3f31b7f
☆ 2017-06-13 11:46:21.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@27e24636
☆ 2017-06-13 11:46:21.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@777d6c98
☆ 2017-06-13 11:46:21.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@777d6c98
☆ 2017-06-13 11:46:21.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@777d6c98
☆ 2017-06-13 11:46:21.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6cd16a3f
☆ 2017-06-13 11:46:21.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6cd16a3f
☆ 2017-06-13 11:46:21.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6cd16a3f
☆ 2017-06-13 11:46:21.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@5bc35dcd
☆ 2017-06-13 11:46:21.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@3487b570
☆ 2017-06-13 11:46:21.377 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3d13d151
☆ 2017-06-13 11:46:21.377 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3d13d151
☆ 2017-06-13 11:46:21.378 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@eb65b23
☆ 2017-06-13 11:46:21.380 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@5a9ba509
☆ 2017-06-13 11:46:21.380 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a9ba509
☆ 2017-06-13 11:46:21.382 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@3ded2656
☆ 2017-06-13 11:46:21.382 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3ded2656
☆ 2017-06-13 11:46:21.383 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@61846e12
☆ 2017-06-13 11:46:21.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4dfbfff
☆ 2017-06-13 11:46:21.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@1df3575a
☆ 2017-06-13 11:46:21.390 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@34e33f25
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@34e33f25
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e6beb86
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@235ce779
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c7d019a
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3bffd5c6
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6a992ee4
☆ 2017-06-13 11:46:21.391 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e3a7be1
☆ 2017-06-13 11:46:21.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1affde6d
☆ 2017-06-13 11:46:21.392 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5feb7911
☆ 2017-06-13 11:46:21.399 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 11:46:21.401 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:46:21.402 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 11:46:21.402 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 11:46:21.404 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 11:46:21.404 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 11:46:21.581 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:46:21.582 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 11:46:21.582 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 11:46:21.590 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 11:46:21.609 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 11:46:21.665 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 11:46:21.666 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 11:46:21.666 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:46:21.666 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 11:46:21.667 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 11:46:21.667 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 11:46:21.668 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 11:46:21.668 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:46:21.669 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 11:46:21.669 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 11:46:21.670 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 11:46:21.670 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 11:46:21.670 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 11:46:21.671 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 11:46:21.693 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 11:46:21.720 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 11:46:21.721 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 11:46:21.722 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 11:46:21.723 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3dbbabd8
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 11:46:21.724 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 11:46:21.725 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 11:46:21.725 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 11:46:21.725 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 11:46:21.725 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 11:46:21.725 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 11:46:21.725 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 11:46:21.754 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 11:46:21.755 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 11:46:21.755 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4802857d, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 11:46:21.763 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 11:46:21.765 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 11:46:21.767 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 11:46:21.774 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 11:46:21.774 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 11:46:21.776 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 11:46:21.776 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 11:46:21.777 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 11:46:21.778 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7a0e7d41
☆ 2017-06-13 11:46:21.779 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: b4e9dcbf-4f0e-4ddb-865b-85bc2010cba7 (<unnamed>)
☆ 2017-06-13 11:46:21.779 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 11:46:21.813 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 11:46:38.935 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 11:46:38.936 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 11:46:38.936 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 11:46:38.940 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:42:07.671 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:42:07.679 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:42:07.680 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:42:07.682 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:42:07.752 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:42:07.753 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:42:07.754 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:42:07.767 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:42:07.769 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:42:07.769 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:42:07.773 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:42:07.921 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:42:07.922 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:42:07.922 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:42:07.931 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:42:07.932 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:42:07.942 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:42:07.947 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:42:07.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@27fd5e1b
☆ 2017-06-13 12:42:07.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@27fd5e1b
☆ 2017-06-13 12:42:07.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27fd5e1b
☆ 2017-06-13 12:42:07.963 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4adee69e
☆ 2017-06-13 12:42:07.964 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b5b44b6
☆ 2017-06-13 12:42:07.964 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@5f71bc76
☆ 2017-06-13 12:42:07.965 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@5ae71062
☆ 2017-06-13 12:42:07.965 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@5ae71062
☆ 2017-06-13 12:42:07.966 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5ae71062
☆ 2017-06-13 12:42:07.966 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@75fc551e
☆ 2017-06-13 12:42:07.967 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@75fc551e
☆ 2017-06-13 12:42:07.967 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@75fc551e
☆ 2017-06-13 12:42:07.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@2a0052b9
☆ 2017-06-13 12:42:07.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@2a0052b9
☆ 2017-06-13 12:42:07.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a0052b9
☆ 2017-06-13 12:42:07.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@2490690e
☆ 2017-06-13 12:42:07.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@2490690e
☆ 2017-06-13 12:42:07.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2490690e
☆ 2017-06-13 12:42:08.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@573c5faf
☆ 2017-06-13 12:42:08.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@573c5faf
☆ 2017-06-13 12:42:08.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@573c5faf
☆ 2017-06-13 12:42:08.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7a630d9a
☆ 2017-06-13 12:42:08.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7a630d9a
☆ 2017-06-13 12:42:08.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7a630d9a
☆ 2017-06-13 12:42:08.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@4723f822
☆ 2017-06-13 12:42:08.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@4723f822
☆ 2017-06-13 12:42:08.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4723f822
☆ 2017-06-13 12:42:08.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f464548
☆ 2017-06-13 12:42:08.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f464548
☆ 2017-06-13 12:42:08.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77a916e0
☆ 2017-06-13 12:42:08.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77a916e0
☆ 2017-06-13 12:42:08.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@501654da
☆ 2017-06-13 12:42:08.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@501654da
☆ 2017-06-13 12:42:08.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@25fd585a
☆ 2017-06-13 12:42:08.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@21649026
☆ 2017-06-13 12:42:08.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@2d7fd0a8
☆ 2017-06-13 12:42:08.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@2d7fd0a8
☆ 2017-06-13 12:42:08.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@2c069028
☆ 2017-06-13 12:42:08.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@2c069028
☆ 2017-06-13 12:42:08.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@16c771a5
☆ 2017-06-13 12:42:08.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@16c771a5
☆ 2017-06-13 12:42:08.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@35db726b
☆ 2017-06-13 12:42:08.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@35db726b
☆ 2017-06-13 12:42:08.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@35db726b
☆ 2017-06-13 12:42:08.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@621842de
☆ 2017-06-13 12:42:08.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@778b6bd7
☆ 2017-06-13 12:42:08.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@778b6bd7
☆ 2017-06-13 12:42:08.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@778b6bd7
☆ 2017-06-13 12:42:08.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63d1200a
☆ 2017-06-13 12:42:08.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2f913584
☆ 2017-06-13 12:42:08.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f913584
☆ 2017-06-13 12:42:08.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@7b5787e4
☆ 2017-06-13 12:42:08.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7b5787e4
☆ 2017-06-13 12:42:08.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7e0305cb
☆ 2017-06-13 12:42:08.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7e0305cb
☆ 2017-06-13 12:42:08.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@29cb6311
☆ 2017-06-13 12:42:08.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@29cb6311
☆ 2017-06-13 12:42:08.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3e210f53
☆ 2017-06-13 12:42:08.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3e210f53
☆ 2017-06-13 12:42:08.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@dfbe79d
☆ 2017-06-13 12:42:08.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@132b25d7
☆ 2017-06-13 12:42:08.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@132b25d7
☆ 2017-06-13 12:42:08.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@132b25d7
☆ 2017-06-13 12:42:08.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@a1bce87
☆ 2017-06-13 12:42:08.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@a1bce87
☆ 2017-06-13 12:42:08.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@a1bce87
☆ 2017-06-13 12:42:08.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@3631fa0c
☆ 2017-06-13 12:42:08.026 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3f002a50
☆ 2017-06-13 12:42:08.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f002a50
☆ 2017-06-13 12:42:08.027 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3f002a50
☆ 2017-06-13 12:42:08.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@49ecb1b7
☆ 2017-06-13 12:42:08.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@49ecb1b7
☆ 2017-06-13 12:42:08.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@49ecb1b7
☆ 2017-06-13 12:42:08.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@7c4215a5
☆ 2017-06-13 12:42:08.029 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@7cbf8b3b
☆ 2017-06-13 12:42:08.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@2ecc653e
☆ 2017-06-13 12:42:08.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2ecc653e
☆ 2017-06-13 12:42:08.032 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17b23e40
☆ 2017-06-13 12:42:08.034 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@29e55571
☆ 2017-06-13 12:42:08.035 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@29e55571
☆ 2017-06-13 12:42:08.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@52e8040f
☆ 2017-06-13 12:42:08.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@52e8040f
☆ 2017-06-13 12:42:08.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e720dd7
☆ 2017-06-13 12:42:08.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@702ef0b4
☆ 2017-06-13 12:42:08.041 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@2eb5ba51
☆ 2017-06-13 12:42:08.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@35a19ad5
☆ 2017-06-13 12:42:08.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35a19ad5
☆ 2017-06-13 12:42:08.043 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ac4d9b5
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@338a8d0a
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@661febed
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@651a52bf
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@49bf36d8
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2eba0038
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3763d681
☆ 2017-06-13 12:42:08.044 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@dbf578
☆ 2017-06-13 12:42:08.052 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:42:08.054 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:42:08.055 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:42:08.055 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:42:08.057 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:42:08.057 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:42:08.198 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:42:08.198 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:42:08.198 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:42:08.207 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:42:08.228 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:42:08.284 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:42:08.284 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:42:08.285 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:42:08.285 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:42:08.285 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:42:08.286 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:42:08.286 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:42:08.287 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:42:08.288 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:42:08.288 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:42:08.288 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:42:08.289 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:42:08.289 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:42:08.289 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:42:08.310 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:42:08.337 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:42:08.338 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:42:08.339 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:42:08.340 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@20962af9
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:42:08.341 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:42:08.342 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:42:08.342 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:42:08.342 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:42:08.342 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:42:08.371 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:42:08.373 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:42:08.373 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@62e55497, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:42:08.380 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:42:08.383 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:42:08.385 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:42:08.392 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:42:08.392 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:42:08.394 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:42:08.395 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:42:08.395 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:42:08.396 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5133518b
☆ 2017-06-13 12:42:08.398 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: dc0c9153-30e8-404b-8260-16fd37ee5a35 (<unnamed>)
☆ 2017-06-13 12:42:08.398 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:42:08.438 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:42:08.488 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:42:14.490 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:42:14.491 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:42:14.491 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:42:14.495 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:43:08.061 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:43:08.069 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:43:08.070 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:43:08.072 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:43:08.140 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:43:08.141 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:43:08.142 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:43:08.155 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:43:08.156 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:43:08.157 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:43:08.160 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:43:08.323 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:43:08.323 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:43:08.323 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:43:08.332 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:43:08.333 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:43:08.343 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:43:08.351 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:43:08.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@500cc100
☆ 2017-06-13 12:43:08.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@500cc100
☆ 2017-06-13 12:43:08.368 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@500cc100
☆ 2017-06-13 12:43:08.369 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@ded2c04
☆ 2017-06-13 12:43:08.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3655ef20
☆ 2017-06-13 12:43:08.370 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@d4d2eb5
☆ 2017-06-13 12:43:08.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4bca5623
☆ 2017-06-13 12:43:08.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4bca5623
☆ 2017-06-13 12:43:08.372 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4bca5623
☆ 2017-06-13 12:43:08.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2979158e
☆ 2017-06-13 12:43:08.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2979158e
☆ 2017-06-13 12:43:08.373 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2979158e
☆ 2017-06-13 12:43:08.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@fad9f99
☆ 2017-06-13 12:43:08.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@fad9f99
☆ 2017-06-13 12:43:08.374 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@fad9f99
☆ 2017-06-13 12:43:08.410 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@3c09e4f9
☆ 2017-06-13 12:43:08.410 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@3c09e4f9
☆ 2017-06-13 12:43:08.411 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c09e4f9
☆ 2017-06-13 12:43:08.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2a8f00d8
☆ 2017-06-13 12:43:08.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2a8f00d8
☆ 2017-06-13 12:43:08.412 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@2a8f00d8
☆ 2017-06-13 12:43:08.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5d44219c
☆ 2017-06-13 12:43:08.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5d44219c
☆ 2017-06-13 12:43:08.413 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d44219c
☆ 2017-06-13 12:43:08.414 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@176c8b29
☆ 2017-06-13 12:43:08.414 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@176c8b29
☆ 2017-06-13 12:43:08.415 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@176c8b29
☆ 2017-06-13 12:43:08.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@14e56593
☆ 2017-06-13 12:43:08.416 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@14e56593
☆ 2017-06-13 12:43:08.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a6ab6f3
☆ 2017-06-13 12:43:08.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a6ab6f3
☆ 2017-06-13 12:43:08.417 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@6bc6023a
☆ 2017-06-13 12:43:08.418 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@6bc6023a
☆ 2017-06-13 12:43:08.418 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@346c55a0
☆ 2017-06-13 12:43:08.419 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5b869cea
☆ 2017-06-13 12:43:08.419 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@68eb9cfa
☆ 2017-06-13 12:43:08.420 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@68eb9cfa
☆ 2017-06-13 12:43:08.421 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@7cae4e4f
☆ 2017-06-13 12:43:08.421 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@7cae4e4f
☆ 2017-06-13 12:43:08.422 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@51629686
☆ 2017-06-13 12:43:08.423 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51629686
☆ 2017-06-13 12:43:08.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@459d2af3
☆ 2017-06-13 12:43:08.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@459d2af3
☆ 2017-06-13 12:43:08.424 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@459d2af3
☆ 2017-06-13 12:43:08.425 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@bff87e5
☆ 2017-06-13 12:43:08.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@1c626987
☆ 2017-06-13 12:43:08.426 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c626987
☆ 2017-06-13 12:43:08.427 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c626987
☆ 2017-06-13 12:43:08.427 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b365bc8
☆ 2017-06-13 12:43:08.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@6cd8d862
☆ 2017-06-13 12:43:08.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6cd8d862
☆ 2017-06-13 12:43:08.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@59a3d0f4
☆ 2017-06-13 12:43:08.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59a3d0f4
☆ 2017-06-13 12:43:08.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b9094f2
☆ 2017-06-13 12:43:08.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b9094f2
☆ 2017-06-13 12:43:08.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@38f7b5f8
☆ 2017-06-13 12:43:08.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38f7b5f8
☆ 2017-06-13 12:43:08.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c70878f
☆ 2017-06-13 12:43:08.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c70878f
☆ 2017-06-13 12:43:08.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2765022c
☆ 2017-06-13 12:43:08.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4fa5dd7a
☆ 2017-06-13 12:43:08.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4fa5dd7a
☆ 2017-06-13 12:43:08.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4fa5dd7a
☆ 2017-06-13 12:43:08.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@14af879c
☆ 2017-06-13 12:43:08.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@14af879c
☆ 2017-06-13 12:43:08.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@14af879c
☆ 2017-06-13 12:43:08.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@28327798
☆ 2017-06-13 12:43:08.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3f3e0609
☆ 2017-06-13 12:43:08.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f3e0609
☆ 2017-06-13 12:43:08.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3f3e0609
☆ 2017-06-13 12:43:08.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@edb844c
☆ 2017-06-13 12:43:08.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@edb844c
☆ 2017-06-13 12:43:08.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@edb844c
☆ 2017-06-13 12:43:08.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@76c05bcc
☆ 2017-06-13 12:43:08.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@4232b037
☆ 2017-06-13 12:43:08.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@46f6e99a
☆ 2017-06-13 12:43:08.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46f6e99a
☆ 2017-06-13 12:43:08.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@304f1ffb
☆ 2017-06-13 12:43:08.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@33cf77d6
☆ 2017-06-13 12:43:08.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@33cf77d6
☆ 2017-06-13 12:43:08.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@52474e74
☆ 2017-06-13 12:43:08.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@52474e74
☆ 2017-06-13 12:43:08.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23168b02
☆ 2017-06-13 12:43:08.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@152497cd
☆ 2017-06-13 12:43:08.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@3be730b2
☆ 2017-06-13 12:43:08.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@f5860b9
☆ 2017-06-13 12:43:08.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f5860b9
☆ 2017-06-13 12:43:08.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@547c699e
☆ 2017-06-13 12:43:08.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18ed9600
☆ 2017-06-13 12:43:08.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@19703909
☆ 2017-06-13 12:43:08.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@510bc811
☆ 2017-06-13 12:43:08.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@668c7b37
☆ 2017-06-13 12:43:08.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1225bc70
☆ 2017-06-13 12:43:08.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@a85674c
☆ 2017-06-13 12:43:08.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5417d4d
☆ 2017-06-13 12:43:08.470 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:43:08.472 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:43:08.473 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:43:08.473 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:43:08.475 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:43:08.476 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:43:08.617 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:43:08.617 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:43:08.618 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:43:08.626 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:43:08.646 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:43:08.703 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:43:08.703 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:43:08.703 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:43:08.704 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:43:08.704 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:43:08.705 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:43:08.705 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:43:08.706 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:43:08.706 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:43:08.707 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:43:08.707 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:43:08.707 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:43:08.707 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:43:08.708 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:43:08.730 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:43:08.757 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:43:08.758 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@69670de4
☆ 2017-06-13 12:43:08.759 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:43:08.760 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:43:08.789 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:43:08.791 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:43:08.791 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5a5a267f, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:43:08.798 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:43:08.801 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:43:08.803 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:43:08.810 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:43:08.810 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:43:08.812 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:43:08.812 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:43:08.813 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:43:08.814 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1f62e97d
☆ 2017-06-13 12:43:08.815 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 4f481689-406d-4efe-9761-8015fb5c9e8a (<unnamed>)
☆ 2017-06-13 12:43:08.815 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:43:08.864 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:43:08.919 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:43:38.614 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 12:44:25.193 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:44:25.201 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:44:25.202 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:44:25.204 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:44:25.272 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:44:25.273 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:44:25.274 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:44:25.287 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:44:25.288 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:44:25.288 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:44:25.292 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:44:25.439 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:44:25.439 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:44:25.439 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:44:25.448 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:44:25.448 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:44:25.457 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:44:25.463 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:44:25.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@500cc100
☆ 2017-06-13 12:44:25.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@500cc100
☆ 2017-06-13 12:44:25.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@500cc100
☆ 2017-06-13 12:44:25.479 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@ded2c04
☆ 2017-06-13 12:44:25.479 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3655ef20
☆ 2017-06-13 12:44:25.480 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@d4d2eb5
☆ 2017-06-13 12:44:25.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4bca5623
☆ 2017-06-13 12:44:25.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@4bca5623
☆ 2017-06-13 12:44:25.481 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4bca5623
☆ 2017-06-13 12:44:25.482 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2979158e
☆ 2017-06-13 12:44:25.482 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2979158e
☆ 2017-06-13 12:44:25.482 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2979158e
☆ 2017-06-13 12:44:25.483 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@fad9f99
☆ 2017-06-13 12:44:25.484 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@fad9f99
☆ 2017-06-13 12:44:25.484 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@fad9f99
☆ 2017-06-13 12:44:25.518 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@3c09e4f9
☆ 2017-06-13 12:44:25.518 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@3c09e4f9
☆ 2017-06-13 12:44:25.518 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c09e4f9
☆ 2017-06-13 12:44:25.519 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2a8f00d8
☆ 2017-06-13 12:44:25.519 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2a8f00d8
☆ 2017-06-13 12:44:25.520 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@2a8f00d8
☆ 2017-06-13 12:44:25.521 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5d44219c
☆ 2017-06-13 12:44:25.521 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5d44219c
☆ 2017-06-13 12:44:25.521 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d44219c
☆ 2017-06-13 12:44:25.522 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@176c8b29
☆ 2017-06-13 12:44:25.522 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@176c8b29
☆ 2017-06-13 12:44:25.523 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@176c8b29
☆ 2017-06-13 12:44:25.524 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@14e56593
☆ 2017-06-13 12:44:25.524 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@14e56593
☆ 2017-06-13 12:44:25.525 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a6ab6f3
☆ 2017-06-13 12:44:25.525 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a6ab6f3
☆ 2017-06-13 12:44:25.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@6bc6023a
☆ 2017-06-13 12:44:25.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@6bc6023a
☆ 2017-06-13 12:44:25.527 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@346c55a0
☆ 2017-06-13 12:44:25.527 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5b869cea
☆ 2017-06-13 12:44:25.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@68eb9cfa
☆ 2017-06-13 12:44:25.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@68eb9cfa
☆ 2017-06-13 12:44:25.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@7cae4e4f
☆ 2017-06-13 12:44:25.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@7cae4e4f
☆ 2017-06-13 12:44:25.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@51629686
☆ 2017-06-13 12:44:25.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51629686
☆ 2017-06-13 12:44:25.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@459d2af3
☆ 2017-06-13 12:44:25.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@459d2af3
☆ 2017-06-13 12:44:25.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@459d2af3
☆ 2017-06-13 12:44:25.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@bff87e5
☆ 2017-06-13 12:44:25.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@1c626987
☆ 2017-06-13 12:44:25.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c626987
☆ 2017-06-13 12:44:25.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c626987
☆ 2017-06-13 12:44:25.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b365bc8
☆ 2017-06-13 12:44:25.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@6cd8d862
☆ 2017-06-13 12:44:25.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6cd8d862
☆ 2017-06-13 12:44:25.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@59a3d0f4
☆ 2017-06-13 12:44:25.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59a3d0f4
☆ 2017-06-13 12:44:25.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@6b9094f2
☆ 2017-06-13 12:44:25.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6b9094f2
☆ 2017-06-13 12:44:25.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@38f7b5f8
☆ 2017-06-13 12:44:25.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38f7b5f8
☆ 2017-06-13 12:44:25.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@c70878f
☆ 2017-06-13 12:44:25.540 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@c70878f
☆ 2017-06-13 12:44:25.541 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2765022c
☆ 2017-06-13 12:44:25.541 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4fa5dd7a
☆ 2017-06-13 12:44:25.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4fa5dd7a
☆ 2017-06-13 12:44:25.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4fa5dd7a
☆ 2017-06-13 12:44:25.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@14af879c
☆ 2017-06-13 12:44:25.543 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@14af879c
☆ 2017-06-13 12:44:25.543 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@14af879c
☆ 2017-06-13 12:44:25.543 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@28327798
☆ 2017-06-13 12:44:25.544 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3f3e0609
☆ 2017-06-13 12:44:25.544 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3f3e0609
☆ 2017-06-13 12:44:25.544 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3f3e0609
☆ 2017-06-13 12:44:25.545 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@edb844c
☆ 2017-06-13 12:44:25.545 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@edb844c
☆ 2017-06-13 12:44:25.545 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@edb844c
☆ 2017-06-13 12:44:25.546 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@76c05bcc
☆ 2017-06-13 12:44:25.546 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@4232b037
☆ 2017-06-13 12:44:25.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@46f6e99a
☆ 2017-06-13 12:44:25.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46f6e99a
☆ 2017-06-13 12:44:25.550 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@304f1ffb
☆ 2017-06-13 12:44:25.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@33cf77d6
☆ 2017-06-13 12:44:25.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@33cf77d6
☆ 2017-06-13 12:44:25.554 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@52474e74
☆ 2017-06-13 12:44:25.554 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@52474e74
☆ 2017-06-13 12:44:25.555 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@23168b02
☆ 2017-06-13 12:44:25.557 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@152497cd
☆ 2017-06-13 12:44:25.559 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@3be730b2
☆ 2017-06-13 12:44:25.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@f5860b9
☆ 2017-06-13 12:44:25.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@f5860b9
☆ 2017-06-13 12:44:25.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@547c699e
☆ 2017-06-13 12:44:25.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18ed9600
☆ 2017-06-13 12:44:25.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@19703909
☆ 2017-06-13 12:44:25.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@510bc811
☆ 2017-06-13 12:44:25.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@668c7b37
☆ 2017-06-13 12:44:25.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1225bc70
☆ 2017-06-13 12:44:25.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@a85674c
☆ 2017-06-13 12:44:25.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5417d4d
☆ 2017-06-13 12:44:25.570 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:44:25.572 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:44:25.572 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:44:25.572 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:44:25.574 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:44:25.575 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:44:25.715 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:44:25.716 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:44:25.716 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:44:25.724 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:44:25.745 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:44:25.800 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:44:25.801 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:44:25.801 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:44:25.802 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:44:25.802 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:44:25.803 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:44:25.803 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:44:25.804 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:44:25.804 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:44:25.805 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:44:25.805 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:44:25.805 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:44:25.806 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:44:25.806 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:44:25.828 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:44:25.855 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:44:25.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:44:25.856 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:44:25.857 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:44:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@69670de4
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:44:25.859 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:44:25.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:44:25.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:44:25.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:44:25.860 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:44:25.891 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:44:25.892 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:44:25.893 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5a5a267f, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:44:25.900 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:44:25.903 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:44:25.905 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:44:25.912 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:44:25.912 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:44:25.914 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:44:25.915 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:44:25.915 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:44:25.916 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1f62e97d
☆ 2017-06-13 12:44:25.917 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: b7c810ad-5895-4364-9a47-8065f7880301 (<unnamed>)
☆ 2017-06-13 12:44:25.918 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:44:25.951 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:44:25.992 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:44:28.619 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:44:28.620 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:44:28.620 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:44:28.628 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:46:12.256 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:46:12.264 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:46:12.266 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:46:12.267 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:46:12.339 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:46:12.341 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:46:12.342 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:46:12.355 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:46:12.356 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:46:12.357 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:46:12.360 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:46:12.510 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:46:12.510 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:46:12.510 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:46:12.519 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:46:12.520 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:46:12.529 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:46:12.535 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:46:12.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@3d2273
☆ 2017-06-13 12:46:12.550 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@3d2273
☆ 2017-06-13 12:46:12.550 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3d2273
☆ 2017-06-13 12:46:12.551 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@285ff0ba
☆ 2017-06-13 12:46:12.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@8d39691
☆ 2017-06-13 12:46:12.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@6ff7bc2f
☆ 2017-06-13 12:46:12.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@55737889
☆ 2017-06-13 12:46:12.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@55737889
☆ 2017-06-13 12:46:12.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55737889
☆ 2017-06-13 12:46:12.554 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@72e3575
☆ 2017-06-13 12:46:12.554 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@72e3575
☆ 2017-06-13 12:46:12.555 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72e3575
☆ 2017-06-13 12:46:12.556 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@35ecc128
☆ 2017-06-13 12:46:12.556 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@35ecc128
☆ 2017-06-13 12:46:12.556 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@35ecc128
☆ 2017-06-13 12:46:12.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@6b9f1eaa
☆ 2017-06-13 12:46:12.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@6b9f1eaa
☆ 2017-06-13 12:46:12.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b9f1eaa
☆ 2017-06-13 12:46:12.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@1d88bf21
☆ 2017-06-13 12:46:12.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@1d88bf21
☆ 2017-06-13 12:46:12.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@1d88bf21
☆ 2017-06-13 12:46:12.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5b8daff
☆ 2017-06-13 12:46:12.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5b8daff
☆ 2017-06-13 12:46:12.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b8daff
☆ 2017-06-13 12:46:12.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@10f93804
☆ 2017-06-13 12:46:12.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@10f93804
☆ 2017-06-13 12:46:12.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@10f93804
☆ 2017-06-13 12:46:12.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@188d11f6
☆ 2017-06-13 12:46:12.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@188d11f6
☆ 2017-06-13 12:46:12.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5d8ade32
☆ 2017-06-13 12:46:12.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5d8ade32
☆ 2017-06-13 12:46:12.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@70968ccd
☆ 2017-06-13 12:46:12.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@70968ccd
☆ 2017-06-13 12:46:12.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3c9f8e9b
☆ 2017-06-13 12:46:12.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1264f29e
☆ 2017-06-13 12:46:12.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@4c45a017
☆ 2017-06-13 12:46:12.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@4c45a017
☆ 2017-06-13 12:46:12.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@4e381927
☆ 2017-06-13 12:46:12.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e381927
☆ 2017-06-13 12:46:12.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@77b08872
☆ 2017-06-13 12:46:12.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77b08872
☆ 2017-06-13 12:46:12.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@31099bc4
☆ 2017-06-13 12:46:12.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@31099bc4
☆ 2017-06-13 12:46:12.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@31099bc4
☆ 2017-06-13 12:46:12.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@89db8e8
☆ 2017-06-13 12:46:12.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4de4b3e1
☆ 2017-06-13 12:46:12.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4de4b3e1
☆ 2017-06-13 12:46:12.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4de4b3e1
☆ 2017-06-13 12:46:12.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e2f8d3d
☆ 2017-06-13 12:46:12.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@6a6cdb04
☆ 2017-06-13 12:46:12.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6a6cdb04
☆ 2017-06-13 12:46:12.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@55303e22
☆ 2017-06-13 12:46:12.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@55303e22
☆ 2017-06-13 12:46:12.614 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@2cea8ab0
☆ 2017-06-13 12:46:12.614 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2cea8ab0
☆ 2017-06-13 12:46:12.614 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@4bac829c
☆ 2017-06-13 12:46:12.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4bac829c
☆ 2017-06-13 12:46:12.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b447b11
☆ 2017-06-13 12:46:12.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b447b11
☆ 2017-06-13 12:46:12.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22971c44
☆ 2017-06-13 12:46:12.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@5c44bcec
☆ 2017-06-13 12:46:12.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@5c44bcec
☆ 2017-06-13 12:46:12.617 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@5c44bcec
☆ 2017-06-13 12:46:12.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@52c22d85
☆ 2017-06-13 12:46:12.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@52c22d85
☆ 2017-06-13 12:46:12.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@52c22d85
☆ 2017-06-13 12:46:12.619 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4dba9569
☆ 2017-06-13 12:46:12.619 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3aeed340
☆ 2017-06-13 12:46:12.620 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3aeed340
☆ 2017-06-13 12:46:12.620 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3aeed340
☆ 2017-06-13 12:46:12.620 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17506045
☆ 2017-06-13 12:46:12.621 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17506045
☆ 2017-06-13 12:46:12.621 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17506045
☆ 2017-06-13 12:46:12.621 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@6f473f37
☆ 2017-06-13 12:46:12.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@28a874a9
☆ 2017-06-13 12:46:12.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@1201dd91
☆ 2017-06-13 12:46:12.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1201dd91
☆ 2017-06-13 12:46:12.625 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@794805b0
☆ 2017-06-13 12:46:12.628 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@1943a675
☆ 2017-06-13 12:46:12.628 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1943a675
☆ 2017-06-13 12:46:12.630 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4d97e9e5
☆ 2017-06-13 12:46:12.630 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d97e9e5
☆ 2017-06-13 12:46:12.630 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b8242e6
☆ 2017-06-13 12:46:12.633 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44b138a9
☆ 2017-06-13 12:46:12.634 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@5da990cc
☆ 2017-06-13 12:46:12.636 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@7f34e4fa
☆ 2017-06-13 12:46:12.636 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f34e4fa
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34ad26e
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5b81f5c9
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58b307c2
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c33bcb4
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@19bfcefe
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4d445fbd
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@d89dcc0
☆ 2017-06-13 12:46:12.637 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c8e07d9
☆ 2017-06-13 12:46:12.645 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:46:12.647 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:46:12.647 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:46:12.648 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:46:12.650 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:46:12.650 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:46:12.791 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:46:12.791 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:46:12.791 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:46:12.800 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:46:12.820 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:46:12.877 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:46:12.877 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:46:12.878 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:46:12.878 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:46:12.878 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:46:12.879 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:46:12.879 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:46:12.880 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:46:12.881 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:46:12.881 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:46:12.881 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:46:12.882 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:46:12.882 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:46:12.883 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:46:12.905 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:46:12.933 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:46:12.934 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:46:12.934 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:46:12.934 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:46:12.934 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:46:12.934 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:46:12.935 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3305fb67
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:46:12.936 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:46:12.937 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:46:12.967 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:46:12.969 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:46:12.969 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3b06b2db, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:46:12.976 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:46:12.979 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:46:12.981 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:46:12.988 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:46:12.988 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:46:12.990 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:46:12.991 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:46:12.991 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:46:12.992 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d730200
☆ 2017-06-13 12:46:12.993 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 60d08483-3f98-4a51-ad6c-bb00a23cfa59 (<unnamed>)
☆ 2017-06-13 12:46:12.993 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:46:13.028 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:46:13.068 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:46:29.264 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:46:29.265 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:46:29.265 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:46:29.270 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:47:34.812 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:47:34.821 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:47:34.822 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:47:34.824 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:47:34.895 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:47:34.896 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:47:34.897 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:47:34.910 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:47:34.912 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:47:34.912 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:47:34.916 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:47:35.065 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:47:35.065 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:47:35.065 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:47:35.074 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:47:35.075 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:47:35.084 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:47:35.090 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:47:35.104 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@66c0a69a
☆ 2017-06-13 12:47:35.105 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@66c0a69a
☆ 2017-06-13 12:47:35.105 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@66c0a69a
☆ 2017-06-13 12:47:35.106 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@112f70af
☆ 2017-06-13 12:47:35.107 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@512c702a
☆ 2017-06-13 12:47:35.107 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@72cff597
☆ 2017-06-13 12:47:35.109 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@22a77796
☆ 2017-06-13 12:47:35.109 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@22a77796
☆ 2017-06-13 12:47:35.109 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22a77796
☆ 2017-06-13 12:47:35.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@11594486
☆ 2017-06-13 12:47:35.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@11594486
☆ 2017-06-13 12:47:35.110 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11594486
☆ 2017-06-13 12:47:35.111 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@7b8cdeba
☆ 2017-06-13 12:47:35.111 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@7b8cdeba
☆ 2017-06-13 12:47:35.111 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7b8cdeba
☆ 2017-06-13 12:47:35.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@17700f17
☆ 2017-06-13 12:47:35.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@17700f17
☆ 2017-06-13 12:47:35.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@17700f17
☆ 2017-06-13 12:47:35.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@5687bc17
☆ 2017-06-13 12:47:35.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@5687bc17
☆ 2017-06-13 12:47:35.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5687bc17
☆ 2017-06-13 12:47:35.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@709cd8b6
☆ 2017-06-13 12:47:35.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@709cd8b6
☆ 2017-06-13 12:47:35.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@709cd8b6
☆ 2017-06-13 12:47:35.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@3d1f9f97
☆ 2017-06-13 12:47:35.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@3d1f9f97
☆ 2017-06-13 12:47:35.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3d1f9f97
☆ 2017-06-13 12:47:35.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@48edcfe
☆ 2017-06-13 12:47:35.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@48edcfe
☆ 2017-06-13 12:47:35.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19f2e46a
☆ 2017-06-13 12:47:35.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19f2e46a
☆ 2017-06-13 12:47:35.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@517e856c
☆ 2017-06-13 12:47:35.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@517e856c
☆ 2017-06-13 12:47:35.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7c25a8b3
☆ 2017-06-13 12:47:35.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@70089c20
☆ 2017-06-13 12:47:35.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@3ed19b63
☆ 2017-06-13 12:47:35.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ed19b63
☆ 2017-06-13 12:47:35.159 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6860f24a
☆ 2017-06-13 12:47:35.160 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6860f24a
☆ 2017-06-13 12:47:35.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@53b92c4d
☆ 2017-06-13 12:47:35.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@53b92c4d
☆ 2017-06-13 12:47:35.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@3575717
☆ 2017-06-13 12:47:35.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3575717
☆ 2017-06-13 12:47:35.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3575717
☆ 2017-06-13 12:47:35.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@26d1bf00
☆ 2017-06-13 12:47:35.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@96232ff
☆ 2017-06-13 12:47:35.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@96232ff
☆ 2017-06-13 12:47:35.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@96232ff
☆ 2017-06-13 12:47:35.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1397515b
☆ 2017-06-13 12:47:35.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@456d3f4b
☆ 2017-06-13 12:47:35.166 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@456d3f4b
☆ 2017-06-13 12:47:35.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@434d5b89
☆ 2017-06-13 12:47:35.167 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@434d5b89
☆ 2017-06-13 12:47:35.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@13ca4535
☆ 2017-06-13 12:47:35.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@13ca4535
☆ 2017-06-13 12:47:35.169 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@143cb496
☆ 2017-06-13 12:47:35.169 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@143cb496
☆ 2017-06-13 12:47:35.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@11a512f
☆ 2017-06-13 12:47:35.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@11a512f
☆ 2017-06-13 12:47:35.170 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1c7b378e
☆ 2017-06-13 12:47:35.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@7788f7c7
☆ 2017-06-13 12:47:35.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@7788f7c7
☆ 2017-06-13 12:47:35.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@7788f7c7
☆ 2017-06-13 12:47:35.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@ed4234d
☆ 2017-06-13 12:47:35.172 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@ed4234d
☆ 2017-06-13 12:47:35.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@ed4234d
☆ 2017-06-13 12:47:35.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@6e2fb58a
☆ 2017-06-13 12:47:35.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@1bd4f480
☆ 2017-06-13 12:47:35.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@1bd4f480
☆ 2017-06-13 12:47:35.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@1bd4f480
☆ 2017-06-13 12:47:35.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@58778232
☆ 2017-06-13 12:47:35.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@58778232
☆ 2017-06-13 12:47:35.175 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@58778232
☆ 2017-06-13 12:47:35.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@7e5abd81
☆ 2017-06-13 12:47:35.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@26aaae06
☆ 2017-06-13 12:47:35.179 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@4b7ab8f0
☆ 2017-06-13 12:47:35.179 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b7ab8f0
☆ 2017-06-13 12:47:35.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e809dc1
☆ 2017-06-13 12:47:35.182 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@559d465c
☆ 2017-06-13 12:47:35.183 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@559d465c
☆ 2017-06-13 12:47:35.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@1d832476
☆ 2017-06-13 12:47:35.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d832476
☆ 2017-06-13 12:47:35.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@287cf65c
☆ 2017-06-13 12:47:35.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6647640d
☆ 2017-06-13 12:47:35.189 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@43537346
☆ 2017-06-13 12:47:35.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@630f1b3c
☆ 2017-06-13 12:47:35.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@630f1b3c
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e769abe
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@253bb0b7
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16bbff26
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6e1c5d4c
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6435995b
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1cf33362
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5578ad15
☆ 2017-06-13 12:47:35.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@59026ccb
☆ 2017-06-13 12:47:35.200 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:47:35.202 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:47:35.203 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:47:35.203 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:47:35.205 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:47:35.206 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:47:35.351 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:47:35.352 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:47:35.352 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:47:35.361 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:47:35.381 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:47:35.438 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:47:35.438 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:47:35.439 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:47:35.439 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:47:35.439 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:47:35.440 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:47:35.440 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:47:35.441 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:47:35.442 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:47:35.442 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:47:35.442 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:47:35.443 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:47:35.443 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:47:35.443 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:47:35.465 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:47:35.493 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:47:35.494 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:47:35.494 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:47:35.494 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:47:35.494 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:47:35.495 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@370c20c1
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:47:35.496 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:47:35.497 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:47:35.527 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:47:35.529 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:47:35.529 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@29802703, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:47:35.536 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:47:35.539 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:47:35.541 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:47:35.548 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:47:35.549 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:47:35.550 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:47:35.551 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:47:35.551 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:47:35.552 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6a6de743
☆ 2017-06-13 12:47:35.554 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: a8b2e8b8-80b9-4147-848d-0488c9df8ee9 (<unnamed>)
☆ 2017-06-13 12:47:35.554 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:47:35.588 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:47:35.630 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:48:02.678 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:48:02.678 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:48:02.679 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:48:02.683 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:50:18.240 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:50:18.251 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:50:18.376 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:50:18.378 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:50:18.448 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:50:18.449 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:50:18.450 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:50:18.464 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:50:18.465 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:50:18.466 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:50:18.469 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:50:18.642 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:50:18.643 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:50:18.643 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:50:18.652 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:50:18.653 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:50:18.664 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:50:18.672 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:50:18.689 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@68a9be7c
☆ 2017-06-13 12:50:18.689 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@68a9be7c
☆ 2017-06-13 12:50:18.689 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@68a9be7c
☆ 2017-06-13 12:50:18.690 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@bb397ba
☆ 2017-06-13 12:50:18.691 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@77817aa8
☆ 2017-06-13 12:50:18.691 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@7b84d85e
☆ 2017-06-13 12:50:18.692 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@43f6c992
☆ 2017-06-13 12:50:18.693 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@43f6c992
☆ 2017-06-13 12:50:18.693 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@43f6c992
☆ 2017-06-13 12:50:18.694 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@7aeddeb7
☆ 2017-06-13 12:50:18.694 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@7aeddeb7
☆ 2017-06-13 12:50:18.694 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7aeddeb7
☆ 2017-06-13 12:50:18.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@18d6b610
☆ 2017-06-13 12:50:18.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@18d6b610
☆ 2017-06-13 12:50:18.695 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18d6b610
☆ 2017-06-13 12:50:18.730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@54f35fd3
☆ 2017-06-13 12:50:18.730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@54f35fd3
☆ 2017-06-13 12:50:18.730 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@54f35fd3
☆ 2017-06-13 12:50:18.731 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@5f0dde57
☆ 2017-06-13 12:50:18.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@5f0dde57
☆ 2017-06-13 12:50:18.732 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f0dde57
☆ 2017-06-13 12:50:18.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@377a2799
☆ 2017-06-13 12:50:18.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@377a2799
☆ 2017-06-13 12:50:18.733 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@377a2799
☆ 2017-06-13 12:50:18.734 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5539ed9e
☆ 2017-06-13 12:50:18.734 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5539ed9e
☆ 2017-06-13 12:50:18.735 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5539ed9e
☆ 2017-06-13 12:50:18.736 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6121477a
☆ 2017-06-13 12:50:18.736 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6121477a
☆ 2017-06-13 12:50:18.737 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1403d4f7
☆ 2017-06-13 12:50:18.737 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1403d4f7
☆ 2017-06-13 12:50:18.738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@52ee456d
☆ 2017-06-13 12:50:18.738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@52ee456d
☆ 2017-06-13 12:50:18.738 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e76d7c9
☆ 2017-06-13 12:50:18.739 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@538c8cae
☆ 2017-06-13 12:50:18.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@678167e1
☆ 2017-06-13 12:50:18.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@678167e1
☆ 2017-06-13 12:50:18.741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@78f39dc5
☆ 2017-06-13 12:50:18.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@78f39dc5
☆ 2017-06-13 12:50:18.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@62ec0eae
☆ 2017-06-13 12:50:18.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@62ec0eae
☆ 2017-06-13 12:50:18.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@64ff8a04
☆ 2017-06-13 12:50:18.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@64ff8a04
☆ 2017-06-13 12:50:18.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@64ff8a04
☆ 2017-06-13 12:50:18.746 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7537c584
☆ 2017-06-13 12:50:18.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@267be06f
☆ 2017-06-13 12:50:18.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@267be06f
☆ 2017-06-13 12:50:18.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@267be06f
☆ 2017-06-13 12:50:18.748 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@56bc4aa2
☆ 2017-06-13 12:50:18.749 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@28174f6b
☆ 2017-06-13 12:50:18.749 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@28174f6b
☆ 2017-06-13 12:50:18.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@17e6c399
☆ 2017-06-13 12:50:18.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@17e6c399
☆ 2017-06-13 12:50:18.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@520917d0
☆ 2017-06-13 12:50:18.751 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@520917d0
☆ 2017-06-13 12:50:18.751 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@4d1d8600
☆ 2017-06-13 12:50:18.752 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4d1d8600
☆ 2017-06-13 12:50:18.753 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@492302b7
☆ 2017-06-13 12:50:18.753 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@492302b7
☆ 2017-06-13 12:50:18.753 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4ae377f4
☆ 2017-06-13 12:50:18.754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@60697c0b
☆ 2017-06-13 12:50:18.754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@60697c0b
☆ 2017-06-13 12:50:18.754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@60697c0b
☆ 2017-06-13 12:50:18.755 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36849990
☆ 2017-06-13 12:50:18.755 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36849990
☆ 2017-06-13 12:50:18.755 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36849990
☆ 2017-06-13 12:50:18.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4e91b4c7
☆ 2017-06-13 12:50:18.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@1ba094b5
☆ 2017-06-13 12:50:18.757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@1ba094b5
☆ 2017-06-13 12:50:18.757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@1ba094b5
☆ 2017-06-13 12:50:18.757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@266e4399
☆ 2017-06-13 12:50:18.758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@266e4399
☆ 2017-06-13 12:50:18.758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@266e4399
☆ 2017-06-13 12:50:18.758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@17ab5200
☆ 2017-06-13 12:50:18.759 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c606933
☆ 2017-06-13 12:50:18.761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@bd6f3d7
☆ 2017-06-13 12:50:18.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bd6f3d7
☆ 2017-06-13 12:50:18.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6539b25d
☆ 2017-06-13 12:50:18.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@38c8f094
☆ 2017-06-13 12:50:18.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@38c8f094
☆ 2017-06-13 12:50:18.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@219cdd91
☆ 2017-06-13 12:50:18.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@219cdd91
☆ 2017-06-13 12:50:18.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@49a84cb2
☆ 2017-06-13 12:50:18.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d8dc7ab
☆ 2017-06-13 12:50:18.771 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@65017076
☆ 2017-06-13 12:50:18.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@2534c0a3
☆ 2017-06-13 12:50:18.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2534c0a3
☆ 2017-06-13 12:50:18.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b81f5c9
☆ 2017-06-13 12:50:18.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58b307c2
☆ 2017-06-13 12:50:18.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c33bcb4
☆ 2017-06-13 12:50:18.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19bfcefe
☆ 2017-06-13 12:50:18.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4d445fbd
☆ 2017-06-13 12:50:18.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d89dcc0
☆ 2017-06-13 12:50:18.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5c8e07d9
☆ 2017-06-13 12:50:18.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3ba1fa88
☆ 2017-06-13 12:50:18.782 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:50:18.784 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:50:18.785 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:50:18.785 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:50:18.787 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:50:18.787 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:50:18.946 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:50:18.946 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:50:18.946 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:50:18.955 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:50:18.976 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:50:19.034 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:50:19.035 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:50:19.035 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:50:19.035 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:50:19.036 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:50:19.036 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:50:19.037 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:50:19.037 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:50:19.038 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:50:19.038 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:50:19.039 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:50:19.039 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:50:19.039 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:50:19.040 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:50:19.063 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:50:19.092 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:50:19.093 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:50:19.093 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:50:19.094 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4eed411
☆ 2017-06-13 12:50:19.095 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:50:19.096 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:50:19.097 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:50:19.126 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:50:19.128 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:50:19.128 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@66a423bb, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:50:19.135 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:50:19.138 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:50:19.140 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:50:19.147 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:50:19.148 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:50:19.149 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:50:19.150 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:50:19.151 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:50:19.152 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@329004fd
☆ 2017-06-13 12:50:19.154 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: c9bd77e0-0352-4b64-9e89-7bd2dc9ddc91 (<unnamed>)
☆ 2017-06-13 12:50:19.154 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:50:19.193 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:50:19.247 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:50:29.441 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:50:29.442 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:50:29.442 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:50:29.448 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:52:26.444 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:52:26.452 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:52:26.454 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:52:26.455 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:52:26.524 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:52:26.525 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:52:26.526 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:52:26.539 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:52:26.540 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:52:26.541 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:52:26.544 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:52:26.694 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:52:26.695 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:52:26.695 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:52:26.705 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:52:26.707 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:52:26.718 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:52:26.726 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:52:26.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@68a9be7c
☆ 2017-06-13 12:52:26.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@68a9be7c
☆ 2017-06-13 12:52:26.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@68a9be7c
☆ 2017-06-13 12:52:26.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@bb397ba
☆ 2017-06-13 12:52:26.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@77817aa8
☆ 2017-06-13 12:52:26.746 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@7b84d85e
☆ 2017-06-13 12:52:26.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@43f6c992
☆ 2017-06-13 12:52:26.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@43f6c992
☆ 2017-06-13 12:52:26.747 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@43f6c992
☆ 2017-06-13 12:52:26.748 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@7aeddeb7
☆ 2017-06-13 12:52:26.748 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@7aeddeb7
☆ 2017-06-13 12:52:26.748 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7aeddeb7
☆ 2017-06-13 12:52:26.749 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@18d6b610
☆ 2017-06-13 12:52:26.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@18d6b610
☆ 2017-06-13 12:52:26.750 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18d6b610
☆ 2017-06-13 12:52:26.787 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@54f35fd3
☆ 2017-06-13 12:52:26.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@54f35fd3
☆ 2017-06-13 12:52:26.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@54f35fd3
☆ 2017-06-13 12:52:26.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@5f0dde57
☆ 2017-06-13 12:52:26.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@5f0dde57
☆ 2017-06-13 12:52:26.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f0dde57
☆ 2017-06-13 12:52:26.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@377a2799
☆ 2017-06-13 12:52:26.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@377a2799
☆ 2017-06-13 12:52:26.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@377a2799
☆ 2017-06-13 12:52:26.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5539ed9e
☆ 2017-06-13 12:52:26.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5539ed9e
☆ 2017-06-13 12:52:26.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5539ed9e
☆ 2017-06-13 12:52:26.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6121477a
☆ 2017-06-13 12:52:26.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6121477a
☆ 2017-06-13 12:52:26.795 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1403d4f7
☆ 2017-06-13 12:52:26.795 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1403d4f7
☆ 2017-06-13 12:52:26.796 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@52ee456d
☆ 2017-06-13 12:52:26.796 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@52ee456d
☆ 2017-06-13 12:52:26.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e76d7c9
☆ 2017-06-13 12:52:26.798 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@538c8cae
☆ 2017-06-13 12:52:26.798 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@678167e1
☆ 2017-06-13 12:52:26.798 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@678167e1
☆ 2017-06-13 12:52:26.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@78f39dc5
☆ 2017-06-13 12:52:26.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@78f39dc5
☆ 2017-06-13 12:52:26.801 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@62ec0eae
☆ 2017-06-13 12:52:26.801 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@62ec0eae
☆ 2017-06-13 12:52:26.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@64ff8a04
☆ 2017-06-13 12:52:26.803 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@64ff8a04
☆ 2017-06-13 12:52:26.803 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@64ff8a04
☆ 2017-06-13 12:52:26.804 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7537c584
☆ 2017-06-13 12:52:26.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@267be06f
☆ 2017-06-13 12:52:26.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@267be06f
☆ 2017-06-13 12:52:26.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@267be06f
☆ 2017-06-13 12:52:26.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@56bc4aa2
☆ 2017-06-13 12:52:26.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@28174f6b
☆ 2017-06-13 12:52:26.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@28174f6b
☆ 2017-06-13 12:52:26.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@17e6c399
☆ 2017-06-13 12:52:26.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@17e6c399
☆ 2017-06-13 12:52:26.808 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@520917d0
☆ 2017-06-13 12:52:26.808 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@520917d0
☆ 2017-06-13 12:52:26.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@4d1d8600
☆ 2017-06-13 12:52:26.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4d1d8600
☆ 2017-06-13 12:52:26.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@492302b7
☆ 2017-06-13 12:52:26.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@492302b7
☆ 2017-06-13 12:52:26.811 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4ae377f4
☆ 2017-06-13 12:52:26.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@60697c0b
☆ 2017-06-13 12:52:26.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@60697c0b
☆ 2017-06-13 12:52:26.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@60697c0b
☆ 2017-06-13 12:52:26.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@36849990
☆ 2017-06-13 12:52:26.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@36849990
☆ 2017-06-13 12:52:26.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@36849990
☆ 2017-06-13 12:52:26.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4e91b4c7
☆ 2017-06-13 12:52:26.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@1ba094b5
☆ 2017-06-13 12:52:26.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@1ba094b5
☆ 2017-06-13 12:52:26.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@1ba094b5
☆ 2017-06-13 12:52:26.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@266e4399
☆ 2017-06-13 12:52:26.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@266e4399
☆ 2017-06-13 12:52:26.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@266e4399
☆ 2017-06-13 12:52:26.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@17ab5200
☆ 2017-06-13 12:52:26.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6c606933
☆ 2017-06-13 12:52:26.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@bd6f3d7
☆ 2017-06-13 12:52:26.819 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@bd6f3d7
☆ 2017-06-13 12:52:26.820 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6539b25d
☆ 2017-06-13 12:52:26.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@38c8f094
☆ 2017-06-13 12:52:26.822 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@38c8f094
☆ 2017-06-13 12:52:26.824 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@219cdd91
☆ 2017-06-13 12:52:26.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@219cdd91
☆ 2017-06-13 12:52:26.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@49a84cb2
☆ 2017-06-13 12:52:26.828 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d8dc7ab
☆ 2017-06-13 12:52:26.829 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@65017076
☆ 2017-06-13 12:52:26.831 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@2534c0a3
☆ 2017-06-13 12:52:26.831 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2534c0a3
☆ 2017-06-13 12:52:26.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b81f5c9
☆ 2017-06-13 12:52:26.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58b307c2
☆ 2017-06-13 12:52:26.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c33bcb4
☆ 2017-06-13 12:52:26.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@19bfcefe
☆ 2017-06-13 12:52:26.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4d445fbd
☆ 2017-06-13 12:52:26.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d89dcc0
☆ 2017-06-13 12:52:26.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5c8e07d9
☆ 2017-06-13 12:52:26.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3ba1fa88
☆ 2017-06-13 12:52:26.844 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:52:26.847 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:52:26.848 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:52:26.848 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:52:26.851 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:52:26.852 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:52:27.002 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:52:27.003 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:52:27.003 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:52:27.012 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:52:27.032 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:52:27.088 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:52:27.088 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:52:27.089 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:52:27.089 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:52:27.089 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:52:27.090 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:52:27.090 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:52:27.091 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:52:27.091 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:52:27.092 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:52:27.092 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:52:27.092 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:52:27.093 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:52:27.093 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:52:27.115 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:52:27.142 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:52:27.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:52:27.144 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4eed411
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:52:27.145 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:52:27.146 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:52:27.146 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:52:27.146 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:52:27.146 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:52:27.146 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:52:27.146 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:52:27.175 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:52:27.177 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:52:27.177 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@66a423bb, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:52:27.184 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:52:27.187 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:52:27.189 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:52:27.196 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:52:27.196 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:52:27.198 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:52:27.199 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:52:27.199 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:52:27.200 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@329004fd
☆ 2017-06-13 12:52:27.201 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 2fb7079a-6ddd-4d9c-bb10-31a9a6f832a5 (<unnamed>)
☆ 2017-06-13 12:52:27.201 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:52:27.236 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:52:27.279 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:52:43.457 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:52:43.458 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:52:43.458 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:52:43.462 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:58:06.251 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 12:58:06.259 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:58:06.260 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:58:06.262 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:58:06.328 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 12:58:06.330 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 12:58:06.331 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 12:58:06.343 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 12:58:06.345 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 12:58:06.345 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 12:58:06.349 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 12:58:06.493 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 12:58:06.493 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 12:58:06.493 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 12:58:06.503 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 12:58:06.504 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 12:58:06.513 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 12:58:06.518 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 12:58:06.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@3aef38fb
☆ 2017-06-13 12:58:06.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@3aef38fb
☆ 2017-06-13 12:58:06.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3aef38fb
☆ 2017-06-13 12:58:06.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7e783015
☆ 2017-06-13 12:58:06.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a517986
☆ 2017-06-13 12:58:06.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@d15e915
☆ 2017-06-13 12:58:06.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@365a6d8c
☆ 2017-06-13 12:58:06.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@365a6d8c
☆ 2017-06-13 12:58:06.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@365a6d8c
☆ 2017-06-13 12:58:06.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@4a0f345f
☆ 2017-06-13 12:58:06.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@4a0f345f
☆ 2017-06-13 12:58:06.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4a0f345f
☆ 2017-06-13 12:58:06.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@653621c8
☆ 2017-06-13 12:58:06.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@653621c8
☆ 2017-06-13 12:58:06.539 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@653621c8
☆ 2017-06-13 12:58:06.572 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@2dfd5edd
☆ 2017-06-13 12:58:06.572 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@2dfd5edd
☆ 2017-06-13 12:58:06.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2dfd5edd
☆ 2017-06-13 12:58:06.574 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@7cb2ccf9
☆ 2017-06-13 12:58:06.574 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@7cb2ccf9
☆ 2017-06-13 12:58:06.574 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@7cb2ccf9
☆ 2017-06-13 12:58:06.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4d349918
☆ 2017-06-13 12:58:06.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4d349918
☆ 2017-06-13 12:58:06.575 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4d349918
☆ 2017-06-13 12:58:06.576 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@19877d5d
☆ 2017-06-13 12:58:06.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@19877d5d
☆ 2017-06-13 12:58:06.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@19877d5d
☆ 2017-06-13 12:58:06.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1c811074
☆ 2017-06-13 12:58:06.578 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1c811074
☆ 2017-06-13 12:58:06.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@56ddc22f
☆ 2017-06-13 12:58:06.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@56ddc22f
☆ 2017-06-13 12:58:06.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@7086c0da
☆ 2017-06-13 12:58:06.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@7086c0da
☆ 2017-06-13 12:58:06.581 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6dd1132e
☆ 2017-06-13 12:58:06.581 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4e28d166
☆ 2017-06-13 12:58:06.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@1e18097b
☆ 2017-06-13 12:58:06.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e18097b
☆ 2017-06-13 12:58:06.583 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@6e7748ba
☆ 2017-06-13 12:58:06.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e7748ba
☆ 2017-06-13 12:58:06.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@1dfc9cb5
☆ 2017-06-13 12:58:06.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1dfc9cb5
☆ 2017-06-13 12:58:06.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@34ffbd54
☆ 2017-06-13 12:58:06.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@34ffbd54
☆ 2017-06-13 12:58:06.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@34ffbd54
☆ 2017-06-13 12:58:06.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e874131
☆ 2017-06-13 12:58:06.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@51038f9c
☆ 2017-06-13 12:58:06.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@51038f9c
☆ 2017-06-13 12:58:06.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@51038f9c
☆ 2017-06-13 12:58:06.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67824ffb
☆ 2017-06-13 12:58:06.590 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@7e21bd2b
☆ 2017-06-13 12:58:06.590 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7e21bd2b
☆ 2017-06-13 12:58:06.591 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@5eb6c1f
☆ 2017-06-13 12:58:06.591 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5eb6c1f
☆ 2017-06-13 12:58:06.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@400c2aef
☆ 2017-06-13 12:58:06.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@400c2aef
☆ 2017-06-13 12:58:06.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@6174ad4f
☆ 2017-06-13 12:58:06.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6174ad4f
☆ 2017-06-13 12:58:06.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@26a60d3d
☆ 2017-06-13 12:58:06.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@26a60d3d
☆ 2017-06-13 12:58:06.594 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39150ef6
☆ 2017-06-13 12:58:06.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@5bd5b019
☆ 2017-06-13 12:58:06.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@5bd5b019
☆ 2017-06-13 12:58:06.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@5bd5b019
☆ 2017-06-13 12:58:06.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@545e5a68
☆ 2017-06-13 12:58:06.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@545e5a68
☆ 2017-06-13 12:58:06.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@545e5a68
☆ 2017-06-13 12:58:06.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@6a3d8647
☆ 2017-06-13 12:58:06.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@7f5aa878
☆ 2017-06-13 12:58:06.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@7f5aa878
☆ 2017-06-13 12:58:06.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@7f5aa878
☆ 2017-06-13 12:58:06.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5013c39c
☆ 2017-06-13 12:58:06.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5013c39c
☆ 2017-06-13 12:58:06.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5013c39c
☆ 2017-06-13 12:58:06.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@4d30bb02
☆ 2017-06-13 12:58:06.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@76cf5626
☆ 2017-06-13 12:58:06.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@421984f8
☆ 2017-06-13 12:58:06.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@421984f8
☆ 2017-06-13 12:58:06.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@541a0e73
☆ 2017-06-13 12:58:06.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@1c940491
☆ 2017-06-13 12:58:06.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1c940491
☆ 2017-06-13 12:58:06.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@75793900
☆ 2017-06-13 12:58:06.608 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@75793900
☆ 2017-06-13 12:58:06.609 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2d5f6b70
☆ 2017-06-13 12:58:06.611 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@260b5304
☆ 2017-06-13 12:58:06.612 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@51ca992d
☆ 2017-06-13 12:58:06.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@5f6e1f85
☆ 2017-06-13 12:58:06.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f6e1f85
☆ 2017-06-13 12:58:06.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b30ee11
☆ 2017-06-13 12:58:06.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@348d48c5
☆ 2017-06-13 12:58:06.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2882d98d
☆ 2017-06-13 12:58:06.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2acbf222
☆ 2017-06-13 12:58:06.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3617d10c
☆ 2017-06-13 12:58:06.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68826c6b
☆ 2017-06-13 12:58:06.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@56728e47
☆ 2017-06-13 12:58:06.616 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@235d3c49
☆ 2017-06-13 12:58:06.624 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 12:58:06.626 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:58:06.626 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 12:58:06.626 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 12:58:06.628 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 12:58:06.629 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 12:58:06.770 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:58:06.771 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 12:58:06.771 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 12:58:06.779 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 12:58:06.799 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 12:58:06.855 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 12:58:06.856 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 12:58:06.856 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:58:06.857 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 12:58:06.857 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 12:58:06.858 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 12:58:06.858 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 12:58:06.859 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:58:06.860 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 12:58:06.860 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 12:58:06.860 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 12:58:06.861 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 12:58:06.861 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 12:58:06.862 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 12:58:06.883 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 12:58:06.910 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 12:58:06.911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 12:58:06.911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 12:58:06.911 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 12:58:06.912 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 12:58:06.913 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2439246f
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 12:58:06.914 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 12:58:06.915 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 12:58:06.915 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 12:58:06.915 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 12:58:06.915 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 12:58:06.944 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 12:58:06.946 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 12:58:06.946 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@649a397f, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 12:58:06.953 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 12:58:06.956 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 12:58:06.958 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 12:58:06.964 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 12:58:06.965 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 12:58:06.966 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 12:58:06.967 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 12:58:06.967 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 12:58:06.969 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4b4af87d
☆ 2017-06-13 12:58:06.970 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 50a5478d-363c-4f22-887b-1a35edade393 (<unnamed>)
☆ 2017-06-13 12:58:06.970 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 12:58:07.006 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 12:58:07.047 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 12:58:36.768 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 12:58:54.823 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 12:58:54.823 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 12:58:54.824 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 12:58:54.830 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 13:07:01.653 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 13:07:01.660 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 13:07:01.662 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 13:07:01.663 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 13:07:01.726 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 13:07:01.727 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 13:07:01.728 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 13:07:01.741 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 13:07:01.742 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 13:07:01.742 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 13:07:01.746 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 13:07:01.891 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 13:07:01.891 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 13:07:01.891 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 13:07:01.903 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 13:07:01.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 13:07:01.913 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 13:07:01.918 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 13:07:01.932 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@66ae7d10
☆ 2017-06-13 13:07:01.933 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@66ae7d10
☆ 2017-06-13 13:07:01.933 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@66ae7d10
☆ 2017-06-13 13:07:01.934 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@236ed3a3
☆ 2017-06-13 13:07:01.934 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@54a41d64
☆ 2017-06-13 13:07:01.935 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@22e0d88c
☆ 2017-06-13 13:07:01.936 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@1d8731a8
☆ 2017-06-13 13:07:01.936 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@1d8731a8
☆ 2017-06-13 13:07:01.936 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1d8731a8
☆ 2017-06-13 13:07:01.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2dd3f0d6
☆ 2017-06-13 13:07:01.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2dd3f0d6
☆ 2017-06-13 13:07:01.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2dd3f0d6
☆ 2017-06-13 13:07:01.938 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@701fd034
☆ 2017-06-13 13:07:01.938 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@701fd034
☆ 2017-06-13 13:07:01.939 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@701fd034
☆ 2017-06-13 13:07:01.979 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@e4c3002
☆ 2017-06-13 13:07:01.979 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@e4c3002
☆ 2017-06-13 13:07:01.979 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@e4c3002
☆ 2017-06-13 13:07:01.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@61d35e8
☆ 2017-06-13 13:07:01.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@61d35e8
☆ 2017-06-13 13:07:01.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@61d35e8
☆ 2017-06-13 13:07:01.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7b52c264
☆ 2017-06-13 13:07:01.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7b52c264
☆ 2017-06-13 13:07:01.982 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b52c264
☆ 2017-06-13 13:07:01.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@51880fe3
☆ 2017-06-13 13:07:01.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@51880fe3
☆ 2017-06-13 13:07:01.983 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51880fe3
☆ 2017-06-13 13:07:01.984 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@41982fc
☆ 2017-06-13 13:07:01.985 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@41982fc
☆ 2017-06-13 13:07:01.985 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e544d8f
☆ 2017-06-13 13:07:01.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e544d8f
☆ 2017-06-13 13:07:01.986 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@7e3e9a8d
☆ 2017-06-13 13:07:01.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@7e3e9a8d
☆ 2017-06-13 13:07:01.987 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7198d5d8
☆ 2017-06-13 13:07:01.988 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2d231f9a
☆ 2017-06-13 13:07:01.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@b12c784
☆ 2017-06-13 13:07:01.989 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@b12c784
☆ 2017-06-13 13:07:01.990 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@32fb6bae
☆ 2017-06-13 13:07:01.991 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@32fb6bae
☆ 2017-06-13 13:07:01.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@7bf73582
☆ 2017-06-13 13:07:01.992 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7bf73582
☆ 2017-06-13 13:07:01.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@5684d1b9
☆ 2017-06-13 13:07:01.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5684d1b9
☆ 2017-06-13 13:07:01.993 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5684d1b9
☆ 2017-06-13 13:07:01.995 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@ee5110a
☆ 2017-06-13 13:07:01.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@4cca79f2
☆ 2017-06-13 13:07:01.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4cca79f2
☆ 2017-06-13 13:07:01.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4cca79f2
☆ 2017-06-13 13:07:01.996 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@37cf8c90
☆ 2017-06-13 13:07:01.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2687c755
☆ 2017-06-13 13:07:01.997 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2687c755
☆ 2017-06-13 13:07:01.998 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@3a0f92db
☆ 2017-06-13 13:07:01.998 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3a0f92db
☆ 2017-06-13 13:07:01.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@dedd376
☆ 2017-06-13 13:07:01.999 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@dedd376
☆ 2017-06-13 13:07:02.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@4f21a712
☆ 2017-06-13 13:07:02.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f21a712
☆ 2017-06-13 13:07:02.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@626bfab3
☆ 2017-06-13 13:07:02.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@626bfab3
☆ 2017-06-13 13:07:02.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4d9e2488
☆ 2017-06-13 13:07:02.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@702bbc85
☆ 2017-06-13 13:07:02.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@702bbc85
☆ 2017-06-13 13:07:02.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@702bbc85
☆ 2017-06-13 13:07:02.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e497a67
☆ 2017-06-13 13:07:02.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e497a67
☆ 2017-06-13 13:07:02.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e497a67
☆ 2017-06-13 13:07:02.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@1d8a2416
☆ 2017-06-13 13:07:02.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@791b51ba
☆ 2017-06-13 13:07:02.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@791b51ba
☆ 2017-06-13 13:07:02.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@791b51ba
☆ 2017-06-13 13:07:02.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@293a4ce1
☆ 2017-06-13 13:07:02.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@293a4ce1
☆ 2017-06-13 13:07:02.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@293a4ce1
☆ 2017-06-13 13:07:02.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@64b43c83
☆ 2017-06-13 13:07:02.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@25642a62
☆ 2017-06-13 13:07:02.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@5e4c098
☆ 2017-06-13 13:07:02.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e4c098
☆ 2017-06-13 13:07:02.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@b15caf3
☆ 2017-06-13 13:07:02.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@148c3140
☆ 2017-06-13 13:07:02.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@148c3140
☆ 2017-06-13 13:07:02.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@e73ad83
☆ 2017-06-13 13:07:02.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@e73ad83
☆ 2017-06-13 13:07:02.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@68be3018
☆ 2017-06-13 13:07:02.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@30e79da2
☆ 2017-06-13 13:07:02.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@45b74aff
☆ 2017-06-13 13:07:02.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@43705359
☆ 2017-06-13 13:07:02.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43705359
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4c6e28ce
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@dc54081
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b535b79
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@130b66c5
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e9e1432
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9f88828
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8f192fd
☆ 2017-06-13 13:07:02.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4084f068
☆ 2017-06-13 13:07:02.030 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 13:07:02.032 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 13:07:02.032 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 13:07:02.032 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 13:07:02.035 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 13:07:02.035 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 13:07:02.171 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 13:07:02.172 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 13:07:02.172 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 13:07:02.180 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 13:07:02.200 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 13:07:02.256 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 13:07:02.256 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 13:07:02.257 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 13:07:02.257 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 13:07:02.257 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 13:07:02.258 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 13:07:02.258 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 13:07:02.259 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 13:07:02.259 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 13:07:02.260 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 13:07:02.260 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 13:07:02.260 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 13:07:02.261 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 13:07:02.261 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 13:07:02.283 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 13:07:02.309 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 13:07:02.310 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 13:07:02.311 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 13:07:02.312 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@e184744
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 13:07:02.313 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 13:07:02.314 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 13:07:02.314 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 13:07:02.314 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 13:07:02.314 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 13:07:02.343 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 13:07:02.345 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 13:07:02.345 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@57bc0200, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 13:07:02.352 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 13:07:02.355 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 13:07:02.357 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 13:07:02.363 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 13:07:02.364 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 13:07:02.365 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 13:07:02.366 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 13:07:02.367 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 13:07:02.368 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6bb1ea3e
☆ 2017-06-13 13:07:02.369 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 0f531194-8c61-43e7-8a05-1c6b945659b7 (<unnamed>)
☆ 2017-06-13 13:07:02.369 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 13:07:02.405 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 13:07:02.472 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 13:07:32.169 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 13:14:31.865 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 13:14:31.866 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 13:14:31.866 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 13:14:31.870 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 13:20:51.748 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 13:20:51.756 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 13:20:51.757 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 13:20:51.759 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 13:20:51.823 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 13:20:51.824 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 13:20:51.826 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 13:20:51.838 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 13:20:51.840 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 13:20:51.840 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 13:20:51.843 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 13:20:52.010 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 13:20:52.101 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 13:20:52.101 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 13:20:52.110 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 13:20:52.111 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 13:20:52.120 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 13:20:52.128 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 13:20:52.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@774550b3
☆ 2017-06-13 13:20:52.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@774550b3
☆ 2017-06-13 13:20:52.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@774550b3
☆ 2017-06-13 13:20:52.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d0b8bfa
☆ 2017-06-13 13:20:52.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@59811d00
☆ 2017-06-13 13:20:52.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@389357e3
☆ 2017-06-13 13:20:52.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@2192d248
☆ 2017-06-13 13:20:52.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@2192d248
☆ 2017-06-13 13:20:52.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2192d248
☆ 2017-06-13 13:20:52.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2e041a0d
☆ 2017-06-13 13:20:52.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2e041a0d
☆ 2017-06-13 13:20:52.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2e041a0d
☆ 2017-06-13 13:20:52.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@243f2e32
☆ 2017-06-13 13:20:52.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@243f2e32
☆ 2017-06-13 13:20:52.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@243f2e32
☆ 2017-06-13 13:20:52.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@61beb61b
☆ 2017-06-13 13:20:52.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@61beb61b
☆ 2017-06-13 13:20:52.187 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61beb61b
☆ 2017-06-13 13:20:52.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2d7baf8b
☆ 2017-06-13 13:20:52.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2d7baf8b
☆ 2017-06-13 13:20:52.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@2d7baf8b
☆ 2017-06-13 13:20:52.189 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@376cb39c
☆ 2017-06-13 13:20:52.189 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@376cb39c
☆ 2017-06-13 13:20:52.189 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@376cb39c
☆ 2017-06-13 13:20:52.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@3f33d331
☆ 2017-06-13 13:20:52.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@3f33d331
☆ 2017-06-13 13:20:52.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f33d331
☆ 2017-06-13 13:20:52.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@333ba671
☆ 2017-06-13 13:20:52.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@333ba671
☆ 2017-06-13 13:20:52.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6de75710
☆ 2017-06-13 13:20:52.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6de75710
☆ 2017-06-13 13:20:52.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@4e4007a9
☆ 2017-06-13 13:20:52.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@4e4007a9
☆ 2017-06-13 13:20:52.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8e0e666
☆ 2017-06-13 13:20:52.195 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@613eaec4
☆ 2017-06-13 13:20:52.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@75455138
☆ 2017-06-13 13:20:52.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@75455138
☆ 2017-06-13 13:20:52.197 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@478268b6
☆ 2017-06-13 13:20:52.197 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@478268b6
☆ 2017-06-13 13:20:52.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@2b49b6e6
☆ 2017-06-13 13:20:52.199 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b49b6e6
☆ 2017-06-13 13:20:52.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@58779c10
☆ 2017-06-13 13:20:52.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@58779c10
☆ 2017-06-13 13:20:52.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@58779c10
☆ 2017-06-13 13:20:52.201 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55796026
☆ 2017-06-13 13:20:52.202 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@319bf5a7
☆ 2017-06-13 13:20:52.202 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@319bf5a7
☆ 2017-06-13 13:20:52.203 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@319bf5a7
☆ 2017-06-13 13:20:52.203 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b300d2
☆ 2017-06-13 13:20:52.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@701ba50b
☆ 2017-06-13 13:20:52.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@701ba50b
☆ 2017-06-13 13:20:52.205 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@57bfc6c3
☆ 2017-06-13 13:20:52.205 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@57bfc6c3
☆ 2017-06-13 13:20:52.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7cd1e84d
☆ 2017-06-13 13:20:52.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7cd1e84d
☆ 2017-06-13 13:20:52.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@3c162d50
☆ 2017-06-13 13:20:52.207 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c162d50
☆ 2017-06-13 13:20:52.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7be5425e
☆ 2017-06-13 13:20:52.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7be5425e
☆ 2017-06-13 13:20:52.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b2d2598
☆ 2017-06-13 13:20:52.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@3c843abc
☆ 2017-06-13 13:20:52.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@3c843abc
☆ 2017-06-13 13:20:52.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@3c843abc
☆ 2017-06-13 13:20:52.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2759b21d
☆ 2017-06-13 13:20:52.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2759b21d
☆ 2017-06-13 13:20:52.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2759b21d
☆ 2017-06-13 13:20:52.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@275df5bf
☆ 2017-06-13 13:20:52.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@346f5884
☆ 2017-06-13 13:20:52.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@346f5884
☆ 2017-06-13 13:20:52.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@346f5884
☆ 2017-06-13 13:20:52.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@41c84c96
☆ 2017-06-13 13:20:52.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@41c84c96
☆ 2017-06-13 13:20:52.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@41c84c96
☆ 2017-06-13 13:20:52.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@4693ee54
☆ 2017-06-13 13:20:52.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@314d1ee8
☆ 2017-06-13 13:20:52.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@21f51b49
☆ 2017-06-13 13:20:52.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21f51b49
☆ 2017-06-13 13:20:52.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1364e4d7
☆ 2017-06-13 13:20:52.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@347e68db
☆ 2017-06-13 13:20:52.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@347e68db
☆ 2017-06-13 13:20:52.223 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4ec91ac
☆ 2017-06-13 13:20:52.224 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ec91ac
☆ 2017-06-13 13:20:52.224 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6dd39251
☆ 2017-06-13 13:20:52.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f95b82a
☆ 2017-06-13 13:20:52.228 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@ececdc4
☆ 2017-06-13 13:20:52.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@3b332e30
☆ 2017-06-13 13:20:52.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b332e30
☆ 2017-06-13 13:20:52.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60ca9d5
☆ 2017-06-13 13:20:52.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@24ec458a
☆ 2017-06-13 13:20:52.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54d37f88
☆ 2017-06-13 13:20:52.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65342fb4
☆ 2017-06-13 13:20:52.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61570c6
☆ 2017-06-13 13:20:52.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4013b59b
☆ 2017-06-13 13:20:52.232 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f73ad2e
☆ 2017-06-13 13:20:52.232 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b7e6afb
☆ 2017-06-13 13:20:52.239 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 13:20:52.241 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 13:20:52.242 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 13:20:52.242 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 13:20:52.244 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 13:20:52.245 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 13:20:52.391 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 13:20:52.391 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 13:20:52.391 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 13:20:52.399 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 13:20:52.420 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 13:20:52.482 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 13:20:52.483 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 13:20:52.484 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 13:20:52.484 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 13:20:52.485 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 13:20:52.486 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 13:20:52.486 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 13:20:52.487 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 13:20:52.488 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 13:20:52.489 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 13:20:52.490 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 13:20:52.490 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 13:20:52.491 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 13:20:52.492 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 13:20:52.518 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 13:20:52.543 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 13:20:52.558 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 13:20:52.563 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 13:20:52.567 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 13:20:52.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 13:20:52.596 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 13:20:52.598 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 13:20:52.599 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 13:20:52.600 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 13:20:52.604 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 13:20:52.604 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 13:20:52.604 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 13:20:52.604 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 13:20:52.604 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 13:20:52.605 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=serialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 13:20:52.606 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property serialPort with lazy=false
☆ 2017-06-13 13:20:52.606 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:serialPort]
☆ 2017-06-13 13:20:52.606 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for serialPort
☆ 2017-06-13 13:20:52.606 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property serialPort
☆ 2017-06-13 13:20:52.607 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 13:20:52.607 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 13:20:52.607 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for serialPort
☆ 2017-06-13 13:20:52.609 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 13:20:52.700 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 13:21:00.298 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 13:22:55.412 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 13:22:55.419 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 13:22:55.421 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 13:22:55.422 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 13:22:55.487 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 13:22:55.489 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 13:22:55.490 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 13:22:55.502 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 13:22:55.504 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 13:22:55.504 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 13:22:55.508 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 13:22:55.662 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 13:22:55.662 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 13:22:55.662 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 13:22:55.671 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 13:22:55.671 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 13:22:55.680 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 13:22:55.686 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 13:22:55.700 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@774550b3
☆ 2017-06-13 13:22:55.700 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@774550b3
☆ 2017-06-13 13:22:55.700 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@774550b3
☆ 2017-06-13 13:22:55.701 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d0b8bfa
☆ 2017-06-13 13:22:55.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@59811d00
☆ 2017-06-13 13:22:55.702 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@389357e3
☆ 2017-06-13 13:22:55.703 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@2192d248
☆ 2017-06-13 13:22:55.704 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@2192d248
☆ 2017-06-13 13:22:55.704 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2192d248
☆ 2017-06-13 13:22:55.705 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@2e041a0d
☆ 2017-06-13 13:22:55.705 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@2e041a0d
☆ 2017-06-13 13:22:55.705 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2e041a0d
☆ 2017-06-13 13:22:55.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@243f2e32
☆ 2017-06-13 13:22:55.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@243f2e32
☆ 2017-06-13 13:22:55.706 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@243f2e32
☆ 2017-06-13 13:22:55.708 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@61beb61b
☆ 2017-06-13 13:22:55.708 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@61beb61b
☆ 2017-06-13 13:22:55.708 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61beb61b
☆ 2017-06-13 13:22:55.709 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2d7baf8b
☆ 2017-06-13 13:22:55.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2d7baf8b
☆ 2017-06-13 13:22:55.710 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@2d7baf8b
☆ 2017-06-13 13:22:55.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@376cb39c
☆ 2017-06-13 13:22:55.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@376cb39c
☆ 2017-06-13 13:22:55.712 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@376cb39c
☆ 2017-06-13 13:22:55.713 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@3f33d331
☆ 2017-06-13 13:22:55.714 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@3f33d331
☆ 2017-06-13 13:22:55.714 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f33d331
☆ 2017-06-13 13:22:55.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@333ba671
☆ 2017-06-13 13:22:55.754 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@333ba671
☆ 2017-06-13 13:22:55.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6de75710
☆ 2017-06-13 13:22:55.756 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6de75710
☆ 2017-06-13 13:22:55.757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@4e4007a9
☆ 2017-06-13 13:22:55.757 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@4e4007a9
☆ 2017-06-13 13:22:55.758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8e0e666
☆ 2017-06-13 13:22:55.758 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@613eaec4
☆ 2017-06-13 13:22:55.759 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@75455138
☆ 2017-06-13 13:22:55.759 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@75455138
☆ 2017-06-13 13:22:55.761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@478268b6
☆ 2017-06-13 13:22:55.761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@478268b6
☆ 2017-06-13 13:22:55.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@2b49b6e6
☆ 2017-06-13 13:22:55.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b49b6e6
☆ 2017-06-13 13:22:55.763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@58779c10
☆ 2017-06-13 13:22:55.764 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@58779c10
☆ 2017-06-13 13:22:55.764 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@58779c10
☆ 2017-06-13 13:22:55.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55796026
☆ 2017-06-13 13:22:55.766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@319bf5a7
☆ 2017-06-13 13:22:55.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@319bf5a7
☆ 2017-06-13 13:22:55.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@319bf5a7
☆ 2017-06-13 13:22:55.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b300d2
☆ 2017-06-13 13:22:55.768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@701ba50b
☆ 2017-06-13 13:22:55.768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@701ba50b
☆ 2017-06-13 13:22:55.769 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@57bfc6c3
☆ 2017-06-13 13:22:55.769 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@57bfc6c3
☆ 2017-06-13 13:22:55.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7cd1e84d
☆ 2017-06-13 13:22:55.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7cd1e84d
☆ 2017-06-13 13:22:55.771 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@3c162d50
☆ 2017-06-13 13:22:55.771 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3c162d50
☆ 2017-06-13 13:22:55.772 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7be5425e
☆ 2017-06-13 13:22:55.772 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7be5425e
☆ 2017-06-13 13:22:55.772 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b2d2598
☆ 2017-06-13 13:22:55.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@3c843abc
☆ 2017-06-13 13:22:55.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@3c843abc
☆ 2017-06-13 13:22:55.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@3c843abc
☆ 2017-06-13 13:22:55.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2759b21d
☆ 2017-06-13 13:22:55.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2759b21d
☆ 2017-06-13 13:22:55.775 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2759b21d
☆ 2017-06-13 13:22:55.775 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@275df5bf
☆ 2017-06-13 13:22:55.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@346f5884
☆ 2017-06-13 13:22:55.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@346f5884
☆ 2017-06-13 13:22:55.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@346f5884
☆ 2017-06-13 13:22:55.777 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@41c84c96
☆ 2017-06-13 13:22:55.777 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@41c84c96
☆ 2017-06-13 13:22:55.777 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@41c84c96
☆ 2017-06-13 13:22:55.777 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@4693ee54
☆ 2017-06-13 13:22:55.778 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@314d1ee8
☆ 2017-06-13 13:22:55.781 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@21f51b49
☆ 2017-06-13 13:22:55.781 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21f51b49
☆ 2017-06-13 13:22:55.781 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1364e4d7
☆ 2017-06-13 13:22:55.784 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@347e68db
☆ 2017-06-13 13:22:55.784 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@347e68db
☆ 2017-06-13 13:22:55.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4ec91ac
☆ 2017-06-13 13:22:55.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ec91ac
☆ 2017-06-13 13:22:55.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6dd39251
☆ 2017-06-13 13:22:55.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f95b82a
☆ 2017-06-13 13:22:55.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@ececdc4
☆ 2017-06-13 13:22:55.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@3b332e30
☆ 2017-06-13 13:22:55.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b332e30
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@60ca9d5
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@24ec458a
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54d37f88
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65342fb4
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61570c6
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4013b59b
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f73ad2e
☆ 2017-06-13 13:22:55.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b7e6afb
☆ 2017-06-13 13:22:55.801 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 13:22:55.803 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 13:22:55.803 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 13:22:55.803 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 13:22:55.806 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 13:22:55.806 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 13:22:55.945 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 13:22:55.945 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 13:22:55.945 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 13:22:55.953 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 13:22:55.973 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 13:22:56.030 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 13:22:56.030 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 13:22:56.031 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 13:22:56.031 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 13:22:56.031 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 13:22:56.032 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 13:22:56.032 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 13:22:56.033 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 13:22:56.034 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 13:22:56.034 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 13:22:56.034 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 13:22:56.035 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 13:22:56.035 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 13:22:56.035 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 13:22:56.056 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 13:22:56.075 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 13:22:56.089 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 13:22:56.093 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 13:22:56.098 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 13:22:56.120 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 13:22:56.122 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 13:22:56.124 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 13:22:56.125 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 13:22:56.126 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 13:22:56.130 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 13:22:56.130 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 13:22:56.130 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 13:22:56.130 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 13:22:56.130 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 13:22:56.132 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=serialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 13:22:56.132 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property serialPort with lazy=false
☆ 2017-06-13 13:22:56.132 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:serialPort]
☆ 2017-06-13 13:22:56.132 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for serialPort
☆ 2017-06-13 13:22:56.132 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property serialPort
☆ 2017-06-13 13:22:56.133 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 13:22:56.133 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 13:22:56.133 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for serialPort
☆ 2017-06-13 13:22:56.135 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 13:22:56.246 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 13:23:07.649 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 13:23:25.942 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 19:11:25.607 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:11:25.614 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:11:25.616 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:11:25.617 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:11:25.681 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:11:25.682 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:11:25.684 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:11:25.696 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:11:25.698 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:11:25.698 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:11:25.702 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:11:25.849 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:11:25.849 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:11:25.849 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:11:25.857 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:11:25.858 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:11:25.867 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:11:25.873 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:11:25.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:11:25.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:11:25.887 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:11:25.888 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ea470d
☆ 2017-06-13 19:11:25.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@655373aa
☆ 2017-06-13 19:11:25.889 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@357c4a3
☆ 2017-06-13 19:11:25.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:11:25.890 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:11:25.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:11:25.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:11:25.891 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:11:25.892 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:11:25.933 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:11:25.933 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:11:25.934 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:11:25.935 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:11:25.935 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:11:25.935 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:11:25.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:11:25.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:11:25.937 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:11:25.938 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:11:25.938 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:11:25.939 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:11:25.940 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:11:25.940 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:11:25.940 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:11:25.941 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:11:25.941 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:11:25.942 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:11:25.942 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:11:25.943 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:11:25.943 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:11:25.944 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@316eee5d
☆ 2017-06-13 19:11:25.944 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5002da4
☆ 2017-06-13 19:11:25.945 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:11:25.945 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:11:25.947 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:11:25.947 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:11:25.948 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:11:25.948 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:11:25.949 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:11:25.950 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:11:25.950 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:11:25.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@33b1e166
☆ 2017-06-13 19:11:25.952 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:11:25.952 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:11:25.952 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:11:25.953 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a0ff196
☆ 2017-06-13 19:11:25.953 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:11:25.954 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:11:25.954 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:11:25.954 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:11:25.955 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:11:25.955 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:11:25.956 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:11:25.956 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:11:25.957 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:11:25.957 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:11:25.957 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@401d184f
☆ 2017-06-13 19:11:25.958 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:11:25.958 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:11:25.959 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:11:25.959 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:11:25.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:11:25.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:11:25.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4ff05b1
☆ 2017-06-13 19:11:25.961 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:11:25.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:11:25.962 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:11:25.963 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:11:25.963 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:11:25.963 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:11:25.964 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@261aaca9
☆ 2017-06-13 19:11:25.964 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@1f71486e
☆ 2017-06-13 19:11:25.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:11:25.968 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:11:25.969 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75b7337
☆ 2017-06-13 19:11:25.971 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:11:25.971 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:11:25.974 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:11:25.974 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:11:25.974 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ac0108
☆ 2017-06-13 19:11:25.976 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@45592720
☆ 2017-06-13 19:11:25.977 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@27880c09
☆ 2017-06-13 19:11:25.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:11:25.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:11:25.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d7bb06c
☆ 2017-06-13 19:11:25.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@162b8790
☆ 2017-06-13 19:11:25.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5992df2f
☆ 2017-06-13 19:11:25.980 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d97170
☆ 2017-06-13 19:11:25.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76c14b17
☆ 2017-06-13 19:11:25.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c9c5558
☆ 2017-06-13 19:11:25.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@73389e43
☆ 2017-06-13 19:11:25.981 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e3723a5
☆ 2017-06-13 19:11:25.988 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:11:25.991 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:11:25.991 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:11:25.991 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:11:25.993 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:11:25.993 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:11:26.136 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:11:26.136 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:11:26.136 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:11:26.145 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:11:26.165 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:11:26.222 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:11:26.223 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:11:26.223 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:11:26.224 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:11:26.224 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:11:26.225 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:11:26.225 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:11:26.226 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:11:26.227 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:11:26.227 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:11:26.227 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:11:26.228 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:11:26.228 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:11:26.229 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:11:26.250 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:11:26.278 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:11:26.294 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:11:26.298 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:11:26.303 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:11:26.331 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:11:26.335 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:11:26.338 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:11:26.339 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:11:26.340 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:11:26.344 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:11:26.345 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:11:26.345 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:11:26.345 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:11:26.345 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:11:26.346 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=serialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:11:26.346 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property serialPort with lazy=false
☆ 2017-06-13 19:11:26.347 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:serialPort]
☆ 2017-06-13 19:11:26.347 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for serialPort
☆ 2017-06-13 19:11:26.347 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property serialPort
☆ 2017-06-13 19:11:26.348 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:11:26.348 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:11:26.348 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for serialPort
☆ 2017-06-13 19:11:26.350 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:11:26.448 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:11:56.133 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 19:12:56.438 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:12:56.446 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:12:56.447 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:12:56.448 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:12:56.513 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:12:56.514 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:12:56.515 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:12:56.528 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:12:56.530 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:12:56.530 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:12:56.534 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:12:56.676 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:12:56.676 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:12:56.676 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:12:56.685 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:12:56.685 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:12:56.694 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:12:56.699 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:12:56.714 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:12:56.714 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:12:56.714 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:12:56.715 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ea470d
☆ 2017-06-13 19:12:56.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@655373aa
☆ 2017-06-13 19:12:56.716 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@357c4a3
☆ 2017-06-13 19:12:56.717 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:12:56.718 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:12:56.718 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:12:56.719 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:12:56.719 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:12:56.719 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:12:56.761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:12:56.761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:12:56.761 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:12:56.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:12:56.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:12:56.762 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:12:56.763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:12:56.763 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:12:56.764 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:12:56.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:12:56.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:12:56.765 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:12:56.766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:12:56.766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:12:56.766 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:12:56.767 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:12:56.768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:12:56.768 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:12:56.769 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:12:56.769 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:12:56.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:12:56.770 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@316eee5d
☆ 2017-06-13 19:12:56.771 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5002da4
☆ 2017-06-13 19:12:56.772 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:12:56.772 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:12:56.773 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:12:56.774 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:12:56.775 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:12:56.775 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:12:56.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:12:56.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:12:56.776 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:12:56.777 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@33b1e166
☆ 2017-06-13 19:12:56.778 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:12:56.779 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:12:56.779 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:12:56.780 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a0ff196
☆ 2017-06-13 19:12:56.780 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:12:56.781 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:12:56.781 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:12:56.781 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:12:56.782 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:12:56.782 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:12:56.783 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:12:56.783 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:12:56.784 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:12:56.785 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:12:56.785 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@401d184f
☆ 2017-06-13 19:12:56.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:12:56.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:12:56.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:12:56.787 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:12:56.787 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:12:56.787 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:12:56.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4ff05b1
☆ 2017-06-13 19:12:56.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:12:56.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:12:56.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:12:56.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:12:56.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:12:56.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:12:56.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@261aaca9
☆ 2017-06-13 19:12:56.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@1f71486e
☆ 2017-06-13 19:12:56.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:12:56.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:12:56.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75b7337
☆ 2017-06-13 19:12:56.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:12:56.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:12:56.799 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:12:56.799 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:12:56.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ac0108
☆ 2017-06-13 19:12:56.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@45592720
☆ 2017-06-13 19:12:56.803 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@27880c09
☆ 2017-06-13 19:12:56.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:12:56.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:12:56.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d7bb06c
☆ 2017-06-13 19:12:56.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@162b8790
☆ 2017-06-13 19:12:56.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5992df2f
☆ 2017-06-13 19:12:56.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d97170
☆ 2017-06-13 19:12:56.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76c14b17
☆ 2017-06-13 19:12:56.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c9c5558
☆ 2017-06-13 19:12:56.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@73389e43
☆ 2017-06-13 19:12:56.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e3723a5
☆ 2017-06-13 19:12:56.814 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:12:56.816 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:12:56.817 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:12:56.817 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:12:56.819 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:12:56.819 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:12:56.958 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:12:56.958 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:12:56.958 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:12:56.967 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:12:56.986 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:12:57.042 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:12:57.042 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:12:57.043 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:12:57.043 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:12:57.043 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:12:57.044 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:12:57.044 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:12:57.045 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:12:57.046 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:12:57.046 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:12:57.047 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:12:57.047 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:12:57.047 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:12:57.048 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:12:57.069 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:12:57.088 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:12:57.102 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:12:57.106 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:12:57.110 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:12:57.131 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:12:57.134 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:12:57.135 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:12:57.136 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:12:57.137 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:12:57.141 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:12:57.141 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:12:57.141 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:12:57.141 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:12:57.141 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:12:57.143 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=serialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:12:57.143 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property serialPort with lazy=false
☆ 2017-06-13 19:12:57.143 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:serialPort]
☆ 2017-06-13 19:12:57.143 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for serialPort
☆ 2017-06-13 19:12:57.143 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property serialPort
☆ 2017-06-13 19:12:57.144 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:12:57.144 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:12:57.145 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for serialPort
☆ 2017-06-13 19:12:57.146 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:12:57.226 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:13:10.960 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:13:19.399 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:14:46.216 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:14:46.224 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:14:46.225 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:14:46.227 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:14:46.290 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:14:46.291 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:14:46.292 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:14:46.305 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:14:46.306 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:14:46.307 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:14:46.310 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:14:46.456 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:14:46.456 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:14:46.457 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:14:46.465 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:14:46.466 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:14:46.475 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:14:46.481 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:14:46.495 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@49eaa411
☆ 2017-06-13 19:14:46.495 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@49eaa411
☆ 2017-06-13 19:14:46.496 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@49eaa411
☆ 2017-06-13 19:14:46.496 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@258e4dbe
☆ 2017-06-13 19:14:46.497 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@72abe7c5
☆ 2017-06-13 19:14:46.498 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@40326e09
☆ 2017-06-13 19:14:46.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@cc9be70
☆ 2017-06-13 19:14:46.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@cc9be70
☆ 2017-06-13 19:14:46.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@cc9be70
☆ 2017-06-13 19:14:46.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@d5099a9
☆ 2017-06-13 19:14:46.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@d5099a9
☆ 2017-06-13 19:14:46.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@d5099a9
☆ 2017-06-13 19:14:46.541 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@78f32daa
☆ 2017-06-13 19:14:46.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@78f32daa
☆ 2017-06-13 19:14:46.542 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78f32daa
☆ 2017-06-13 19:14:46.543 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@77f72db
☆ 2017-06-13 19:14:46.544 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@77f72db
☆ 2017-06-13 19:14:46.544 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77f72db
☆ 2017-06-13 19:14:46.546 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@8cf1d3
☆ 2017-06-13 19:14:46.546 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@8cf1d3
☆ 2017-06-13 19:14:46.546 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@8cf1d3
☆ 2017-06-13 19:14:46.548 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@cfcb637
☆ 2017-06-13 19:14:46.548 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@cfcb637
☆ 2017-06-13 19:14:46.548 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@cfcb637
☆ 2017-06-13 19:14:46.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@51a1c9a2
☆ 2017-06-13 19:14:46.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@51a1c9a2
☆ 2017-06-13 19:14:46.549 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51a1c9a2
☆ 2017-06-13 19:14:46.551 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@208ecfe
☆ 2017-06-13 19:14:46.551 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@208ecfe
☆ 2017-06-13 19:14:46.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@12dccb64
☆ 2017-06-13 19:14:46.552 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@12dccb64
☆ 2017-06-13 19:14:46.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@2f993aed
☆ 2017-06-13 19:14:46.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@2f993aed
☆ 2017-06-13 19:14:46.553 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@19895d69
☆ 2017-06-13 19:14:46.554 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@a4e3e17
☆ 2017-06-13 19:14:46.555 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@58e11c11
☆ 2017-06-13 19:14:46.555 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@58e11c11
☆ 2017-06-13 19:14:46.557 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@7bc88be7
☆ 2017-06-13 19:14:46.557 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@7bc88be7
☆ 2017-06-13 19:14:46.558 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@77659c05
☆ 2017-06-13 19:14:46.558 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77659c05
☆ 2017-06-13 19:14:46.559 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@660fd491
☆ 2017-06-13 19:14:46.560 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@660fd491
☆ 2017-06-13 19:14:46.560 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@660fd491
☆ 2017-06-13 19:14:46.561 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7e6715f1
☆ 2017-06-13 19:14:46.562 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@7f71bc17
☆ 2017-06-13 19:14:46.563 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f71bc17
☆ 2017-06-13 19:14:46.563 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f71bc17
☆ 2017-06-13 19:14:46.563 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52ae59b4
☆ 2017-06-13 19:14:46.564 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@7694c62b
☆ 2017-06-13 19:14:46.564 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7694c62b
☆ 2017-06-13 19:14:46.565 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@2b4c6c88
☆ 2017-06-13 19:14:46.565 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2b4c6c88
☆ 2017-06-13 19:14:46.566 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ef6d6ab
☆ 2017-06-13 19:14:46.566 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ef6d6ab
☆ 2017-06-13 19:14:46.567 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@5cf26cad
☆ 2017-06-13 19:14:46.567 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5cf26cad
☆ 2017-06-13 19:14:46.568 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1fa3317b
☆ 2017-06-13 19:14:46.568 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1fa3317b
☆ 2017-06-13 19:14:46.568 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@33ab96f5
☆ 2017-06-13 19:14:46.569 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@403df9f
☆ 2017-06-13 19:14:46.569 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@403df9f
☆ 2017-06-13 19:14:46.569 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@403df9f
☆ 2017-06-13 19:14:46.570 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c5512db
☆ 2017-06-13 19:14:46.570 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c5512db
☆ 2017-06-13 19:14:46.570 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c5512db
☆ 2017-06-13 19:14:46.571 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@184ed38e
☆ 2017-06-13 19:14:46.572 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@246df6e
☆ 2017-06-13 19:14:46.572 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@246df6e
☆ 2017-06-13 19:14:46.572 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@246df6e
☆ 2017-06-13 19:14:46.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@302a1e99
☆ 2017-06-13 19:14:46.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@302a1e99
☆ 2017-06-13 19:14:46.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@302a1e99
☆ 2017-06-13 19:14:46.573 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@1307ac75
☆ 2017-06-13 19:14:46.574 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@60bd436e
☆ 2017-06-13 19:14:46.576 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@3a251988
☆ 2017-06-13 19:14:46.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a251988
☆ 2017-06-13 19:14:46.577 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@31349e88
☆ 2017-06-13 19:14:46.579 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@1692cefd
☆ 2017-06-13 19:14:46.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1692cefd
☆ 2017-06-13 19:14:46.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@7b5ce49b
☆ 2017-06-13 19:14:46.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7b5ce49b
☆ 2017-06-13 19:14:46.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2989580a
☆ 2017-06-13 19:14:46.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3134da40
☆ 2017-06-13 19:14:46.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@6964f76f
☆ 2017-06-13 19:14:46.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@2216554c
☆ 2017-06-13 19:14:46.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2216554c
☆ 2017-06-13 19:14:46.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@142976e9
☆ 2017-06-13 19:14:46.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@405ed15
☆ 2017-06-13 19:14:46.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7e4b2da3
☆ 2017-06-13 19:14:46.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@916c01
☆ 2017-06-13 19:14:46.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5fd0dcc4
☆ 2017-06-13 19:14:46.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7496ff6e
☆ 2017-06-13 19:14:46.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5397e26a
☆ 2017-06-13 19:14:46.589 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@586d7d7d
☆ 2017-06-13 19:14:46.600 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:14:46.602 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:14:46.603 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:14:46.603 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:14:46.606 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:14:46.607 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:14:46.758 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:14:46.758 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:14:46.758 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:14:46.766 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:14:46.786 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:14:46.842 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:14:46.842 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:14:46.842 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:14:46.843 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:14:46.843 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:14:46.844 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:14:46.844 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:14:46.845 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:14:46.845 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:14:46.846 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:14:46.846 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:14:46.889 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:14:46.890 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:14:46.890 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:14:46.911 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:14:46.929 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:14:46.944 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:14:46.948 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:14:46.952 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:14:46.976 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:14:46.979 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:14:46.981 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:14:46.982 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:14:46.984 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:14:46.988 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:14:46.988 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:14:46.988 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:14:46.988 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:14:46.988 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:14:46.989 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:14:46.990 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:14:46.991 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:14:47.013 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:14:47.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:14:47.014 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:14:47.015 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@37ef4b56
☆ 2017-06-13 19:14:47.016 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:14:47.017 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:14:47.018 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:14:47.018 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:14:47.018 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:14:47.050 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:14:47.052 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:14:47.052 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5ec9b141, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:14:47.059 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:14:47.082 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:14:47.082 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:14:47.112 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:14:47.112 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:14:47.152 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:14:47.152 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:14:47.152 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:14:47.152 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:14:47.153 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:14:47.153 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:14:47.168 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dd93099]
☆ 2017-06-13 19:14:47.169 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.169 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.180 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.185 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.186 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:14:47.187 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ec7f68]
☆ 2017-06-13 19:14:47.187 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.187 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.187 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.187 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.187 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22813740]
☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.188 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dfe49be]
☆ 2017-06-13 19:14:47.189 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.189 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.189 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.189 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.190 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.190 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3814cf3b]
☆ 2017-06-13 19:14:47.190 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.190 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.190 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.191 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.191 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.191 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52c68573]
☆ 2017-06-13 19:14:47.191 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.191 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.191 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.192 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.192 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.192 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@790d55f5]
☆ 2017-06-13 19:14:47.192 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.192 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.193 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.193 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.193 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.193 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64334b4]
☆ 2017-06-13 19:14:47.193 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.194 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.194 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.194 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.194 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.194 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3038dc7]
☆ 2017-06-13 19:14:47.195 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.195 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.195 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.196 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.196 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:14:47.196 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ad22531]
☆ 2017-06-13 19:14:47.196 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.196 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.196 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.197 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.197 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:14:47.197 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2312c154]
☆ 2017-06-13 19:14:47.197 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:14:47.197 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:14:47.198 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:14:47.198 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:14:47.198 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:14:47.214 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:14:47.214 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:14:47.214 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:14:47.218 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:14:47.232 [JavaFX Application Thread] INFO  o.h.t.s.e.i.InformationExtractorJdbcDatabaseMetaDataImpl
		MESSAGE: HHH000262: Table not found: MeWConfig
☆ 2017-06-13 19:14:47.233 [JavaFX Application Thread] INFO  o.h.t.s.e.i.InformationExtractorJdbcDatabaseMetaDataImpl
		MESSAGE: HHH000262: Table not found: MeWConfig
☆ 2017-06-13 19:14:47.248 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:14:47.249 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:14:47.250 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:14:47.252 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:14:47.252 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:14:47.253 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@178449d5
☆ 2017-06-13 19:14:47.254 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 9c775f22-c96d-437b-88a7-8cb6d007c482 (<unnamed>)
☆ 2017-06-13 19:14:47.254 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:14:47.287 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:14:47.358 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:15:00.654 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:15:05.746 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:15:05.747 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:15:05.747 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:15:05.755 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:15:19.107 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:15:19.115 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:15:19.116 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:15:19.118 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:15:19.183 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:15:19.185 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:15:19.186 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:15:19.198 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:15:19.200 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:15:19.200 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:15:19.204 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:15:19.348 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:15:19.348 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:15:19.348 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:15:19.357 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:15:19.357 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:15:19.366 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:15:19.372 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:15:19.385 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:15:19.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:15:19.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:15:19.386 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ea470d
☆ 2017-06-13 19:15:19.387 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@655373aa
☆ 2017-06-13 19:15:19.388 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@357c4a3
☆ 2017-06-13 19:15:19.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:15:19.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:15:19.389 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:15:19.390 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:15:19.390 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:15:19.390 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:15:19.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:15:19.428 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:15:19.429 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:15:19.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:15:19.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:15:19.430 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:15:19.431 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:15:19.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:15:19.432 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:15:19.433 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:15:19.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:15:19.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:15:19.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:15:19.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:15:19.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:15:19.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:15:19.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:15:19.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:15:19.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:15:19.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:15:19.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:15:19.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@316eee5d
☆ 2017-06-13 19:15:19.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5002da4
☆ 2017-06-13 19:15:19.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:15:19.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:15:19.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:15:19.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:15:19.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:15:19.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:15:19.445 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:15:19.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:15:19.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:15:19.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@33b1e166
☆ 2017-06-13 19:15:19.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:15:19.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:15:19.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:15:19.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a0ff196
☆ 2017-06-13 19:15:19.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:15:19.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:15:19.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:15:19.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:15:19.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:15:19.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:15:19.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:15:19.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:15:19.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:15:19.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:15:19.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@401d184f
☆ 2017-06-13 19:15:19.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:15:19.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:15:19.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:15:19.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:15:19.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:15:19.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:15:19.457 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4ff05b1
☆ 2017-06-13 19:15:19.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:15:19.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:15:19.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:15:19.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:15:19.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:15:19.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:15:19.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@261aaca9
☆ 2017-06-13 19:15:19.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@1f71486e
☆ 2017-06-13 19:15:19.463 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:15:19.463 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:15:19.463 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75b7337
☆ 2017-06-13 19:15:19.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:15:19.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:15:19.468 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:15:19.468 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:15:19.469 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ac0108
☆ 2017-06-13 19:15:19.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@45592720
☆ 2017-06-13 19:15:19.472 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@27880c09
☆ 2017-06-13 19:15:19.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:15:19.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:15:19.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d7bb06c
☆ 2017-06-13 19:15:19.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@162b8790
☆ 2017-06-13 19:15:19.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5992df2f
☆ 2017-06-13 19:15:19.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d97170
☆ 2017-06-13 19:15:19.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76c14b17
☆ 2017-06-13 19:15:19.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c9c5558
☆ 2017-06-13 19:15:19.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@73389e43
☆ 2017-06-13 19:15:19.476 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e3723a5
☆ 2017-06-13 19:15:19.484 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:15:19.486 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:15:19.486 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:15:19.486 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:15:19.488 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:15:19.489 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:15:19.634 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:15:19.634 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:15:19.634 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:15:19.643 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:15:19.662 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:15:19.720 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:15:19.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:15:19.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:15:19.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:15:19.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:15:19.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:15:19.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:15:19.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:15:19.724 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:15:19.725 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:15:19.725 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:15:19.725 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:15:19.726 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:15:19.726 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:15:19.748 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:15:19.768 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:15:19.782 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:15:19.786 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:15:19.790 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:15:19.812 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:15:19.815 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:15:19.816 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:15:19.817 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:15:19.819 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:15:19.822 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:15:19.822 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:15:19.822 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:15:19.822 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:15:19.823 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:15:19.823 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:15:19.824 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:15:19.825 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:15:19.847 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:15:19.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:15:19.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:15:19.848 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:15:19.849 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:15:19.850 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1a120373
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:15:19.851 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:15:19.852 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:15:19.852 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:15:19.852 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:15:19.852 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:15:19.852 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:15:19.882 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:15:19.884 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:15:19.884 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@180bf39, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:15:19.891 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:15:19.913 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:15:19.913 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:15:19.921 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:15:19.922 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:15:19.961 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:15:19.961 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:15:19.961 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:15:19.961 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:15:19.961 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:15:19.961 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:15:19.977 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@322b1cb4]
☆ 2017-06-13 19:15:19.977 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.978 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.988 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.991 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:19.993 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:15:19.993 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5443e044]
☆ 2017-06-13 19:15:19.993 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.993 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.993 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.994 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:19.994 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:15:19.994 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e57233c]
☆ 2017-06-13 19:15:19.994 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.994 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.994 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.995 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:19.995 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:19.995 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5169c57a]
☆ 2017-06-13 19:15:19.995 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.995 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.996 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.996 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:19.996 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:19.996 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22348aa]
☆ 2017-06-13 19:15:19.996 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.997 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.997 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.997 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:19.997 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:19.997 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1da0163b]
☆ 2017-06-13 19:15:19.997 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.998 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.998 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.998 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:19.998 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:19.998 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46d8a284]
☆ 2017-06-13 19:15:19.999 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:19.999 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:19.999 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:19.999 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:20.000 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:20.000 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33490c70]
☆ 2017-06-13 19:15:20.000 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:20.000 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:20.000 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:20.001 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:20.001 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:20.001 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f7114d]
☆ 2017-06-13 19:15:20.001 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:20.001 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:20.002 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:20.002 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:20.002 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:15:20.002 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23d17ecc]
☆ 2017-06-13 19:15:20.002 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:20.002 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:20.003 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:20.003 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:20.003 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:15:20.003 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5acc44d0]
☆ 2017-06-13 19:15:20.004 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:15:20.004 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:15:20.004 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:15:20.004 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:15:20.004 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:15:20.017 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:15:20.017 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:15:20.018 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:15:20.020 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:15:20.036 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:15:20.039 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:15:20.040 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:15:20.041 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:15:20.042 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:15:20.042 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:15:20.043 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@71f4f10a
☆ 2017-06-13 19:15:20.044 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 0e669f0b-e81c-4890-a450-0db308c3eba7 (<unnamed>)
☆ 2017-06-13 19:15:20.045 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:15:20.080 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:15:20.142 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:15:32.582 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:15:40.598 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:15:42.265 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:15:42.266 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:15:42.266 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:15:42.270 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:16:42.073 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:16:42.080 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:16:42.082 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:16:42.083 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:16:42.148 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:16:42.149 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:16:42.150 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:16:42.163 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:16:42.165 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:16:42.165 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:16:42.168 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:16:42.351 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:16:42.351 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:16:42.351 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:16:42.363 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:16:42.364 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:16:42.374 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:16:42.379 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:16:42.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:16:42.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:16:42.394 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ed677c9
☆ 2017-06-13 19:16:42.395 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79ea470d
☆ 2017-06-13 19:16:42.396 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@655373aa
☆ 2017-06-13 19:16:42.396 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@357c4a3
☆ 2017-06-13 19:16:42.397 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:16:42.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:16:42.398 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b959adf
☆ 2017-06-13 19:16:42.399 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:16:42.399 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:16:42.399 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7137b3ac
☆ 2017-06-13 19:16:42.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:16:42.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:16:42.434 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@58f140b5
☆ 2017-06-13 19:16:42.435 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:16:42.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:16:42.436 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1aaed22d
☆ 2017-06-13 19:16:42.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:16:42.437 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:16:42.438 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@48ef73c
☆ 2017-06-13 19:16:42.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:16:42.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:16:42.439 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@415d9d73
☆ 2017-06-13 19:16:42.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:16:42.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:16:42.440 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@43431327
☆ 2017-06-13 19:16:42.441 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:16:42.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@61e30041
☆ 2017-06-13 19:16:42.442 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:16:42.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38ba7c3
☆ 2017-06-13 19:16:42.443 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:16:42.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@63c7dd48
☆ 2017-06-13 19:16:42.444 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@316eee5d
☆ 2017-06-13 19:16:42.445 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5002da4
☆ 2017-06-13 19:16:42.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:16:42.446 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d0bbb56
☆ 2017-06-13 19:16:42.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:16:42.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@3f3228a2
☆ 2017-06-13 19:16:42.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:16:42.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6186a721
☆ 2017-06-13 19:16:42.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:16:42.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:16:42.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4ea13b81
☆ 2017-06-13 19:16:42.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@33b1e166
☆ 2017-06-13 19:16:42.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:16:42.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:16:42.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d6bedcf
☆ 2017-06-13 19:16:42.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a0ff196
☆ 2017-06-13 19:16:42.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:16:42.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@9f1cfff
☆ 2017-06-13 19:16:42.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:16:42.455 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36f18fcb
☆ 2017-06-13 19:16:42.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:16:42.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5bc5590c
☆ 2017-06-13 19:16:42.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:16:42.456 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@160b5e87
☆ 2017-06-13 19:16:42.457 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:16:42.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2a6fedfd
☆ 2017-06-13 19:16:42.458 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@401d184f
☆ 2017-06-13 19:16:42.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:16:42.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:16:42.459 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@4452b30c
☆ 2017-06-13 19:16:42.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:16:42.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:16:42.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c7369b9
☆ 2017-06-13 19:16:42.460 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@4ff05b1
☆ 2017-06-13 19:16:42.461 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:16:42.461 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:16:42.461 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@7aca3a51
☆ 2017-06-13 19:16:42.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:16:42.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:16:42.462 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2492d79a
☆ 2017-06-13 19:16:42.463 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@261aaca9
☆ 2017-06-13 19:16:42.463 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@1f71486e
☆ 2017-06-13 19:16:42.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:16:42.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e0bf287
☆ 2017-06-13 19:16:42.466 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75b7337
☆ 2017-06-13 19:16:42.469 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:16:42.469 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@447076bb
☆ 2017-06-13 19:16:42.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:16:42.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@10ad18ec
☆ 2017-06-13 19:16:42.471 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ac0108
☆ 2017-06-13 19:16:42.474 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@45592720
☆ 2017-06-13 19:16:42.475 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@27880c09
☆ 2017-06-13 19:16:42.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:16:42.477 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37238b18
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3d7bb06c
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@162b8790
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5992df2f
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d97170
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76c14b17
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c9c5558
☆ 2017-06-13 19:16:42.478 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@73389e43
☆ 2017-06-13 19:16:42.479 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e3723a5
☆ 2017-06-13 19:16:42.486 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:16:42.488 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:16:42.489 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:16:42.489 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:16:42.491 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:16:42.491 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:16:42.635 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:16:42.635 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:16:42.635 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:16:42.644 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:16:42.663 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:16:42.718 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:16:42.719 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:16:42.719 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:16:42.719 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:16:42.720 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:16:42.720 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:16:42.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:16:42.721 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:16:42.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:16:42.722 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:16:42.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:16:42.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:16:42.723 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:16:42.724 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:16:42.745 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:16:42.764 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:16:42.778 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:16:42.782 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:16:42.786 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:16:42.808 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:16:42.810 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:16:42.812 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:16:42.813 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:16:42.814 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:16:42.817 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:16:42.818 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:16:42.818 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:16:42.818 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:16:42.818 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:16:42.819 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:16:42.819 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:16:42.820 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:16:42.842 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:16:42.843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:16:42.843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:16:42.843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:16:42.843 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:16:42.844 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1a120373
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:16:42.845 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:16:42.846 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:16:42.881 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:16:42.883 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:16:42.892 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@180bf39, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:16:42.901 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:16:42.924 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:16:42.924 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:16:42.933 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:16:42.933 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:16:42.972 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:16:42.972 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:16:42.972 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:16:42.972 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:16:42.973 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:16:42.973 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:16:42.987 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@322b1cb4]
☆ 2017-06-13 19:16:42.988 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:42.988 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:42.998 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.001 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.003 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:16:43.003 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5443e044]
☆ 2017-06-13 19:16:43.003 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.003 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.004 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.004 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.004 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:16:43.004 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e57233c]
☆ 2017-06-13 19:16:43.004 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.004 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.005 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.005 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.005 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.005 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5169c57a]
☆ 2017-06-13 19:16:43.005 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.006 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.006 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.006 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.006 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.006 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22348aa]
☆ 2017-06-13 19:16:43.007 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.007 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.007 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.007 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.007 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.008 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1da0163b]
☆ 2017-06-13 19:16:43.008 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.008 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.008 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.008 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.009 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.009 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46d8a284]
☆ 2017-06-13 19:16:43.009 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.009 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.009 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.010 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.010 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.010 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33490c70]
☆ 2017-06-13 19:16:43.010 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.010 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.010 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.011 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.011 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.011 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f7114d]
☆ 2017-06-13 19:16:43.011 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.012 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.012 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.012 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.012 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:16:43.012 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23d17ecc]
☆ 2017-06-13 19:16:43.013 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.013 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.013 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.013 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5acc44d0]
☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:16:43.014 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:16:43.027 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:16:43.027 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:16:43.027 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:16:43.029 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:16:43.046 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:16:43.048 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:16:43.049 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:16:43.050 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:16:43.051 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:16:43.051 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:16:43.052 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@71f4f10a
☆ 2017-06-13 19:16:43.054 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 37b3674f-d28a-4704-9a1c-b6086dcdea9d (<unnamed>)
☆ 2017-06-13 19:16:43.054 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:16:43.086 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:16:43.145 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:17:00.097 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:17:00.098 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:17:00.098 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:17:00.104 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:21:09.461 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:21:09.469 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:21:09.471 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:21:09.472 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:21:09.537 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:21:09.538 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:21:09.539 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:21:09.552 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:21:09.553 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:21:09.554 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:21:09.557 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:21:09.701 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:21:09.701 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:21:09.702 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:21:09.710 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:21:09.711 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:21:09.720 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:21:09.726 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:21:09.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@263bb3c8
☆ 2017-06-13 19:21:09.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@263bb3c8
☆ 2017-06-13 19:21:09.740 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@263bb3c8
☆ 2017-06-13 19:21:09.741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3bb4a3cc
☆ 2017-06-13 19:21:09.741 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@4759f06e
☆ 2017-06-13 19:21:09.742 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@525b595a
☆ 2017-06-13 19:21:09.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@109156eb
☆ 2017-06-13 19:21:09.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@109156eb
☆ 2017-06-13 19:21:09.743 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@109156eb
☆ 2017-06-13 19:21:09.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@6710544f
☆ 2017-06-13 19:21:09.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@6710544f
☆ 2017-06-13 19:21:09.744 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6710544f
☆ 2017-06-13 19:21:09.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@232f23fa
☆ 2017-06-13 19:21:09.745 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@232f23fa
☆ 2017-06-13 19:21:09.746 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@232f23fa
☆ 2017-06-13 19:21:09.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@228cc27
☆ 2017-06-13 19:21:09.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@228cc27
☆ 2017-06-13 19:21:09.786 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@228cc27
☆ 2017-06-13 19:21:09.787 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2d8cba37
☆ 2017-06-13 19:21:09.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@2d8cba37
☆ 2017-06-13 19:21:09.788 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@2d8cba37
☆ 2017-06-13 19:21:09.789 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7f9b70c1
☆ 2017-06-13 19:21:09.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@7f9b70c1
☆ 2017-06-13 19:21:09.790 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f9b70c1
☆ 2017-06-13 19:21:09.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@47634fcf
☆ 2017-06-13 19:21:09.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@47634fcf
☆ 2017-06-13 19:21:09.791 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@47634fcf
☆ 2017-06-13 19:21:09.792 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1b0662ed
☆ 2017-06-13 19:21:09.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1b0662ed
☆ 2017-06-13 19:21:09.793 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@11e918a2
☆ 2017-06-13 19:21:09.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@11e918a2
☆ 2017-06-13 19:21:09.794 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@7fa22c62
☆ 2017-06-13 19:21:09.795 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@7fa22c62
☆ 2017-06-13 19:21:09.795 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6fb57501
☆ 2017-06-13 19:21:09.796 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@13be6c02
☆ 2017-06-13 19:21:09.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@21ddb85
☆ 2017-06-13 19:21:09.797 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@21ddb85
☆ 2017-06-13 19:21:09.799 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@767d1c65
☆ 2017-06-13 19:21:09.799 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@767d1c65
☆ 2017-06-13 19:21:09.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@6740f4b0
☆ 2017-06-13 19:21:09.800 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6740f4b0
☆ 2017-06-13 19:21:09.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@37318b33
☆ 2017-06-13 19:21:09.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37318b33
☆ 2017-06-13 19:21:09.802 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37318b33
☆ 2017-06-13 19:21:09.804 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@39b2e
☆ 2017-06-13 19:21:09.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@589f544a
☆ 2017-06-13 19:21:09.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@589f544a
☆ 2017-06-13 19:21:09.805 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@589f544a
☆ 2017-06-13 19:21:09.806 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4bc2e294
☆ 2017-06-13 19:21:09.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@40a39e9c
☆ 2017-06-13 19:21:09.807 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@40a39e9c
☆ 2017-06-13 19:21:09.808 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@4c968480
☆ 2017-06-13 19:21:09.808 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4c968480
☆ 2017-06-13 19:21:09.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@48abcd7b
☆ 2017-06-13 19:21:09.809 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@48abcd7b
☆ 2017-06-13 19:21:09.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@78f2265e
☆ 2017-06-13 19:21:09.810 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78f2265e
☆ 2017-06-13 19:21:09.811 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a3267
☆ 2017-06-13 19:21:09.811 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a3267
☆ 2017-06-13 19:21:09.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@76a6add5
☆ 2017-06-13 19:21:09.812 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@1564d98e
☆ 2017-06-13 19:21:09.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@1564d98e
☆ 2017-06-13 19:21:09.813 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@1564d98e
☆ 2017-06-13 19:21:09.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@da1ba58
☆ 2017-06-13 19:21:09.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@da1ba58
☆ 2017-06-13 19:21:09.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@da1ba58
☆ 2017-06-13 19:21:09.814 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@274d98de
☆ 2017-06-13 19:21:09.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@12026a78
☆ 2017-06-13 19:21:09.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@12026a78
☆ 2017-06-13 19:21:09.815 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@12026a78
☆ 2017-06-13 19:21:09.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@59f6531e
☆ 2017-06-13 19:21:09.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@59f6531e
☆ 2017-06-13 19:21:09.816 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@59f6531e
☆ 2017-06-13 19:21:09.817 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@33e8caa3
☆ 2017-06-13 19:21:09.817 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@6eb40a7e
☆ 2017-06-13 19:21:09.820 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@44ca6d97
☆ 2017-06-13 19:21:09.820 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@44ca6d97
☆ 2017-06-13 19:21:09.821 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67f23ce2
☆ 2017-06-13 19:21:09.823 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@28803610
☆ 2017-06-13 19:21:09.823 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@28803610
☆ 2017-06-13 19:21:09.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@68423c69
☆ 2017-06-13 19:21:09.825 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@68423c69
☆ 2017-06-13 19:21:09.826 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4259f7aa
☆ 2017-06-13 19:21:09.828 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fc44005
☆ 2017-06-13 19:21:09.829 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@1f33f09
☆ 2017-06-13 19:21:09.831 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@21feb725
☆ 2017-06-13 19:21:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@21feb725
☆ 2017-06-13 19:21:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@14f981ec
☆ 2017-06-13 19:21:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@406a5bc9
☆ 2017-06-13 19:21:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1dcf7fd7
☆ 2017-06-13 19:21:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a8cf04a
☆ 2017-06-13 19:21:09.832 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@62a2f016
☆ 2017-06-13 19:21:09.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@70845b98
☆ 2017-06-13 19:21:09.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@16d3b398
☆ 2017-06-13 19:21:09.833 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4b000fa8
☆ 2017-06-13 19:21:09.840 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:21:09.842 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:21:09.843 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:21:09.843 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:21:09.845 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:21:09.845 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:21:09.989 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:21:09.990 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:21:09.990 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:21:09.998 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:21:10.018 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:21:10.073 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:21:10.073 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:21:10.074 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:21:10.074 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:21:10.074 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:21:10.075 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:21:10.075 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:21:10.076 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:21:10.077 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:21:10.077 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:21:10.078 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:21:10.078 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:21:10.078 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:21:10.079 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:21:10.100 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:21:10.119 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:21:10.133 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:21:10.136 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:21:10.141 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:21:10.163 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:21:10.166 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:21:10.167 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:21:10.168 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:21:10.169 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:21:10.173 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:21:10.173 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:21:10.173 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:21:10.173 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:21:10.173 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:21:10.174 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:21:10.174 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:21:10.175 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:21:10.198 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:21:10.199 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:21:10.200 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@207d61f0
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:21:10.201 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:21:10.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:21:10.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:21:10.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:21:10.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:21:10.202 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:21:10.234 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:21:10.235 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:21:10.235 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7a2447e1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:21:10.243 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:21:10.265 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:21:10.265 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:21:10.274 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:21:10.274 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:21:10.314 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:21:10.315 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:21:10.315 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:21:10.315 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:21:10.315 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:21:10.315 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:21:10.329 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382ae0a9]
☆ 2017-06-13 19:21:10.330 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.330 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.340 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.343 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.344 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@668ad24b]
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c018fd9]
☆ 2017-06-13 19:21:10.345 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22ef9883]
☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.346 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3766831d]
☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.347 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.348 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.348 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.348 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43be7209]
☆ 2017-06-13 19:21:10.348 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.348 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.348 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a2bd79f]
☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.349 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@296817a6]
☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.350 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.351 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420c7b7a]
☆ 2017-06-13 19:21:10.351 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.351 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.351 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.351 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a3723]
☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.352 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:21:10.353 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1be39867]
☆ 2017-06-13 19:21:10.353 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:21:10.353 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:21:10.353 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:21:10.353 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:21:10.353 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:21:10.365 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:21:10.365 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:21:10.365 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:21:10.367 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:21:10.384 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:21:10.386 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:21:10.386 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:21:10.388 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:21:10.389 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:21:10.389 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:21:10.390 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@55f3368f
☆ 2017-06-13 19:21:10.391 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 286721be-715a-460a-96d3-e5615e4f65ab (<unnamed>)
☆ 2017-06-13 19:21:10.391 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:21:10.424 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:21:10.436 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_ from MeWConfig this_
☆ 2017-06-13 19:23:54.666 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:23:54.674 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:23:54.675 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:23:54.677 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:23:54.743 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:23:54.744 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:23:54.745 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:23:54.758 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:23:54.759 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:23:54.760 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:23:54.763 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:23:54.907 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:23:54.907 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:23:54.908 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:23:54.916 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:23:54.917 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:23:54.927 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:23:54.932 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:23:54.946 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ce4864c
☆ 2017-06-13 19:23:54.947 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ce4864c
☆ 2017-06-13 19:23:54.947 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ce4864c
☆ 2017-06-13 19:23:54.948 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e7b27d2
☆ 2017-06-13 19:23:54.949 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@6efaaf56
☆ 2017-06-13 19:23:54.950 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@5544577b
☆ 2017-06-13 19:23:54.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@32531bab
☆ 2017-06-13 19:23:54.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@32531bab
☆ 2017-06-13 19:23:54.951 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32531bab
☆ 2017-06-13 19:23:54.952 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@df83ead
☆ 2017-06-13 19:23:54.953 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@df83ead
☆ 2017-06-13 19:23:54.953 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@df83ead
☆ 2017-06-13 19:23:54.954 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@63771287
☆ 2017-06-13 19:23:54.954 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@63771287
☆ 2017-06-13 19:23:54.955 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@63771287
☆ 2017-06-13 19:23:54.956 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@52f467c8
☆ 2017-06-13 19:23:54.956 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@52f467c8
☆ 2017-06-13 19:23:54.956 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f467c8
☆ 2017-06-13 19:23:54.958 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@49f3c87d
☆ 2017-06-13 19:23:54.958 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@49f3c87d
☆ 2017-06-13 19:23:54.958 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@49f3c87d
☆ 2017-06-13 19:23:54.959 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4c72f1f9
☆ 2017-06-13 19:23:54.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4c72f1f9
☆ 2017-06-13 19:23:54.960 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c72f1f9
☆ 2017-06-13 19:23:55.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1986b853
☆ 2017-06-13 19:23:55.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1986b853
☆ 2017-06-13 19:23:55.000 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1986b853
☆ 2017-06-13 19:23:55.001 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5eea5769
☆ 2017-06-13 19:23:55.002 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5eea5769
☆ 2017-06-13 19:23:55.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@198ad5f1
☆ 2017-06-13 19:23:55.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@198ad5f1
☆ 2017-06-13 19:23:55.003 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@48b7dd83
☆ 2017-06-13 19:23:55.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@48b7dd83
☆ 2017-06-13 19:23:55.004 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@279b3f63
☆ 2017-06-13 19:23:55.005 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f836598
☆ 2017-06-13 19:23:55.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@6d9c18e1
☆ 2017-06-13 19:23:55.006 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d9c18e1
☆ 2017-06-13 19:23:55.007 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@61b0ee9a
☆ 2017-06-13 19:23:55.008 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61b0ee9a
☆ 2017-06-13 19:23:55.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@7942d5ac
☆ 2017-06-13 19:23:55.009 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7942d5ac
☆ 2017-06-13 19:23:55.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@2e0439d7
☆ 2017-06-13 19:23:55.010 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2e0439d7
☆ 2017-06-13 19:23:55.011 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2e0439d7
☆ 2017-06-13 19:23:55.012 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@766d870c
☆ 2017-06-13 19:23:55.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@6b954091
☆ 2017-06-13 19:23:55.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6b954091
☆ 2017-06-13 19:23:55.013 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6b954091
☆ 2017-06-13 19:23:55.014 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62635a8e
☆ 2017-06-13 19:23:55.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@626f9afe
☆ 2017-06-13 19:23:55.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@626f9afe
☆ 2017-06-13 19:23:55.015 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@475d0a53
☆ 2017-06-13 19:23:55.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@475d0a53
☆ 2017-06-13 19:23:55.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1de4f6cd
☆ 2017-06-13 19:23:55.016 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1de4f6cd
☆ 2017-06-13 19:23:55.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@4fa370e9
☆ 2017-06-13 19:23:55.017 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4fa370e9
☆ 2017-06-13 19:23:55.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e93ba6c
☆ 2017-06-13 19:23:55.018 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e93ba6c
☆ 2017-06-13 19:23:55.019 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29841709
☆ 2017-06-13 19:23:55.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@15e2cfa1
☆ 2017-06-13 19:23:55.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@15e2cfa1
☆ 2017-06-13 19:23:55.020 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@15e2cfa1
☆ 2017-06-13 19:23:55.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3768ffcf
☆ 2017-06-13 19:23:55.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3768ffcf
☆ 2017-06-13 19:23:55.021 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3768ffcf
☆ 2017-06-13 19:23:55.022 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@40631ce6
☆ 2017-06-13 19:23:55.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@5b4ac058
☆ 2017-06-13 19:23:55.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@5b4ac058
☆ 2017-06-13 19:23:55.023 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@5b4ac058
☆ 2017-06-13 19:23:55.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4743df3c
☆ 2017-06-13 19:23:55.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4743df3c
☆ 2017-06-13 19:23:55.024 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4743df3c
☆ 2017-06-13 19:23:55.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@7e2e726d
☆ 2017-06-13 19:23:55.025 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@23ec7c8c
☆ 2017-06-13 19:23:55.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@79cd7e70
☆ 2017-06-13 19:23:55.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@79cd7e70
☆ 2017-06-13 19:23:55.028 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d342645
☆ 2017-06-13 19:23:55.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@4974b8df
☆ 2017-06-13 19:23:55.031 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4974b8df
☆ 2017-06-13 19:23:55.033 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4c2490f1
☆ 2017-06-13 19:23:55.033 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4c2490f1
☆ 2017-06-13 19:23:55.034 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5050ae78
☆ 2017-06-13 19:23:55.036 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7ba16221
☆ 2017-06-13 19:23:55.037 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@47fad42c
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@641c3e12
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@641c3e12
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@69b0867d
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6cd9d9f7
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54c73ea4
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65e95464
☆ 2017-06-13 19:23:55.040 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@807b5ca
☆ 2017-06-13 19:23:55.041 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ab3c35c
☆ 2017-06-13 19:23:55.041 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47ecfab0
☆ 2017-06-13 19:23:55.041 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6889dc5d
☆ 2017-06-13 19:23:55.048 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:23:55.050 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:23:55.051 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:23:55.051 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:23:55.053 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:23:55.053 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:23:55.199 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:23:55.269 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:23:55.269 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:23:55.284 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:23:55.305 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:23:55.360 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:23:55.361 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:23:55.361 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:23:55.361 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:23:55.362 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:23:55.362 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:23:55.363 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:23:55.363 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:23:55.364 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:23:55.364 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:23:55.365 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:23:55.365 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:23:55.365 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:23:55.366 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:23:55.387 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:23:55.407 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:23:55.421 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:23:55.425 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:23:55.430 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:23:55.452 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:23:55.454 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:23:55.456 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:23:55.456 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:23:55.458 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:23:55.461 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:23:55.461 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:23:55.461 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:23:55.462 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:23:55.462 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:23:55.462 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:23:55.463 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:23:55.464 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:23:55.486 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:23:55.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:23:55.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:23:55.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:23:55.487 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:23:55.488 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7b10ecf9
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:23:55.489 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:23:55.490 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:23:55.521 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:23:55.523 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:23:55.523 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@376f7db1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:23:55.530 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:23:55.552 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:23:55.552 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:23:55.561 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:23:55.561 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:23:55.602 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:23:55.602 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:23:55.602 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:23:55.602 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:23:55.602 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:23:55.602 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:23:55.617 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35366174]
☆ 2017-06-13 19:23:55.618 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.618 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.627 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.631 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.632 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:23:55.633 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@326e98c2]
☆ 2017-06-13 19:23:55.633 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.633 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.633 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.633 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.633 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6acb45bf]
☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.634 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@290f3f9f]
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c21834e]
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.635 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b151197]
☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.636 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69755f7c]
☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.637 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2086b7c4]
☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.638 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.639 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e9f86cf]
☆ 2017-06-13 19:23:55.639 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.639 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.639 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.640 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.640 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:23:55.640 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c353a7e]
☆ 2017-06-13 19:23:55.640 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.640 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.640 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.641 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.641 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:23:55.641 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16317fec]
☆ 2017-06-13 19:23:55.641 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:23:55.641 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:23:55.642 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:23:55.642 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:23:55.642 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:23:55.654 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:23:55.654 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:23:55.654 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:23:55.657 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:23:55.674 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:23:55.676 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:23:55.676 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:23:55.678 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:23:55.679 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:23:55.679 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:23:55.680 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@ebdccb4
☆ 2017-06-13 19:23:55.681 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 420daf5b-ecc1-4ab6-b779-484c876b9095 (<unnamed>)
☆ 2017-06-13 19:23:55.681 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:23:55.721 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:23:55.733 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_ from MeWConfig this_
☆ 2017-06-13 19:23:55.808 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:24:00.664 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:24:06.652 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:24:06.652 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:24:06.653 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:24:06.654 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:24:21.227 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:24:21.235 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:24:21.236 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:24:21.238 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:24:21.306 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:24:21.307 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:24:21.308 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:24:21.321 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:24:21.322 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:24:21.322 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:24:21.326 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:24:21.476 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:24:21.476 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:24:21.476 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:24:21.485 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:24:21.486 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:24:21.495 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:24:21.512 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:24:21.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:24:21.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:24:21.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:24:21.527 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@213318f
☆ 2017-06-13 19:24:21.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@40b5c9d
☆ 2017-06-13 19:24:21.528 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@3453a8be
☆ 2017-06-13 19:24:21.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:24:21.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:24:21.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:24:21.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:24:21.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:24:21.531 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:24:21.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:24:21.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:24:21.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:24:21.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:24:21.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:24:21.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:24:21.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:24:21.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:24:21.535 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:24:21.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:24:21.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:24:21.536 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:24:21.537 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:24:21.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:24:21.538 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:24:21.580 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:24:21.581 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:24:21.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:24:21.582 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:24:21.583 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:24:21.583 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:24:21.584 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39286aae
☆ 2017-06-13 19:24:21.585 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1f9dee
☆ 2017-06-13 19:24:21.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:24:21.586 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:24:21.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:24:21.588 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:24:21.590 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:24:21.590 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:24:21.591 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:24:21.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:24:21.592 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:24:21.593 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45ca12b9
☆ 2017-06-13 19:24:21.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:24:21.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:24:21.595 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:24:21.596 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@766af64
☆ 2017-06-13 19:24:21.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:24:21.597 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:24:21.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:24:21.598 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:24:21.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:24:21.599 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:24:21.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:24:21.600 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:24:21.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:24:21.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:24:21.601 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7de91b7d
☆ 2017-06-13 19:24:21.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:24:21.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:24:21.602 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:24:21.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:24:21.603 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:24:21.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:24:21.604 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@1fef8245
☆ 2017-06-13 19:24:21.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:24:21.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:24:21.605 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:24:21.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:24:21.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:24:21.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:24:21.606 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@3228f2ff
☆ 2017-06-13 19:24:21.607 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@825f8e6
☆ 2017-06-13 19:24:21.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:24:21.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:24:21.610 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4513543e
☆ 2017-06-13 19:24:21.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:24:21.613 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:24:21.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:24:21.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:24:21.615 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a8409f8
☆ 2017-06-13 19:24:21.618 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1434eb92
☆ 2017-06-13 19:24:21.619 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@137eae7
☆ 2017-06-13 19:24:21.621 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e4b69c4
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c786958
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61abadb5
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@713fbbac
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24efe906
☆ 2017-06-13 19:24:21.622 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b42766a
☆ 2017-06-13 19:24:21.623 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@738a2b2
☆ 2017-06-13 19:24:21.623 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bd69b22
☆ 2017-06-13 19:24:21.630 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:24:21.632 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:24:21.632 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:24:21.633 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:24:21.635 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:24:21.635 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:24:21.780 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:24:21.780 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:24:21.781 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:24:21.789 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:24:21.809 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:24:21.864 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:24:21.864 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:24:21.865 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:24:21.865 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:24:21.865 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:24:21.866 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:24:21.866 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:24:21.867 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:24:21.867 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:24:21.868 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:24:21.868 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:24:21.868 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:24:21.869 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:24:21.869 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:24:21.890 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:24:21.909 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:24:21.923 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:24:21.927 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:24:21.932 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:24:21.954 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:24:21.957 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:24:21.958 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:24:21.959 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:24:21.960 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:24:21.964 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:24:21.964 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:24:21.964 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:24:21.964 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:24:21.964 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:24:21.965 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:24:21.965 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:24:21.966 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:24:21.989 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:24:21.990 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:24:21.991 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7cc64a9e
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:24:21.992 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:24:21.993 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:24:22.024 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:24:22.026 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:24:22.026 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1b1ca606, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:24:22.033 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:24:22.055 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:24:22.055 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:24:22.064 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:24:22.064 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:24:22.104 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:24:22.104 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:24:22.104 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:24:22.104 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:24:22.104 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:24:22.105 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:24:22.119 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a6c6696]
☆ 2017-06-13 19:24:22.120 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.121 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.131 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.134 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198f6cb1]
☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.136 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b5ae4f]
☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.137 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32183baf]
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df29b2c]
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.138 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7a1760]
☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.139 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50c38a8e]
☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.140 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1779d54e]
☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.141 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382b81e7]
☆ 2017-06-13 19:24:22.142 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.142 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.142 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.142 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.143 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:24:22.143 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e76d93]
☆ 2017-06-13 19:24:22.143 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.143 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.143 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.143 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b484a8]
☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:24:22.144 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:24:22.159 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:24:22.159 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:24:22.159 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:24:22.162 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:24:22.180 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:24:22.183 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:24:22.183 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:24:22.185 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:24:22.186 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:24:22.186 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:24:22.187 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6feb2c3e
☆ 2017-06-13 19:24:22.188 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 68bc17df-0ac6-426c-9af6-f5ac41f8de71 (<unnamed>)
☆ 2017-06-13 19:24:22.189 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:24:22.225 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:24:22.241 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_ from MeWConfig this_
☆ 2017-06-13 19:24:22.321 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:24:26.287 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:24:26.287 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:24:26.288 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:24:26.289 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:27:01.865 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:27:01.872 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:27:01.874 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:27:01.875 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:27:01.940 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:27:01.942 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:27:01.943 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:27:01.956 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:27:01.957 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:27:01.957 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:27:01.961 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:27:02.105 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:27:02.105 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:27:02.105 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:27:02.114 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:27:02.114 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:27:02.123 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:27:02.129 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:27:02.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:27:02.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:27:02.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:27:02.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@213318f
☆ 2017-06-13 19:27:02.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@40b5c9d
☆ 2017-06-13 19:27:02.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@3453a8be
☆ 2017-06-13 19:27:02.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:27:02.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:27:02.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:27:02.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:27:02.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:27:02.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:27:02.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:27:02.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:27:02.191 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:27:02.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:27:02.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:27:02.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:27:02.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:27:02.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:27:02.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:27:02.195 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:27:02.195 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:27:02.195 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:27:02.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:27:02.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:27:02.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:27:02.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:27:02.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:27:02.199 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:27:02.199 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:27:02.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:27:02.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:27:02.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39286aae
☆ 2017-06-13 19:27:02.201 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1f9dee
☆ 2017-06-13 19:27:02.202 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:27:02.202 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:27:02.203 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:27:02.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:27:02.205 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:27:02.205 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:27:02.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:27:02.207 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:27:02.207 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:27:02.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45ca12b9
☆ 2017-06-13 19:27:02.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:27:02.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:27:02.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:27:02.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@766af64
☆ 2017-06-13 19:27:02.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:27:02.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:27:02.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:27:02.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:27:02.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:27:02.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:27:02.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:27:02.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:27:02.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:27:02.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:27:02.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7de91b7d
☆ 2017-06-13 19:27:02.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:27:02.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:27:02.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:27:02.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:27:02.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:27:02.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:27:02.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@1fef8245
☆ 2017-06-13 19:27:02.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:27:02.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:27:02.220 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:27:02.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:27:02.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:27:02.221 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:27:02.222 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@3228f2ff
☆ 2017-06-13 19:27:02.222 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@825f8e6
☆ 2017-06-13 19:27:02.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:27:02.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:27:02.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4513543e
☆ 2017-06-13 19:27:02.228 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:27:02.228 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:27:02.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:27:02.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:27:02.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a8409f8
☆ 2017-06-13 19:27:02.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1434eb92
☆ 2017-06-13 19:27:02.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@137eae7
☆ 2017-06-13 19:27:02.236 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:27:02.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:27:02.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e4b69c4
☆ 2017-06-13 19:27:02.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c786958
☆ 2017-06-13 19:27:02.237 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61abadb5
☆ 2017-06-13 19:27:02.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@713fbbac
☆ 2017-06-13 19:27:02.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24efe906
☆ 2017-06-13 19:27:02.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b42766a
☆ 2017-06-13 19:27:02.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@738a2b2
☆ 2017-06-13 19:27:02.238 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bd69b22
☆ 2017-06-13 19:27:02.246 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:27:02.248 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:27:02.248 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:27:02.248 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:27:02.251 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:27:02.251 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:27:02.399 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:27:02.399 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:27:02.399 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:27:02.407 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:27:02.427 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:27:02.483 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:27:02.484 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:27:02.484 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:27:02.484 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:27:02.485 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:27:02.485 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:27:02.486 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:27:02.487 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:27:02.487 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:27:02.488 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:27:02.488 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:27:02.488 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:27:02.488 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:27:02.489 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:27:02.511 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:27:02.530 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:27:02.544 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:27:02.548 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:27:02.553 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:27:02.575 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:27:02.578 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:27:02.579 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:27:02.580 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:27:02.581 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:27:02.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:27:02.585 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:27:02.585 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:27:02.585 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:27:02.585 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:27:02.586 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:27:02.586 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:27:02.587 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:27:02.610 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:27:02.611 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:27:02.612 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7cc64a9e
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:27:02.613 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:27:02.614 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:27:02.647 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:27:02.648 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:27:02.648 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1b1ca606, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:27:02.655 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:27:02.678 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:27:02.678 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:27:02.686 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:27:02.686 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:27:02.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:27:02.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:27:02.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:27:02.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:27:02.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:27:02.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:27:02.742 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a6c6696]
☆ 2017-06-13 19:27:02.743 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.749 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.759 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.763 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.764 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198f6cb1]
☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:27:02.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b5ae4f]
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32183baf]
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df29b2c]
☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.767 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.768 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.768 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.768 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7a1760]
☆ 2017-06-13 19:27:02.768 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.768 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.768 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50c38a8e]
☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.769 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1779d54e]
☆ 2017-06-13 19:27:02.770 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.770 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.770 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382b81e7]
☆ 2017-06-13 19:27:02.771 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.771 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e76d93]
☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.772 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:27:02.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b484a8]
☆ 2017-06-13 19:27:02.773 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:27:02.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:27:02.773 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:27:02.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:27:02.773 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:27:02.786 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:27:02.786 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:27:02.786 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:27:02.788 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:27:02.805 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:27:02.807 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:27:02.808 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:27:02.809 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:27:02.810 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:27:02.810 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:27:02.811 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6feb2c3e
☆ 2017-06-13 19:27:02.814 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 570e1f8a-16de-4a69-9dfc-5044a816d4c9 (<unnamed>)
☆ 2017-06-13 19:27:02.814 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:27:02.848 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:27:02.861 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_ from MeWConfig this_
☆ 2017-06-13 19:27:02.927 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:27:13.878 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:27:14.710 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:27:27.469 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:27:27.470 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:27:27.470 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:27:27.471 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:29:13.168 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:29:13.176 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:29:13.177 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:29:13.179 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:29:13.242 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:29:13.243 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:29:13.244 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:29:13.258 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:29:13.259 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:29:13.259 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:29:13.263 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:29:13.409 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:29:13.409 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:29:13.409 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:29:13.418 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:29:13.419 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:29:13.428 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:29:13.433 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:29:13.447 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:29:13.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:29:13.448 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:29:13.449 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@213318f
☆ 2017-06-13 19:29:13.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@40b5c9d
☆ 2017-06-13 19:29:13.450 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@3453a8be
☆ 2017-06-13 19:29:13.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:29:13.451 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:29:13.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:29:13.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:29:13.452 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:29:13.453 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:29:13.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:29:13.454 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:29:13.488 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:29:13.490 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:29:13.490 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:29:13.491 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:29:13.492 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:29:13.492 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:29:13.492 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:29:13.493 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:29:13.493 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:29:13.494 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:29:13.495 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:29:13.495 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:29:13.495 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:29:13.496 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:29:13.496 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:29:13.497 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:29:13.497 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:29:13.498 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:29:13.498 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:29:13.498 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39286aae
☆ 2017-06-13 19:29:13.499 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1f9dee
☆ 2017-06-13 19:29:13.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:29:13.500 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:29:13.501 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:29:13.501 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:29:13.502 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:29:13.503 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:29:13.504 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:29:13.504 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:29:13.504 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:29:13.505 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45ca12b9
☆ 2017-06-13 19:29:13.506 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:29:13.506 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:29:13.506 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:29:13.507 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@766af64
☆ 2017-06-13 19:29:13.507 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:29:13.508 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:29:13.508 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:29:13.508 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:29:13.509 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:29:13.509 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:29:13.510 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:29:13.510 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:29:13.511 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:29:13.511 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:29:13.512 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7de91b7d
☆ 2017-06-13 19:29:13.512 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:29:13.513 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:29:13.513 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:29:13.513 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:29:13.514 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:29:13.514 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:29:13.514 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@1fef8245
☆ 2017-06-13 19:29:13.515 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:29:13.515 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:29:13.515 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:29:13.516 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:29:13.516 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:29:13.516 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:29:13.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@3228f2ff
☆ 2017-06-13 19:29:13.517 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@825f8e6
☆ 2017-06-13 19:29:13.520 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:29:13.520 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:29:13.521 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4513543e
☆ 2017-06-13 19:29:13.523 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:29:13.523 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:29:13.525 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:29:13.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:29:13.526 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a8409f8
☆ 2017-06-13 19:29:13.529 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1434eb92
☆ 2017-06-13 19:29:13.530 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@137eae7
☆ 2017-06-13 19:29:13.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:29:13.532 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:29:13.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e4b69c4
☆ 2017-06-13 19:29:13.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c786958
☆ 2017-06-13 19:29:13.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61abadb5
☆ 2017-06-13 19:29:13.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@713fbbac
☆ 2017-06-13 19:29:13.533 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24efe906
☆ 2017-06-13 19:29:13.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b42766a
☆ 2017-06-13 19:29:13.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@738a2b2
☆ 2017-06-13 19:29:13.534 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bd69b22
☆ 2017-06-13 19:29:13.541 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:29:13.543 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:29:13.544 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:29:13.544 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:29:13.546 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:29:13.547 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:29:13.691 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:29:13.691 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:29:13.692 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:29:13.700 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:29:13.720 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:29:13.775 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:29:13.776 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:29:13.776 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:29:13.776 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:29:13.777 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:29:13.777 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:29:13.778 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:29:13.778 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:29:13.779 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:29:13.779 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:29:13.780 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:29:13.780 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:29:13.780 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:29:13.781 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:29:13.803 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:29:13.821 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:13.836 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:29:13.840 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:29:13.844 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:29:13.866 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:29:13.869 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:29:13.870 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:29:13.871 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:29:13.873 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:29:13.876 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:29:13.876 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:29:13.876 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:29:13.877 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:29:13.877 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:29:13.878 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:29:13.878 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:29:13.879 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:29:13.901 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:29:13.902 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:29:13.902 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:29:13.903 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:29:13.904 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7cc64a9e
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:29:13.905 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:29:13.906 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:29:13.938 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:29:13.939 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:29:13.939 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1b1ca606, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:29:13.947 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:29:13.969 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:29:13.969 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:13.978 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:29:13.978 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:14.018 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:14.018 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:29:14.018 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:29:14.018 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:29:14.019 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:29:14.019 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:29:14.033 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a6c6696]
☆ 2017-06-13 19:29:14.034 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.035 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.044 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.048 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.050 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:14.050 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198f6cb1]
☆ 2017-06-13 19:29:14.050 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.050 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.050 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.051 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.051 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:14.051 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b5ae4f]
☆ 2017-06-13 19:29:14.051 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.051 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.051 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.052 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.052 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.052 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32183baf]
☆ 2017-06-13 19:29:14.052 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.052 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.052 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.053 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.053 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.053 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df29b2c]
☆ 2017-06-13 19:29:14.053 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.053 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.053 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.054 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.054 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.054 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7a1760]
☆ 2017-06-13 19:29:14.054 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.054 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.055 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.055 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.055 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.055 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50c38a8e]
☆ 2017-06-13 19:29:14.055 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.055 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.056 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.056 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.056 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.056 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1779d54e]
☆ 2017-06-13 19:29:14.056 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.056 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.057 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.057 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.057 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.057 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382b81e7]
☆ 2017-06-13 19:29:14.058 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.058 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.058 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.058 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.059 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:14.059 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e76d93]
☆ 2017-06-13 19:29:14.059 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.059 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.059 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.059 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.060 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:14.060 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b484a8]
☆ 2017-06-13 19:29:14.060 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:14.060 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:14.060 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:14.060 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:14.061 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:14.073 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:14.073 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:14.073 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:29:14.075 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:29:14.092 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:29:14.095 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:29:14.096 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:29:14.097 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:29:14.098 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:29:14.098 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:29:14.099 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6feb2c3e
☆ 2017-06-13 19:29:14.100 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: f6a12100-6706-4951-8629-440b108d19ee (<unnamed>)
☆ 2017-06-13 19:29:14.101 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:29:14.134 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:29:14.147 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_ from MeWConfig this_
☆ 2017-06-13 19:29:14.213 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:29:19.020 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:29:19.022 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: begin
☆ 2017-06-13 19:29:19.025 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: call next value for hibernate_sequence
☆ 2017-06-13 19:29:19.028 [JavaFX Application Thread] DEBUG o.h.id.enhanced.SequenceStructure
		MESSAGE: Sequence value obtained: 1
☆ 2017-06-13 19:29:19.028 [JavaFX Application Thread] DEBUG o.h.r.j.i.ResourceRegistryStandardImpl
		MESSAGE: HHH000387: ResultSet's statement was not registered
☆ 2017-06-13 19:29:19.029 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractSaveEventListener
		MESSAGE: Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
☆ 2017-06-13 19:29:19.038 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: committing
☆ 2017-06-13 19:29:19.039 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Processing flush-time cascades
☆ 2017-06-13 19:29:19.039 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Dirty checking collections
☆ 2017-06-13 19:29:19.040 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
☆ 2017-06-13 19:29:19.040 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
☆ 2017-06-13 19:29:19.041 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: Listing entities:
☆ 2017-06-13 19:29:19.041 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: ru.mewhpm.dao.MeWConfig{ID=1, deviceName=dgjerdjmxfgmfgmfgmdfm}
☆ 2017-06-13 19:29:19.046 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:29:24.593 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:29:24.594 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:29:24.594 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:29:24.595 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:29:36.813 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:29:36.821 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:29:36.822 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:29:36.824 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:29:36.889 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:29:36.890 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:29:36.891 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:29:36.904 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:29:36.906 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:29:36.906 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:29:36.910 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:29:37.056 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:29:37.056 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:29:37.056 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:29:37.065 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:29:37.065 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:29:37.075 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:29:37.080 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:29:37.094 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:29:37.095 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:29:37.095 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@72f511e5
☆ 2017-06-13 19:29:37.096 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@213318f
☆ 2017-06-13 19:29:37.096 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@40b5c9d
☆ 2017-06-13 19:29:37.097 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@3453a8be
☆ 2017-06-13 19:29:37.098 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:29:37.098 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:29:37.098 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75155aa4
☆ 2017-06-13 19:29:37.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:29:37.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:29:37.099 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72deb517
☆ 2017-06-13 19:29:37.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:29:37.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:29:37.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@143d667a
☆ 2017-06-13 19:29:37.138 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:29:37.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:29:37.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f59c62
☆ 2017-06-13 19:29:37.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:29:37.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:29:37.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@4f8df39c
☆ 2017-06-13 19:29:37.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:29:37.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:29:37.141 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5a9f2368
☆ 2017-06-13 19:29:37.142 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:29:37.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:29:37.143 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5320f58f
☆ 2017-06-13 19:29:37.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:29:37.144 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ed3b0ad
☆ 2017-06-13 19:29:37.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:29:37.145 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10ba9e37
☆ 2017-06-13 19:29:37.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:29:37.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@5cd7b062
☆ 2017-06-13 19:29:37.146 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39286aae
☆ 2017-06-13 19:29:37.147 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e1f9dee
☆ 2017-06-13 19:29:37.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:29:37.148 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@1cdb53e4
☆ 2017-06-13 19:29:37.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:29:37.149 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@67ee218
☆ 2017-06-13 19:29:37.150 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:29:37.151 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@60966c55
☆ 2017-06-13 19:29:37.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:29:37.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:29:37.152 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@18bb0ce8
☆ 2017-06-13 19:29:37.153 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45ca12b9
☆ 2017-06-13 19:29:37.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:29:37.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:29:37.154 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62ae724d
☆ 2017-06-13 19:29:37.155 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@766af64
☆ 2017-06-13 19:29:37.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:29:37.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5e935f
☆ 2017-06-13 19:29:37.156 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:29:37.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bbb9094
☆ 2017-06-13 19:29:37.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:29:37.157 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7b669cbf
☆ 2017-06-13 19:29:37.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:29:37.158 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2cd1fff6
☆ 2017-06-13 19:29:37.159 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:29:37.159 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1382043a
☆ 2017-06-13 19:29:37.160 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7de91b7d
☆ 2017-06-13 19:29:37.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:29:37.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:29:37.161 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@581ce33c
☆ 2017-06-13 19:29:37.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:29:37.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:29:37.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@30880977
☆ 2017-06-13 19:29:37.162 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@1fef8245
☆ 2017-06-13 19:29:37.163 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:29:37.163 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:29:37.163 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@3b7968cc
☆ 2017-06-13 19:29:37.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:29:37.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:29:37.164 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@658ec047
☆ 2017-06-13 19:29:37.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@3228f2ff
☆ 2017-06-13 19:29:37.165 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@825f8e6
☆ 2017-06-13 19:29:37.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:29:37.168 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@354ffa6f
☆ 2017-06-13 19:29:37.169 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4513543e
☆ 2017-06-13 19:29:37.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:29:37.171 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8567cc8
☆ 2017-06-13 19:29:37.173 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:29:37.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7cea7055
☆ 2017-06-13 19:29:37.174 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a8409f8
☆ 2017-06-13 19:29:37.176 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1434eb92
☆ 2017-06-13 19:29:37.178 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@137eae7
☆ 2017-06-13 19:29:37.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:29:37.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7424d8a5
☆ 2017-06-13 19:29:37.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e4b69c4
☆ 2017-06-13 19:29:37.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c786958
☆ 2017-06-13 19:29:37.180 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61abadb5
☆ 2017-06-13 19:29:37.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@713fbbac
☆ 2017-06-13 19:29:37.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24efe906
☆ 2017-06-13 19:29:37.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3b42766a
☆ 2017-06-13 19:29:37.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@738a2b2
☆ 2017-06-13 19:29:37.181 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@bd69b22
☆ 2017-06-13 19:29:37.188 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:29:37.190 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:29:37.191 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:29:37.191 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:29:37.193 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:29:37.193 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:29:37.350 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:29:37.350 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:29:37.350 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:29:37.362 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:29:37.387 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:29:37.443 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:29:37.444 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:29:37.444 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:29:37.444 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:29:37.445 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:29:37.445 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:29:37.446 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:29:37.446 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:29:37.447 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:29:37.447 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:29:37.448 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:29:37.448 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:29:37.448 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:29:37.449 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:29:37.472 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:29:37.492 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:37.506 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:29:37.510 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:29:37.514 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:29:37.539 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:29:37.543 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:29:37.545 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:29:37.546 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:29:37.548 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:29:37.554 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:29:37.554 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:29:37.554 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:29:37.554 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:29:37.554 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:29:37.555 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:29:37.556 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:29:37.557 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:29:37.589 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:29:37.590 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:29:37.591 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:29:37.592 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7cc64a9e
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:29:37.593 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:29:37.594 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:29:37.628 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:29:37.630 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:29:37.630 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1b1ca606, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:29:37.655 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:29:37.678 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:29:37.678 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:37.687 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:29:37.687 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:37.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:29:37.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:29:37.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:29:37.727 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, ID) values (?, ?)
☆ 2017-06-13 19:29:37.728 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:29:37.728 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:29:37.742 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a6c6696]
☆ 2017-06-13 19:29:37.743 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.743 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.753 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.757 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.758 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:37.759 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198f6cb1]
☆ 2017-06-13 19:29:37.759 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.759 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.759 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.759 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.759 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b5ae4f]
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32183baf]
☆ 2017-06-13 19:29:37.760 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2df29b2c]
☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.761 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f7a1760]
☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.762 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50c38a8e]
☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.763 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1779d54e]
☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.764 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382b81e7]
☆ 2017-06-13 19:29:37.765 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.765 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.765 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:29:37.765 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e76d93]
☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b484a8]
☆ 2017-06-13 19:29:37.766 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:29:37.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:29:37.767 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:29:37.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:29:37.767 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:37.780 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:37.780 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:29:37.781 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:29:37.784 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:29:37.801 [JavaFX Application Thread] DEBUG org.hibernate.mapping.Table
		MESSAGE: No alter strings for table : MeWConfig
☆ 2017-06-13 19:29:37.803 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:29:37.804 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:29:37.805 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:29:37.806 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:29:37.806 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:29:37.807 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6feb2c3e
☆ 2017-06-13 19:29:37.809 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: 34d3f2d8-455d-4012-8353-85aa2fcfa17a (<unnamed>)
☆ 2017-06-13 19:29:37.809 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:29:37.843 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:29:37.855 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_ from MeWConfig this_
☆ 2017-06-13 19:29:37.858 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-13 19:29:37.860 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-13 19:29:37.866 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-13 19:29:37.867 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-13 19:29:37.939 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 methods are mapped.
☆ 2017-06-13 19:29:43.044 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:29:43.046 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: begin
☆ 2017-06-13 19:29:43.048 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: committing
☆ 2017-06-13 19:29:43.049 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Processing flush-time cascades
☆ 2017-06-13 19:29:43.051 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Dirty checking collections
☆ 2017-06-13 19:29:43.054 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
☆ 2017-06-13 19:29:43.054 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
☆ 2017-06-13 19:29:43.055 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: Listing entities:
☆ 2017-06-13 19:29:43.055 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: ru.mewhpm.dao.MeWConfig{ID=1, deviceName=4yhwrthsrthntgh}
☆ 2017-06-13 19:29:43.059 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:30:00.260 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 3 filelds ready to save.
☆ 2017-06-13 19:30:00.260 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: begin
☆ 2017-06-13 19:30:00.260 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: committing
☆ 2017-06-13 19:30:00.261 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Processing flush-time cascades
☆ 2017-06-13 19:30:00.261 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Dirty checking collections
☆ 2017-06-13 19:30:00.261 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
☆ 2017-06-13 19:30:00.261 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
☆ 2017-06-13 19:30:00.261 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: Listing entities:
☆ 2017-06-13 19:30:00.261 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: ru.mewhpm.dao.MeWConfig{ID=1, deviceName=My MeW for test}
☆ 2017-06-13 19:30:00.262 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: update MeWConfig set deviceName=? where ID=?
☆ 2017-06-13 19:30:07.347 [pool-2-thread-1] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Connection pool now considered primed; min-size will be maintained
☆ 2017-06-13 19:30:31.891 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:30:31.891 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:30:31.893 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:30:31.895 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:34:38.855 [JavaFX Application Thread] DEBUG org.jboss.logging
		MESSAGE: Logging Provider: org.jboss.logging.Slf4jLoggerProvider
☆ 2017-06-13 19:34:38.863 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:34:38.864 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:34:38.865 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:34:38.931 [JavaFX Application Thread] INFO  org.hibernate.Version
		MESSAGE: HHH000412: Hibernate Core {5.0.8.Final}
☆ 2017-06-13 19:34:38.932 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000206: hibernate.properties not found
☆ 2017-06-13 19:34:38.933 [JavaFX Application Thread] INFO  org.hibernate.cfg.Environment
		MESSAGE: HHH000021: Bytecode provider name : javassist
☆ 2017-06-13 19:34:38.946 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
☆ 2017-06-13 19:34:38.948 [JavaFX Application Thread] WARN  org.hibernate.orm.deprecation
		MESSAGE: HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
☆ 2017-06-13 19:34:38.948 [JavaFX Application Thread] DEBUG o.h.b.j.i.s.LocalXmlResourceResolver
		MESSAGE: Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
☆ 2017-06-13 19:34:38.952 [JavaFX Application Thread] DEBUG o.h.b.c.internal.JaxbCfgProcessor
		MESSAGE: cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
☆ 2017-06-13 19:34:39.098 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
☆ 2017-06-13 19:34:39.098 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
☆ 2017-06-13 19:34:39.098 [JavaFX Application Thread] DEBUG o.h.i.internal.IntegratorServiceImpl
		MESSAGE: Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
☆ 2017-06-13 19:34:39.107 [JavaFX Application Thread] DEBUG o.h.service.spi.ServiceBinding
		MESSAGE: Overriding existing service binding [org.hibernate.secure.spi.JaccService]
☆ 2017-06-13 19:34:39.107 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Configuration
		MESSAGE: Building session factory using provided StandardServiceRegistry
☆ 2017-06-13 19:34:39.116 [JavaFX Application Thread] DEBUG o.h.c.i.RegionFactoryInitiator
		MESSAGE: Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
☆ 2017-06-13 19:34:39.122 [JavaFX Application Thread] INFO  o.h.annotations.common.Version
		MESSAGE: HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
☆ 2017-06-13 19:34:39.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ce4864c
☆ 2017-06-13 19:34:39.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration boolean -> org.hibernate.type.BooleanType@2ce4864c
☆ 2017-06-13 19:34:39.136 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ce4864c
☆ 2017-06-13 19:34:39.137 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e7b27d2
☆ 2017-06-13 19:34:39.138 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration true_false -> org.hibernate.type.TrueFalseType@6efaaf56
☆ 2017-06-13 19:34:39.138 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration yes_no -> org.hibernate.type.YesNoType@5544577b
☆ 2017-06-13 19:34:39.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@32531bab
☆ 2017-06-13 19:34:39.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte -> org.hibernate.type.ByteType@32531bab
☆ 2017-06-13 19:34:39.139 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32531bab
☆ 2017-06-13 19:34:39.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration character -> org.hibernate.type.CharacterType@df83ead
☆ 2017-06-13 19:34:39.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char -> org.hibernate.type.CharacterType@df83ead
☆ 2017-06-13 19:34:39.140 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@df83ead
☆ 2017-06-13 19:34:39.185 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@63771287
☆ 2017-06-13 19:34:39.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration short -> org.hibernate.type.ShortType@63771287
☆ 2017-06-13 19:34:39.186 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Short -> org.hibernate.type.ShortType@63771287
☆ 2017-06-13 19:34:39.187 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration integer -> org.hibernate.type.IntegerType@52f467c8
☆ 2017-06-13 19:34:39.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration int -> org.hibernate.type.IntegerType@52f467c8
☆ 2017-06-13 19:34:39.188 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f467c8
☆ 2017-06-13 19:34:39.189 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@49f3c87d
☆ 2017-06-13 19:34:39.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration long -> org.hibernate.type.LongType@49f3c87d
☆ 2017-06-13 19:34:39.190 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Long -> org.hibernate.type.LongType@49f3c87d
☆ 2017-06-13 19:34:39.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4c72f1f9
☆ 2017-06-13 19:34:39.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration float -> org.hibernate.type.FloatType@4c72f1f9
☆ 2017-06-13 19:34:39.192 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4c72f1f9
☆ 2017-06-13 19:34:39.193 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1986b853
☆ 2017-06-13 19:34:39.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration double -> org.hibernate.type.DoubleType@1986b853
☆ 2017-06-13 19:34:39.194 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1986b853
☆ 2017-06-13 19:34:39.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5eea5769
☆ 2017-06-13 19:34:39.196 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5eea5769
☆ 2017-06-13 19:34:39.197 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration big_integer -> org.hibernate.type.BigIntegerType@198ad5f1
☆ 2017-06-13 19:34:39.197 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@198ad5f1
☆ 2017-06-13 19:34:39.198 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration string -> org.hibernate.type.StringType@48b7dd83
☆ 2017-06-13 19:34:39.199 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.String -> org.hibernate.type.StringType@48b7dd83
☆ 2017-06-13 19:34:39.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nstring -> org.hibernate.type.StringNVarcharType@279b3f63
☆ 2017-06-13 19:34:39.200 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f836598
☆ 2017-06-13 19:34:39.201 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration url -> org.hibernate.type.UrlType@6d9c18e1
☆ 2017-06-13 19:34:39.202 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d9c18e1
☆ 2017-06-13 19:34:39.203 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration date -> org.hibernate.type.DateType@61b0ee9a
☆ 2017-06-13 19:34:39.203 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Date -> org.hibernate.type.DateType@61b0ee9a
☆ 2017-06-13 19:34:39.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration time -> org.hibernate.type.TimeType@7942d5ac
☆ 2017-06-13 19:34:39.204 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7942d5ac
☆ 2017-06-13 19:34:39.205 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timestamp -> org.hibernate.type.TimestampType@2e0439d7
☆ 2017-06-13 19:34:39.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2e0439d7
☆ 2017-06-13 19:34:39.206 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2e0439d7
☆ 2017-06-13 19:34:39.207 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@766d870c
☆ 2017-06-13 19:34:39.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar -> org.hibernate.type.CalendarType@6b954091
☆ 2017-06-13 19:34:39.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6b954091
☆ 2017-06-13 19:34:39.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6b954091
☆ 2017-06-13 19:34:39.208 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@62635a8e
☆ 2017-06-13 19:34:39.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration locale -> org.hibernate.type.LocaleType@626f9afe
☆ 2017-06-13 19:34:39.209 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@626f9afe
☆ 2017-06-13 19:34:39.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration currency -> org.hibernate.type.CurrencyType@475d0a53
☆ 2017-06-13 19:34:39.210 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@475d0a53
☆ 2017-06-13 19:34:39.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration timezone -> org.hibernate.type.TimeZoneType@1de4f6cd
☆ 2017-06-13 19:34:39.211 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1de4f6cd
☆ 2017-06-13 19:34:39.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration class -> org.hibernate.type.ClassType@4fa370e9
☆ 2017-06-13 19:34:39.212 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4fa370e9
☆ 2017-06-13 19:34:39.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e93ba6c
☆ 2017-06-13 19:34:39.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e93ba6c
☆ 2017-06-13 19:34:39.213 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29841709
☆ 2017-06-13 19:34:39.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration binary -> org.hibernate.type.BinaryType@15e2cfa1
☆ 2017-06-13 19:34:39.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration byte[] -> org.hibernate.type.BinaryType@15e2cfa1
☆ 2017-06-13 19:34:39.214 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [B -> org.hibernate.type.BinaryType@15e2cfa1
☆ 2017-06-13 19:34:39.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3768ffcf
☆ 2017-06-13 19:34:39.215 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3768ffcf
☆ 2017-06-13 19:34:39.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3768ffcf
☆ 2017-06-13 19:34:39.216 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration image -> org.hibernate.type.ImageType@40631ce6
☆ 2017-06-13 19:34:39.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration characters -> org.hibernate.type.CharArrayType@5b4ac058
☆ 2017-06-13 19:34:39.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration char[] -> org.hibernate.type.CharArrayType@5b4ac058
☆ 2017-06-13 19:34:39.217 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [C -> org.hibernate.type.CharArrayType@5b4ac058
☆ 2017-06-13 19:34:39.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4743df3c
☆ 2017-06-13 19:34:39.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4743df3c
☆ 2017-06-13 19:34:39.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4743df3c
☆ 2017-06-13 19:34:39.218 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration text -> org.hibernate.type.TextType@7e2e726d
☆ 2017-06-13 19:34:39.219 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration ntext -> org.hibernate.type.NTextType@23ec7c8c
☆ 2017-06-13 19:34:39.222 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration blob -> org.hibernate.type.BlobType@79cd7e70
☆ 2017-06-13 19:34:39.222 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@79cd7e70
☆ 2017-06-13 19:34:39.222 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d342645
☆ 2017-06-13 19:34:39.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration clob -> org.hibernate.type.ClobType@4974b8df
☆ 2017-06-13 19:34:39.225 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4974b8df
☆ 2017-06-13 19:34:39.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration nclob -> org.hibernate.type.NClobType@4c2490f1
☆ 2017-06-13 19:34:39.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4c2490f1
☆ 2017-06-13 19:34:39.227 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5050ae78
☆ 2017-06-13 19:34:39.230 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7ba16221
☆ 2017-06-13 19:34:39.231 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration serializable -> org.hibernate.type.SerializableType@47fad42c
☆ 2017-06-13 19:34:39.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration object -> org.hibernate.type.ObjectType@641c3e12
☆ 2017-06-13 19:34:39.233 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@641c3e12
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@69b0867d
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6cd9d9f7
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54c73ea4
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65e95464
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@807b5ca
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ab3c35c
☆ 2017-06-13 19:34:39.234 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47ecfab0
☆ 2017-06-13 19:34:39.235 [JavaFX Application Thread] DEBUG org.hibernate.type.BasicTypeRegistry
		MESSAGE: Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6889dc5d
☆ 2017-06-13 19:34:39.242 [JavaFX Application Thread] WARN  org.hibernate.orm.connections
		MESSAGE: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
☆ 2017-06-13 19:34:39.244 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:34:39.245 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001001: Connection properties: {user=mew, password=mew mew}
☆ 2017-06-13 19:34:39.245 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001003: Autocommit mode: false
☆ 2017-06-13 19:34:39.247 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: Initializing Connection pool with 1 Connections
☆ 2017-06-13 19:34:39.247 [JavaFX Application Thread] INFO  o.h.e.j.c.i.DriverManagerConnectionProviderImpl
		MESSAGE: HHH000115: Hibernate connection pool size: 20 (min=1)
☆ 2017-06-13 19:34:39.392 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Database ->
       name : H2
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:34:39.392 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: Driver ->
       name : H2 JDBC Driver
    version : 1.4.191 (2016-01-21)
      major : 1
      minor : 4
☆ 2017-06-13 19:34:39.392 [JavaFX Application Thread] DEBUG o.h.e.j.e.i.JdbcEnvironmentInitiator
		MESSAGE: JDBC version : 4.0
☆ 2017-06-13 19:34:39.402 [JavaFX Application Thread] INFO  org.hibernate.dialect.Dialect
		MESSAGE: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
☆ 2017-06-13 19:34:39.422 [JavaFX Application Thread] DEBUG o.h.e.j.c.i.StandardRefCursorSupport
		MESSAGE: Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
☆ 2017-06-13 19:34:39.493 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
☆ 2017-06-13 19:34:39.494 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
☆ 2017-06-13 19:34:39.494 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:34:39.494 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
☆ 2017-06-13 19:34:39.495 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
☆ 2017-06-13 19:34:39.495 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
☆ 2017-06-13 19:34:39.496 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
☆ 2017-06-13 19:34:39.496 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:34:39.497 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
☆ 2017-06-13 19:34:39.498 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
☆ 2017-06-13 19:34:39.498 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
☆ 2017-06-13 19:34:39.499 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
☆ 2017-06-13 19:34:39.499 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
☆ 2017-06-13 19:34:39.499 [JavaFX Application Thread] DEBUG o.h.i.f.i.DefaultIdentifierGeneratorFactory
		MESSAGE: Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
☆ 2017-06-13 19:34:39.521 [JavaFX Application Thread] DEBUG o.h.boot.model.relational.Namespace
		MESSAGE: Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
☆ 2017-06-13 19:34:39.540 [JavaFX Application Thread] DEBUG org.hibernate.cfg.AnnotationBinder
		MESSAGE: Binding entity from annotated class: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:34:39.554 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
☆ 2017-06-13 19:34:39.558 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Import with entity name MeWConfig
☆ 2017-06-13 19:34:39.562 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.EntityBinder
		MESSAGE: Bind entity ru.mewhpm.dao.MeWConfig on table MeWConfig
☆ 2017-06-13 19:34:39.585 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=ID, insertable=true, updatable=true, unique=true}
☆ 2017-06-13 19:34:39.588 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property ID with lazy=false
☆ 2017-06-13 19:34:39.589 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:ID]
☆ 2017-06-13 19:34:39.590 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for ID
☆ 2017-06-13 19:34:39.592 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property ID
☆ 2017-06-13 19:34:39.595 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=deviceName, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property deviceName with lazy=false
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:deviceName]
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for deviceName
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property deviceName
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Ejb3Column
		MESSAGE: Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MeWConfig), mappingColumn=lastSerialPort, insertable=true, updatable=true, unique=false}
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: MetadataSourceProcessor property lastSerialPort with lazy=false
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.cfg.AbstractPropertyHolder
		MESSAGE: Attempting to locate auto-apply AttributeConverter for property [ru.mewhpm.dao.MeWConfig:lastSerialPort]
☆ 2017-06-13 19:34:39.596 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: building SimpleValue for lastSerialPort
☆ 2017-06-13 19:34:39.597 [JavaFX Application Thread] DEBUG o.h.cfg.annotations.PropertyBinder
		MESSAGE: Building property lastSerialPort
☆ 2017-06-13 19:34:39.597 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for ID
☆ 2017-06-13 19:34:39.598 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for deviceName
☆ 2017-06-13 19:34:39.598 [JavaFX Application Thread] DEBUG o.h.c.annotations.SimpleValueBinder
		MESSAGE: Starting fillSimpleValue for lastSerialPort
☆ 2017-06-13 19:34:39.599 [JavaFX Application Thread] DEBUG org.hibernate.mapping.PrimaryKey
		MESSAGE: Forcing column [id] to be non-null as it is part of the primary key for table [mewconfig]
☆ 2017-06-13 19:34:39.621 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Building session factory
☆ 2017-06-13 19:34:39.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: SessionFactory name : null
☆ 2017-06-13 19:34:39.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic flush during beforeCompletion(): disabled
☆ 2017-06-13 19:34:39.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic session close at end of transaction: disabled
☆ 2017-06-13 19:34:39.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Statistics: disabled
☆ 2017-06-13 19:34:39.622 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Deleted entity synthetic identifier rollback: disabled
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default entity-mode: pojo
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Check Nullability in Core (should be disabled when Bean Validation is on): enabled
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Allow initialization of lazy state outside session : disabled
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Using BatchFetchStyle : LEGACY
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default batch fetch size: -1
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Maximum outer join fetch depth: null
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Default null ordering: NONE
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL updates by primary key: disabled
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Order SQL inserts for batching: disabled
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: multi-tenancy strategy : NONE
☆ 2017-06-13 19:34:39.623 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JTA Track by Thread: enabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Query language substitutions: {}
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JPA query language strict compliance: disabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Named query checking : enabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache: enabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache: disabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7b10ecf9
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache region prefix: null
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Optimize second-level cache for minimal puts: disabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Structured second-level cache entries: disabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Second-level cache direct-reference entries: disabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Automatic eviction of collection cache: disabled
☆ 2017-06-13 19:34:39.624 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch size: 15
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC batch updates for versioned data: enabled
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Scrollable result sets: enabled
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Wrap result sets: disabled
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC3 getGeneratedKeys(): enabled
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: JDBC result set fetch size: null
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Connection release mode: ON_CLOSE
☆ 2017-06-13 19:34:39.625 [JavaFX Application Thread] DEBUG org.hibernate.cfg.Settings
		MESSAGE: Generate SQL with comments: disabled
☆ 2017-06-13 19:34:39.657 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Returning a Reference to the SessionFactory
☆ 2017-06-13 19:34:39.658 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Session factory constructed with filter configurations : {}
☆ 2017-06-13 19:34:39.658 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiating session factory with properties: {javafx.version=8.0.101, hibernate.connection.password=mew mew, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.101-b13, sun.boot.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64, hibernate.connection.username=mew, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@376f7db1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/misaki/devel/Mew/Software/MeWSettings, java.runtime.version=1.8.0_101-b13, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, javafx.runtime.version=8.0.101-b13, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_101/jre/lib/endorsed, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/jdk1.8.0_101/jre/lib/amd64:/usr/java/jdk1.8.0_101/jre/lib/i386::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=4.1.39-56-default, user.home=/home/misaki, user.timezone=Europe/Moscow, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=org.h2.Driver, user.name=misaki, java.class.path=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/misaki/devel/Mew/Software/MeWSettings/target/MeWSettings-0.1a.jar, java.home=/usr/java/jdk1.8.0_101/jre, hibernate.connection.url=jdbc:h2:./mew/database;CIPHER=AES;, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_101, java.ext.dirs=/usr/java/jdk1.8.0_101/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_101/jre/lib/resources.jar:/usr/java/jdk1.8.0_101/jre/lib/rt.jar:/usr/java/jdk1.8.0_101/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_101/jre/lib/jsse.jar:/usr/java/jdk1.8.0_101/jre/lib/jce.jar:/usr/java/jdk1.8.0_101/jre/lib/charsets.jar:/usr/java/jdk1.8.0_101/jre/lib/jfr.jar:/usr/java/jdk1.8.0_101/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, dialect=org.hibernate.dialect.H2Dialect, sun.cpu.isalist=}
☆ 2017-06-13 19:34:39.665 [JavaFX Application Thread] DEBUG o.h.secure.spi.JaccIntegrator
		MESSAGE: Skipping JACC integration as it was not enabled
☆ 2017-06-13 19:34:39.688 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:34:39.688 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:34:39.697 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: Not known whether passed class name [ru.mewhpm.dao.MeWConfig] is safe
☆ 2017-06-13 19:34:39.697 [JavaFX Application Thread] DEBUG o.h.b.internal.ClassLoaderAccessImpl
		MESSAGE: No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:34:39.738 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE: Static SQL for entity: ru.mewhpm.dao.MeWConfig
☆ 2017-06-13 19:34:39.738 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Version select: select ID from MeWConfig where ID =?
☆ 2017-06-13 19:34:39.738 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Snapshot select: select mewconfig_.ID, mewconfig_.deviceName as deviceNa2_0_, mewconfig_.lastSerialPort as lastSeri3_0_ from MeWConfig mewconfig_ where mewconfig_.ID=?
☆ 2017-06-13 19:34:39.738 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Insert 0: insert into MeWConfig (deviceName, lastSerialPort, ID) values (?, ?, ?)
☆ 2017-06-13 19:34:39.738 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Update 0: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-13 19:34:39.738 [JavaFX Application Thread] DEBUG o.h.p.entity.AbstractEntityPersister
		MESSAGE:  Delete 0: delete from MeWConfig where ID=?
☆ 2017-06-13 19:34:39.753 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20786943]
☆ 2017-06-13 19:34:39.754 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.754 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.754 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.764 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.767 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.769 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [NONE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:34:39.769 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28a2ae]
☆ 2017-06-13 19:34:39.769 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe10229]
☆ 2017-06-13 19:34:39.770 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c77c5c2]
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.771 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_NOWAIT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b3632a9]
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.772 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [UPGRADE_SKIPLOCKED]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@391e90e2]
☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.773 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.774 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.774 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.774 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [FORCE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.774 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63dc8b81]
☆ 2017-06-13 19:34:39.774 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.774 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_READ]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dd2bab6]
☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.775 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_WRITE]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2998901e]
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.776 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [PESSIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=? for update
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44ca2044]
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.777 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.spaces.QuerySpacesImpl
		MESSAGE: Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc40554]
☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : deviceName
☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.p.w.spi.MetamodelGraphWalker
		MESSAGE: Visiting attribute path : lastSerialPort
☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.l.p.b.i.FetchStyleLoadPlanBuildingAssociationVisitationStrategy
		MESSAGE: Building LoadPlan...
☆ 2017-06-13 19:34:39.778 [JavaFX Application Thread] DEBUG o.h.l.p.e.i.LoadQueryJoinAndFetchProcessor
		MESSAGE: processing queryspace <gen:0>
☆ 2017-06-13 19:34:39.779 [JavaFX Application Thread] DEBUG o.h.l.p.b.spi.LoadPlanTreePrinter
		MESSAGE: LoadPlan(entity=ru.mewhpm.dao.MeWConfig)
    - Returns
       - EntityReturnImpl(entity=ru.mewhpm.dao.MeWConfig, querySpaceUid=<gen:0>, path=ru.mewhpm.dao.MeWConfig)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ru.mewhpm.dao.MeWConfig)
          - SQL table alias mapping - mewconfig0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

☆ 2017-06-13 19:34:39.779 [JavaFX Application Thread] DEBUG o.h.loader.entity.plan.EntityLoader
		MESSAGE: Static select for entity ru.mewhpm.dao.MeWConfig [OPTIMISTIC_FORCE_INCREMENT]: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:34:39.791 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_MERGE on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:34:39.791 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Static select for action ACTION_REFRESH on entity ru.mewhpm.dao.MeWConfig: select mewconfig0_.ID as ID1_0_0_, mewconfig0_.deviceName as deviceNa2_0_0_, mewconfig0_.lastSerialPort as lastSeri3_0_0_ from MeWConfig mewconfig0_ where mewconfig0_.ID=?
☆ 2017-06-13 19:34:39.792 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: Instantiated session factory
☆ 2017-06-13 19:34:39.794 [JavaFX Application Thread] INFO  o.h.tool.hbm2ddl.SchemaUpdate
		MESSAGE: HHH000228: Running hbm2ddl schema update
☆ 2017-06-13 19:34:39.842 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformInitiator
		MESSAGE: No JtaPlatform was specified, checking resolver
☆ 2017-06-13 19:34:39.842 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.JtaPlatformResolverInitiator
		MESSAGE: No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
☆ 2017-06-13 19:34:39.844 [JavaFX Application Thread] DEBUG o.h.e.t.j.p.i.StandardJtaPlatformResolver
		MESSAGE: Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
☆ 2017-06-13 19:34:39.845 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named HQL queries
☆ 2017-06-13 19:34:39.845 [JavaFX Application Thread] DEBUG o.h.internal.NamedQueryRepository
		MESSAGE: Checking 0 named SQL queries
☆ 2017-06-13 19:34:39.846 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c4fb2ee
☆ 2017-06-13 19:34:39.848 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Registering SessionFactory: ddefee72-8cba-490e-af76-087f3e062525 (<unnamed>)
☆ 2017-06-13 19:34:39.848 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryRegistry
		MESSAGE: Not binding SessionFactory to JNDI, no JNDI name configured
☆ 2017-06-13 19:34:39.883 [JavaFX Application Thread] DEBUG o.h.s.internal.StatisticsInitiator
		MESSAGE: Statistics initialized [enabled=false]
☆ 2017-06-13 19:34:39.896 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: select this_.ID as ID1_0_0_, this_.deviceName as deviceNa2_0_0_, this_.lastSerialPort as lastSeri3_0_0_ from MeWConfig this_
☆ 2017-06-13 19:34:39.898 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result set row: 0
☆ 2017-06-13 19:34:39.900 [JavaFX Application Thread] DEBUG org.hibernate.loader.Loader
		MESSAGE: Result row: EntityKey[ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-13 19:34:39.905 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Resolving associations for [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-13 19:34:39.907 [JavaFX Application Thread] DEBUG o.h.engine.internal.TwoPhaseLoad
		MESSAGE: Done materializing entity [ru.mewhpm.dao.MeWConfig#1]
☆ 2017-06-13 19:34:39.971 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-13 19:34:46.900 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 methods are mapped.
☆ 2017-06-13 19:34:55.897 [JavaFX Application Thread] DEBUG com.jneko.jnekouilib.editor.Editor
		MESSAGE: readObject: 4 filelds ready to save.
☆ 2017-06-13 19:34:55.899 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: begin
☆ 2017-06-13 19:34:55.900 [JavaFX Application Thread] DEBUG o.h.e.t.internal.TransactionImpl
		MESSAGE: committing
☆ 2017-06-13 19:34:55.901 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Processing flush-time cascades
☆ 2017-06-13 19:34:55.903 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Dirty checking collections
☆ 2017-06-13 19:34:55.907 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
☆ 2017-06-13 19:34:55.907 [JavaFX Application Thread] DEBUG o.h.e.i.AbstractFlushingEventListener
		MESSAGE: Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
☆ 2017-06-13 19:34:55.908 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: Listing entities:
☆ 2017-06-13 19:34:55.908 [JavaFX Application Thread] DEBUG o.h.internal.util.EntityPrinter
		MESSAGE: ru.mewhpm.dao.MeWConfig{ID=1, deviceName=My MeW for test, lastSerialPort=/dev/ttyUSB0}
☆ 2017-06-13 19:34:55.912 [JavaFX Application Thread] DEBUG org.hibernate.SQL
		MESSAGE: update MeWConfig set deviceName=?, lastSerialPort=? where ID=?
☆ 2017-06-13 19:34:57.558 [JavaFX Application Thread] DEBUG o.h.internal.SessionFactoryImpl
		MESSAGE: HHH000031: Closing
☆ 2017-06-13 19:34:57.559 [JavaFX Application Thread] DEBUG o.h.s.i.AbstractServiceRegistryImpl
		MESSAGE: Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
☆ 2017-06-13 19:34:57.559 [JavaFX Application Thread] INFO  org.hibernate.orm.connections
		MESSAGE: HHH10001008: Cleaning up connection pool [jdbc:h2:./mew/database;CIPHER=AES;]
☆ 2017-06-13 19:34:57.560 [JavaFX Application Thread] DEBUG o.h.b.r.i.BootstrapServiceRegistryImpl
		MESSAGE: Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
